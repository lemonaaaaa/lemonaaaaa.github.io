<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lemonaaaaa&#39;s blog</title>
  
  <subtitle>A blog recording my life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lemonaaaaa.com/"/>
  <updated>2020-04-21T15:32:19.970Z</updated>
  <id>http://lemonaaaaa.com/</id>
  
  <author>
    <name>Lemon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见的一些User-Agent</title>
    <link href="http://lemonaaaaa.com/2020/04/user-agent/"/>
    <id>http://lemonaaaaa.com/2020/04/user-agent/</id>
    <published>2020-04-21T15:15:34.000Z</published>
    <updated>2020-04-21T15:32:19.970Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>User-Agent我们一般在抓包的时候用，因为要将Python（举例）伪装成正常的用户上网操作，让服务器识别为正常操作返回正常的数据给你。同时，这个也可以去评论其他博客（比如说Valine这种评论系统就会显示你的操作系统和浏览器，你可以修改，让对方感到迷惑：<s>什么年代了都还在用Windows 98？？？</s>）</p><h1 id="操作系统标识"><a class="markdownIt-Anchor" href="#操作系统标识"></a> 操作系统标识</h1><h2 id="freebsd"><a class="markdownIt-Anchor" href="#freebsd"></a> FreeBSD</h2><p>X11; FreeBSD (version no.) i386</p><p>X11; FreeBSD (version no.) AMD64</p><h2 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> Linux</h2><p>X11; Linux ppc</p><p>X11; Linux ppc64</p><p>X11; Linux i686</p><p>X11; Linux x86_64</p><h2 id="mac"><a class="markdownIt-Anchor" href="#mac"></a> Mac</h2><p>Macintosh; PPC Mac OS X</p><p>Macintosh; Intel Mac OS X</p><h2 id="solaris"><a class="markdownIt-Anchor" href="#solaris"></a> Solaris</h2><p>X11; SunOS i86pc</p><p>X11; SunOS sun4u</p><h2 id="windows"><a class="markdownIt-Anchor" href="#windows"></a> Windows</h2><p>Windows NT 10.0 对应操作系统 windows 10</p><p>windows NT 6.2 对应操作系统 windows 8</p><p>Windows NT 6.1 对应操作系统 windows 7</p><p>Windows NT 6.0 对应操作系统 windows vista</p><p>Windows NT 5.2 对应操作系统 windows 2003</p><p>Windows NT 5.1 对应操作系统 windows xp</p><p>Windows NT 5.0 对应操作系统 windows 2000</p><p>Windows ME</p><p>Windows 98 (Windows NT 98)</p><h1 id="常用浏览器"><a class="markdownIt-Anchor" href="#常用浏览器"></a> 常用浏览器</h1><p>safari 5.1 – MAC<br>User-Agent:Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50</p><p>safari 5.1 – Windows<br>User-Agent:Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50</p><p>IE 9.0<br>User-Agent:Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0;<br>IE 8.0<br>User-Agent:Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)<br>IE 7.0<br>User-Agent:Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)<br>IE 6.0<br>User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)</p><p>Firefox 4.0.1 – MAC<br>User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1<br>Firefox 4.0.1 – Windows<br>User-Agent:Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1</p><p>Opera 11.11 – MAC<br>User-Agent:Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; en) Presto/2.8.131 Version/11.11<br>Opera 11.11 – Windows<br>User-Agent:Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11</p><p>Chrome 17.0 – MAC<br>User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11</p><h1 id="国产浏览器"><a class="markdownIt-Anchor" href="#国产浏览器"></a> 国产浏览器</h1><p>Maxthon<br>User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Maxthon 2.0)<br>TT<br>User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; TencentTraveler 4.0)</p><p>The World 2.x<br>User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)</p><p>The World 3.x<br>User-Agent:?Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; The World)</p><p>搜狗浏览器 1.x<br>User-Agent:?Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SE 2.X MetaSr 1.0; SE 2.X MetaSr 1.0; .NET CLR 2.0.50727; SE 2.X MetaSr 1.0)</p><p>360SE<br>User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)</p><p>Avant<br>User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Avant Browser)</p><p>Green Browser<br>User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)</p><h1 id="移动设备端"><a class="markdownIt-Anchor" href="#移动设备端"></a> 移动设备端</h1><p>safari iOS 4.33 – iPhone<br>User-Agent:Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5<br>safari iOS 4.33 – iPod Touch<br>User-Agent:Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5<br>safari iOS 4.33 – iPad<br>User-Agent:Mozilla/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5<br>Android N1<br>User-Agent: Mozilla/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1<br>Android QQ For android<br>User-Agent: MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1<br>Android Opera Mobile<br>User-Agent: Opera/9.80 (Android 2.3.4; Linux; Opera Mobi/build-1107180945; U; en-GB) Presto/2.8.149 Version/11.10<br>Android Pad Moto Xoom<br>User-Agent: Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13<br>BlackBerry<br>User-Agent: Mozilla/5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.337 Mobile Safari/534.1+<br>WebOS HP Touchpad<br>User-Agent: Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.0; U; en-US) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/233.70 Safari/534.6 TouchPad/1.0<br>Nokia N97<br>User-Agent: Mozilla/5.0 (SymbianOS/9.4; Series60/5.0 NokiaN97-1/20.0.019; Profile/MIDP-2.1 Configuration/CLDC-1.1) AppleWebKit/525 (KHTML, like Gecko) BrowserNG/7.1.18124<br>Windows Phone Mango<br>User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; HTC; Titan)</p><p>UC标准<br>User-Agent: NOKIA5700/ UCWEB7.0.2.37/28/999</p><p>UCOpenwave<br>User-Agent: Openwave/ UCWEB7.0.2.37/28/999</p><p>UC Opera<br>User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; ) Opera/UCWEB7.0.2.37/28/999</p>        <div id="aplayer-swULrMpD" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-swULrMpD"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "Contact",              author: "Lulleaux/Giang Pham",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/contact.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/contact.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/contact.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Internet Technology" scheme="http://lemonaaaaa.com/categories/Code-life/Internet-Technology/"/>
    
    
      <category term="爬虫 抓包" scheme="http://lemonaaaaa.com/tags/%E7%88%AC%E8%99%AB-%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>UML 自学笔记</title>
    <link href="http://lemonaaaaa.com/2020/04/uml-notes/"/>
    <id>http://lemonaaaaa.com/2020/04/uml-notes/</id>
    <published>2020-04-18T03:20:56.000Z</published>
    <updated>2020-04-18T03:20:56.583Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><h1 id="uml-简介"><a class="markdownIt-Anchor" href="#uml-简介"></a> UML 简介</h1><p>1997年，<font color="red">OMG</font>（<s>难道是Oh My God？</s>） 组织（Object Management Group对象管理组织）发布了<font color="red">统一建模语言（Unified Modeling Language，UML）</font>。UML 是一种编制软蓝图的标准化语言，它的目标之一就是为开发团队提供标准通用的设计语言来开发和构建计算机应用。UML 提出了一套 IT 专业人员期待多年的统一的标准建模符号。通过使用UML，这些人员能够阅读和交流系统架构和设计规划。UML支持面向对象的技术，能够准确的方便地表达面向对像的概念，体现面向对象的分析和设计风格。</p><p><img alt="UML" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/uml.jpg" class="lazyload"></p><h1 id="uml-模型"><a class="markdownIt-Anchor" href="#uml-模型"></a> UML 模型</h1><ul><li>事物(Things)：UML模型中最基本的构成元素，是具有代表性的成分的抽象</li><li>关系(Relationships)：关系把事物紧密联系在一起</li><li>图(Diagrams )：图是事物和关系的可视化表示</li></ul><h1 id="uml-特点"><a class="markdownIt-Anchor" href="#uml-特点"></a> UML 特点</h1><ul><li>面向对象</li><li>可视化，表达能力强</li><li>独立于过程</li><li>独立于程序设计</li><li>容易掌握使用</li></ul><h1 id="uml-概述"><a class="markdownIt-Anchor" href="#uml-概述"></a> UML 概述</h1><ul><li>UML 是 OMG 在1997年1月提出了创建由对象管理组和 UML1.0 规范草案；</li><li>UML 是一种为面向对象开发系统的产品进行说明、可视化、和编制文档的标准语言；</li><li>UML 作为一种模型语言，它使开发人员专注于建立产品的模型和结构，而不是选用什么程序语言和算法实现；</li><li>UML 是不同于其他常见的编程语言，如C + +，Java中，COBOL等，它是一种绘画语言，用来做软件蓝图；</li><li>UML 不是一种编程语言，但工具可用于生成各种语言的代码中使用UML图；</li><li>UML 可以用来建模非软件系统的处理流程，以及像在一个制造单元等.</li></ul><h1 id="uml-构建模块"><a class="markdownIt-Anchor" href="#uml-构建模块"></a> UML 构建模块</h1><h2 id="构建块的定义"><a class="markdownIt-Anchor" href="#构建块的定义"></a> 构建块的定义</h2><ul><li>事物</li><li>关系</li><li>图</li></ul><h3 id="事物"><a class="markdownIt-Anchor" href="#事物"></a> 事物</h3><ul><li>结构事物</li><li>行为事物</li><li>分组事物</li><li>注释事物</li></ul><h4 id="结构事物"><a class="markdownIt-Anchor" href="#结构事物"></a> 结构事物</h4><p>结构事物是模型中的静态部分，用以呈现概念或实体的表现元素，是软件建模中最常见的元素</p><ul><li>1.类</li></ul><p>类是指具有相同属性、方法、关系和语义的对象的集合。</p><p><img alt="类" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/lei.png" class="lazyload"></p><ul><li>2.接口</li></ul><p>接口是指类或组件所提供的服务（操作），描述了类或组件对外可见的动作。</p><p><img alt="接口" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/jiekou.png" class="lazyload"></p><ul><li>3.协作</li></ul><p>协作定义元素之间的相互作用。</p><p><img alt="协作" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/xiezuo.png" class="lazyload"></p><ul><li>4.用例</li></ul><p>用例定义了执行者（在系统外部和系统交互的人）和被考虑的系统之间的交互来实现的一个业务目标。</p><p><img alt="用例" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/yongli.png" class="lazyload"></p><ul><li>5.组件</li></ul><p>组件描述物理系统的一部分。</p><p><img alt="组件" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/zujian.png" class="lazyload"></p><ul><li>6.节点</li></ul><p>一个节点可以被定义为在运行时存在的物理元素。</p><p><img alt="节点" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/jiedian.png" class="lazyload"></p><h4 id="行为事物"><a class="markdownIt-Anchor" href="#行为事物"></a> 行为事物</h4><p>行为事物指的是 UML 模型中的动态部分，代表语句里的 “动词”，表示模型里随着时空不断变化的部分</p><ul><li>1.交互</li></ul><p>交互被定义为一种行为，包括一组元素之间的消息交换来完成特定的任务。</p><p><img alt="交互" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/jiaohu.png" class="lazyload"></p><ul><li>2.状态机</li></ul><p>状态机由一系列对象的状态组成，它是有用的，一个对象在其生命周期的状态是很重要的。</p><p><img alt="状态机" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/zhuangtaiji.png" class="lazyload"></p><h4 id="分组事物"><a class="markdownIt-Anchor" href="#分组事物"></a> 分组事物</h4><p>可以把分组事物看成是一个"盒子"，模型可以在其中被分解。目前只有一种分组事物，即包（package）。结构事物、动作事物甚至分组事物都有可能放在一个包中。包纯粹是概念上的，只存在于开发阶段，而组件在运行时存在。</p><ul><li>包</li></ul><p>封装是唯一一个分组事物可收集结构和行为的东西。</p><p><img alt="包" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/bao.png" class="lazyload"><img alt="包" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/baobiaoshi.png" class="lazyload"></p><h4 id="注释事物"><a class="markdownIt-Anchor" href="#注释事物"></a> 注释事物</h4><p>注释事物可以被定义为一种机制来捕捉UML模型元素的言论，说明和注释。注释是唯一一个注释事物。</p><ul><li>注释</li></ul><p>注释用于渲染意见，约束等的UML元素。</p><p><img alt="注释" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/zhushi.png" class="lazyload"><img alt="注释" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/zhushibiaoshi.png" class="lazyload"></p><h3 id="关系"><a class="markdownIt-Anchor" href="#关系"></a> 关系</h3><p>关系是另一个最重要的构建块UML，它显示元素是如何彼此相关联，此关联描述的一个应用程序的功能，UML中定义了依赖、协作、泛化、实现四种关系。</p><ul><li>1.依赖关系</li></ul><p>依赖是两件事物之间的语义联系，其中一个事物的变化也影响到另一个事物。</p><p><img alt="依赖" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/yilai.png" class="lazyload"></p><ul><li>2.协作</li></ul><p>一种描述一组对象之间连接的结构关系，如聚合关系（描述了整体和部分间的结构关系）。</p><p><img alt="协作" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/xiezuo2.png" class="lazyload"></p><ul><li>3.泛化</li></ul><p>泛化可以被定义为一个专门的元件连接关系与一个广义的元素，它基本上描述了在对象世界中的继承关系，是一种一般化-特殊化的关系。</p><p><img alt="泛化" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/fanhua.png" class="lazyload"></p><ul><li>4.实现</li></ul><p>类之间的语义关系，其中的一个类指定了由另一个类保证执行的契约。</p><p><img alt="实现" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/shixian.png" class="lazyload"></p><h3 id="图"><a class="markdownIt-Anchor" href="#图"></a> 图</h3><p>UML 图的整个讨论的最终输出所有要素，关系用于使一个完整的UML图，图中表示的系统。<br>UML 图的视觉效果是整个过程中最重要的部分。<br>图是事物集合的分类，UML 中包含多种图。</p><ol><li>类图：类图描述系统所包含的类、类的内部结构及类之间的关系；</li><li>对象图：对象图是类图的一个具体实例；</li><li>用例图：用例图从用户的角度出发描述系统的功能、需求，展示系统外部的各类角色与系统内部的各种用例之间的关系；</li><li>顺序图：顺序图表示对象之间动态合作的关系；</li><li>协作图：协作图描述对象之间的协作关系；</li><li>活动图：活动图描述系统中各种活动的执行顺序。</li><li>状态图：状态图描述一类对象的所有可能的状态以及事件发生时状态的转移条件；</li><li>部署关系图：部署关系图定义系统中软硬件的物理体系结构；</li><li>组件图：组件图描述代码部件的物理结构以及各部件之间的依赖关系；</li></ol><h1 id="uml-类图"><a class="markdownIt-Anchor" href="#uml-类图"></a> UML 类图</h1><blockquote><p>因为博主主要是学习<code>C++</code>面向对象程序设计，所以接下来，主要介绍UML图形标识中的类图。一个类图是由类和与之相关的各种静态关系共同组成的图形。类图展示的是软件模型的静态结构、类的内部结构以及和其他类的关系。通过类图，能够描述一部分面向对象的相关概念（如类、模板等）以及它们的相互关系。</p></blockquote><h2 id="类和对象"><a class="markdownIt-Anchor" href="#类和对象"></a> 类和对象</h2><p>类图中最基本的是要图形化描述类，要表示类的名称、数据成员和函数成员，以及各成员的访问控制属性。</p><p>在UML语言中，用一个由上而下分为3段的矩形来表示一个类。类名写在顶部区域，数据成员（UML中称为属性）在中间区域，函数成员（UML中称为操作）在底部区域。</p><p>比如说：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> hour;</span><br><span class="line"><span class="keyword">int</span> minute;</span><br><span class="line"><span class="keyword">int</span> second;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showTime</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setTime</span><span class="params">(<span class="keyword">int</span> newH=<span class="number">0</span>,<span class="keyword">int</span> newM=<span class="number">0</span>,<span class="keyword">int</span> newS=<span class="number">0</span>)</span></span>;</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div><p><img alt="以clock类举例" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/clocklei.png" class="lazyload"></p><h3 id="数据成员"><a class="markdownIt-Anchor" href="#数据成员"></a> 数据成员</h3><p>根据图的详细程度，每个数据成员可以包括其访问控制属性、名称、类型、默认值和约束特性，最简单的情况是只表示出它的名字，其余部分都是可选的。UML规定语法如下：<br><code>[访问控制属性] 名称 [重数] [:类型] [=默认值] [{约束特性}]</code></p><p>至少指定数据成员的名称，其余都是可选的。</p><p>其中的访问控制属性可分为<code>Public</code>, <code>Private</code> 和 <code>Protected</code> 三种，分别对应于 UML 中的“<code>+</code>”、“<code>-</code>”和“<code>#</code>”。</p><h3 id="函数成员"><a class="markdownIt-Anchor" href="#函数成员"></a> 函数成员</h3><p>每个函数成员可以包括其访问控制属性、名称、参数表、返回类型和约束特性，最简单的情况是只表示出它的名字，其余部分都是可选的。UML规定语法如下：<br><code>[访问控制属性] 名称 [(参数表)] [:返回类型] [{约束特性}]</code></p><p>至少指定函数成员的名称，其余都是可选的。</p><p>其中的访问控制属性可分为<code>Public</code>, <code>Private</code> 和 <code>Protected</code> 三种，分别对应于 UML 中的“<code>+</code>”、“<code>-</code>”和“<code>#</code>”。</p><h3 id="对象"><a class="markdownIt-Anchor" href="#对象"></a> 对象</h3><p>在UML语言中，用一个矩形来表示一个对象。对象的名字要加下划线。对象的全名写在图形的上部区域，由类名和对象名组成，其间用冒号隔开，表示方式为“对象名:类名”。在一些情况下，可以不出现对象名或类名。数据成员及其值表示在下面区域，数据成员是可选的。</p><p><img alt="以myClock对象举例" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/myclockduixiang.png" class="lazyload"></p><p><img alt="以student类举例" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/studentlei.png" class="lazyload"> <img alt="以student对象举例" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/studentduixiang.png" class="lazyload"></p><h2 id="几种关系的图形标识"><a class="markdownIt-Anchor" href="#几种关系的图形标识"></a> 几种关系的图形标识</h2><h3 id="依赖关系"><a class="markdownIt-Anchor" href="#依赖关系"></a> 依赖关系</h3><p>类或对象之间的依赖描述了一个事物的变化可能会影响到使用它的另一个事物,反之不成立。当要表明一个类使用另一个类作为它的函数成员参数时，就使用依赖关系。通常类之间的调用关系.友元、类的实例化都属于这类关系。对于大多数依赖关系而言,简单的.不加修饰的依赖关系就足够了。然而,为了详述其含义的细微差别,UML定义了一些可以用于依赖关系的构造型。最常用的构造型是使用<< use >>。当需要表示两个类之间的使用关系时,要使用<< use >>构造型。</p><p>图4-6说明了如何表示类间的依赖关系,UML图形把依赖绘成一条指向被依赖的事物的虚线。图中的“类A”是源，“类B”是目标,表示“类A”使用了“类B”,或称“类A"依赖“类B"。</p><p><img alt="依赖关系" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/yilaiguanxi.png" class="lazyload"></p><h3 id="作用关系关联"><a class="markdownIt-Anchor" href="#作用关系关联"></a> 作用关系——关联</h3><p>关联用于表述一个类的对象和另一个类的对象之间相互作用的连接。在UML语言中,用实线来表示的两个类(或同一个类)之间的关联,在线段两端通常包含多重性(或称重数)。多重性可说是关联最重要的特性,关联一端的多重性表明:关联另一端类的每个对象要求与本端类的多少个对象发生作用。图4-7说明了在UML中对关联的表示。</p><p><img alt="作用关系" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/zuoyongguanxi.png" class="lazyload"></p><p>图中的“重数A"决定了类B的每个对象与类A的多少个对象发生作用,同样“重数B”决定了类A的每个对象与类B的多少个对象发生作用。重数标记的形式和含义均列于表4-1中。</p><p><img alt="重数" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/chongshu.png" class="lazyload"></p><h3 id="包含关系聚集和组合"><a class="markdownIt-Anchor" href="#包含关系聚集和组合"></a> 包含关系——聚集和组合</h3><p>类或对象之间的包含关系在UML中由聚集和组合两个概念描述,它们是一种特殊的关联。UML中的聚集表示类之间的关系是整体与部分的关系，“包含”、“组成”、“分为…部分”等都是聚集关系。一条直线段有两个端点,这是聚集的一个例子。聚集可以进一步划分成共享聚集和组成聚集(简称组合)。</p><ul><li>例如,课题组包含许多成员,但是每个成员又可以是另一个课题组的成员,即部分可以参加多个整体,称之为共享聚集。</li><li>另一种情况是整体拥有各部分,部分与整体共存,如整体不存在了,部分也会随之消失,这称为组合。组合是一种简单聚集形式,但是它具有更强的拥有关系。例如，打开一个视窗口,它就由标题、外框和显示区所组成。在UML中,聚集表示为空心菱形,组合表示为实心菱形。</li></ul><p>图4-8说明了如何表示类的聚合和组合。</p><p><img alt="聚集和组合" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/jujihezuhe.png" class="lazyload"></p><h3 id="继承关系泛化"><a class="markdownIt-Anchor" href="#继承关系泛化"></a> 继承关系——泛化</h3><p>类之间的继承关系在UML中称为泛化,使用带有三角形标识的直线段表示这种继承关系，三角的一个尖指向父类,其对边上的线指向子类。图4-10说明了泛化关系。子类1说明单继承，子类2说明多继承。</p><p><img alt="泛化关系" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/fanhuaguanxi.png" class="lazyload"></p><h2 id="注释"><a class="markdownIt-Anchor" href="#注释"></a> 注释</h2><p>为了更生动地描述类、对象以及它们之间的关系,除了上述最基本的图形符号外，UMI还有一些辅助性的图形符号，下面介绍注释。</p><p>UML的注释是一种最重要的能够独立存在的修饰符号。注释是附加在元素或元素集上用来表示说明的图形符号。用注释可以为模型附加一些诸如说明、评述和注解等的信息。在UML图形上,注释表示为带有褶角的矩形,然后用虚线连接到UML的其他元素上,它是一种用于在图中附加文字注释的机制。</p><p><img alt="注释" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/uml-notes/zhushili.png" class="lazyload"></p><h1 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h1><p>引用其他博主的一句话：</p><p>UML的一切实际上就是为了交流。先编码后修复是错误的，先设计再纠错是正确的。</p><p>UML图是用来画出来找错误的，而不是要画一个完美的图形，无论是否正确，画图是用来记录和构思你的想法的，而不是一开始就是要画一个正确的图。</p>        <div id="aplayer-EPOFuRzc" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-EPOFuRzc"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "All of the stars",              author: "Ed Sheeran",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/allofthestars.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/x.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/allofthestars.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Object Oriented" scheme="http://lemonaaaaa.com/categories/Code-life/Object-Oriented/"/>
    
    
      <category term="UML" scheme="http://lemonaaaaa.com/tags/UML/"/>
    
      <category term="面向对象" scheme="http://lemonaaaaa.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>2020 年的春天 油菜花照常开放</title>
    <link href="http://lemonaaaaa.com/2020/03/canola-flowers-2020/"/>
    <id>http://lemonaaaaa.com/2020/03/canola-flowers-2020/</id>
    <published>2020-03-01T05:29:11.000Z</published>
    <updated>2020-03-01T05:29:11.150Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>愿疫情早日结束……</p>        <div id="aplayer-ltmYJjev" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-ltmYJjev"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "至此",              author: "房东的猫",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/zhici.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/zhici.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/zhici.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="蓝天"><a class="markdownIt-Anchor" href="#蓝天"></a> 蓝天</h1><p><img alt="1" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/20200301/1.jpg" class="lazyload"></p><h1 id="花朵"><a class="markdownIt-Anchor" href="#花朵"></a> 花朵</h1><p><img alt="2" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/20200301/2.jpg" class="lazyload"></p><h1 id="一望无际"><a class="markdownIt-Anchor" href="#一望无际"></a> 一望无际</h1><p><img alt="3" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/20200301/3.jpg" class="lazyload"></p><h1 id="白房子"><a class="markdownIt-Anchor" href="#白房子"></a> 白房子</h1><p><img alt="4" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/20200301/4.jpg" class="lazyload"></p><p><img alt="5" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/20200301/5.jpg" class="lazyload"></p><h1 id="小船"><a class="markdownIt-Anchor" href="#小船"></a> 小船</h1><p><img alt="6" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/20200301/6.jpg" class="lazyload"></p><h1 id="远方"><a class="markdownIt-Anchor" href="#远方"></a> 远方</h1><p><img alt="7" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/essay/20200301/7.jpg" class="lazyload"></p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Essay" scheme="http://lemonaaaaa.com/categories/Essay/"/>
    
      <category term="Travel" scheme="http://lemonaaaaa.com/categories/Essay/Travel/"/>
    
    
      <category term="风景" scheme="http://lemonaaaaa.com/tags/%E9%A3%8E%E6%99%AF/"/>
    
      <category term="油菜花" scheme="http://lemonaaaaa.com/tags/%E6%B2%B9%E8%8F%9C%E8%8A%B1/"/>
    
      <category term="旅行" scheme="http://lemonaaaaa.com/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 624 (Div. 3) 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/codeforces-round-624-div3/"/>
    <id>http://lemonaaaaa.com/2020/02/codeforces-round-624-div3/</id>
    <published>2020-02-25T15:56:24.000Z</published>
    <updated>2020-04-17T12:59:30.116Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>还是div. 3比较适合我这种菜，不过最后一道题一个细节没调出来真的可惜了。</p><h1 id="a-add-odd-or-subtract-even"><a class="markdownIt-Anchor" href="#a-add-odd-or-subtract-even"></a> A. Add Odd or Subtract Even</h1><blockquote><p><a href="https://codeforces.com/contest/1311/problem/A" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文"><a class="markdownIt-Anchor" href="#题目原文"></a> 题目原文</h2><p><img alt="1311A" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1311A.jpg" class="lazyload"></p><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>给出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 两个正整数。每一次操作，你可以将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 做以下两种操作之一：</p><ul><li>任选一个正奇数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> ，将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 加上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 。</li><li>任选一个正偶数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> ，将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 减去 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> 。</li></ul><p>问至少操作多少次，可以使 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的值相等。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>容易发现，有以下几种情况：</p><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a==b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> ，答案为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo><</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a<b< annotation></b<></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 。如果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的差值是奇数，那么直接加上一个正奇数就可，答案为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ；如果差值是偶数，那么答案为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> ，加两次正奇数或者加一次正奇数再减一次正偶数。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>></mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a>b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 。与2.同理且相反。</li></ol><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> T,x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&x,&y);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line"><span class="keyword">if</span>(x==y) ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(x < y)</span><br><span class="line">  {</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=y-x;</span><br><span class="line"><span class="keyword">if</span>(temp&<span class="number">1</span>) ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> ans=<span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=x-y;</span><br><span class="line"><span class="keyword">if</span>(temp&<span class="number">1</span>) ans=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> ans=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="b-weirdsort"><a class="markdownIt-Anchor" href="#b-weirdsort"></a> B. WeirdSort</h1><blockquote><p><a href="https://codeforces.com/contest/1311/problem/B" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-2"><a class="markdownIt-Anchor" href="#题目原文-2"></a> 题目原文</h2><p><img alt="1311B" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1311B.jpg" class="lazyload"></p><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个数和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 个位置 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>o</mi><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">pos_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，可以让 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>o</mi><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">pos_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>o</mi><msub><mi>s</mi><mi>i</mi></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">pos_i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 交换任意次位置，求是否能通过交换，使这 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个数以非递减顺序排列。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>最开始还没有思路，把C题做了回来一想，因为冒泡排序的思想，所以同一块（可以交换的连通块）中的顺序是任意的，所以直接对每一内部可以互相交换的块内部排序，最后验证序列是否非递减即可。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,m,p[maxn],a[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i<=m;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&x);</span><br><span class="line">vis[x]=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> s=i,t=i;</span><br><span class="line"><span class="keyword">while</span>(vis[t]) t++;</span><br><span class="line">sort(a+s,a+t+<span class="number">1</span>);</span><br><span class="line">i=t;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[i]<a[i<span class="number">-1</a[i<span></span>]) flag=<span class="literal">true</span>;<br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="c-perform-the-combo"><a class="markdownIt-Anchor" href="#c-perform-the-combo"></a> C. Perform the Combo</h1><blockquote><p><a href="https://codeforces.com/contest/1311/problem/C" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-3"><a class="markdownIt-Anchor" href="#题目原文-3"></a> 题目原文</h2><p><img alt="1311C" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1311C.jpg" class="lazyload"></p><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>给出一个字符串，要求枚举一遍该字符串，再给出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 个错误操作，每次遇到错误操作就会从头开始重新枚举。求最后执行完 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 个错误操作后，26个小写字母每个都被枚举了多少遍。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>直接前缀和，每次 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 查询，时间复杂度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>t</mi><mo>⋅</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>⋅</mo><mn>26</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(t\cdot max(n,m)\cdot26)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span></span></span></span> 。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> cnt[maxn][<span class="number">26</span>];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> p[maxn],n,m,T;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans[<span class="number">26</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&m);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j<<span class="number">26</span>;j++) cnt[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) cnt[i][s[i]-<span class="string">'a'</span>]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j<<span class="number">26</span>;j++) cnt[i][j]+=cnt[i<span class="number">-1</span>][j];</span><br><span class="line"><span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i<=m;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j<<span class="number">26</span>;j++) ans[j]+=cnt[x][j];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">26</span>;i++) ans[i]+=cnt[n][i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">26</span>;i++) <span class="built_in">printf</span>(<span class="string">"%lld "</span>,ans[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d-three-integers"><a class="markdownIt-Anchor" href="#d-three-integers"></a> D. Three Integers</h1><blockquote><p><a href="https://codeforces.com/contest/1311/problem/D" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-4"><a class="markdownIt-Anchor" href="#题目原文-4"></a> 题目原文</h2><p><img alt="1311D" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1311D.jpg" class="lazyload"></p><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>给出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 三个正整数，每次可以将这三个数任意一个数加上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 或者减去 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，求最少操作多少次，能使 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 能被 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> 整除， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> 能被 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 整除。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>因为数据范围是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10000</mn></mrow><annotation encoding="application/x-tex">10000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span> ，直接枚举 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> ，再枚举 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 就不要枚举了，直接除以枚举的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> ，直接取最近的值就好。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lemon</span></span><br><span class="line">freopen(<span class="string">"D.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> T,a,b,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&a,&b,&c);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1e18</span>,ansa,ansb,ansc;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">1</span>;i<=<span class="number">10000</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> j=<span class="number">1</span>;j<=<span class="number">10000</span>;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(i*j><span class="number">50000</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">0</span>,tempa,tempb,tempc;</span><br><span class="line">temp+=<span class="built_in">abs</span>(a-i)+<span class="built_in">abs</span>(b-i*j);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> p=c/(i*j);</span><br><span class="line">tempa=i;tempb=i*j;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">temp+=<span class="built_in">abs</span>(c-i*j);</span><br><span class="line">tempc=i*j;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(c-i*j*p)<<span class="built_in">abs</span>(c-i*j*(p+<span class="number">1</span>)))</span><br><span class="line">{</span><br><span class="line">temp+=<span class="built_in">abs</span>(c-i*j*p);</span><br><span class="line">tempc=i*j*p;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">temp+=<span class="built_in">abs</span>(c-i*j*(p+<span class="number">1</span>));</span><br><span class="line">tempc=i*j*(p+<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(temp < ans)</span><br><span class="line">{</span><br><span class="line">ans=temp;</span><br><span class="line">ansa=tempa;</span><br><span class="line">ansb=tempb;</span><br><span class="line">ansc=tempc;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n%lld %lld %lld\n"</span>,ans,ansa,ansb,ansc);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="e-construct-the-binary-tree"><a class="markdownIt-Anchor" href="#e-construct-the-binary-tree"></a> E. Construct the Binary Tree</h1><blockquote><p><a href="https://codeforces.com/contest/1311/problem/E" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-5"><a class="markdownIt-Anchor" href="#题目原文-5"></a> 题目原文</h2><p><img alt="1311E" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1311E.jpg" class="lazyload"></p><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>给出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> ，求问存不存在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个点的二叉树，其所有节点的深度之和为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> ，如果存在，需要输出每一个节点的父节点（根节点为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> ）。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>先把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个点连成一条链，再不断地从链尾取下点按深度递增的顺序加在某些点后即可。</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5005</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,d;</span><br><span class="line"><span class="keyword">int</span> point[maxn][maxn],fa[maxn],cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&d);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i < n;i++)</span><br><span class="line">{</span><br><span class="line">fa[i+<span class="number">1</span>]=i;</span><br><span class="line">cnt[i]=<span class="number">1</span>;</span><br><span class="line">point[i][<span class="number">0</span>]=i+<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> res=n*(n<span class="number">-1</span>)/<span class="number">2</span>-d;</span><br><span class="line"><span class="keyword">if</span>(res<<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> depth=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;i--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> delta=min(i-depth,res);</span><br><span class="line">res-=delta;</span><br><span class="line"><span class="keyword">int</span> pos=i-delta;</span><br><span class="line">fa[i+<span class="number">1</span>]=point[pos<span class="number">-1</span>][cnt[pos]/<span class="number">2</span>];</span><br><span class="line">point[pos][cnt[pos]++]=i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt[pos]>=(<span class="number">1</span> < < depth)) depth++;</span><br><span class="line"><span class="keyword">if</span>(!res) <span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(res!=<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,fa[i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f-moving-points"><a class="markdownIt-Anchor" href="#f-moving-points"></a> F. Moving Points</h1><blockquote><p><a href="https://codeforces.com/contest/1311/problem/F" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-6"><a class="markdownIt-Anchor" href="#题目原文-6"></a> 题目原文</h2><p><img alt="1311F" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1311F.jpg" class="lazyload"></p><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p>在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span> 轴上有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个点，每个点有一个初始坐标 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和一个速度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，求问每每两个点对之间可能达到的最近距离之和，时间可以为正为负为零且不一定为整数。</p><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><p>感觉这道题的变形都有好多了，看完题就知道肯定是和时间没有关系的。</p><p>所以对于任意两个点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> ，假使 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo><</mo><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">x_i<x_j< annotation></x_j<></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>  分两种情况讨论：</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub><mo>≤</mo><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_i\leq v_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> ，那么最近的时候就是初始位置时，对答案贡献为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>j</mi></msub><mo>−</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_j-x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub><mo>></mo><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_i>v_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> ，那么一定会相遇，对答案贡献为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 。</li></ul><p>所以我们先对初始位置从小到大排序，再对速度离散化，用树状数组或者线段树维护一个前缀和，就好了。我没调出来的原因是计数的时候乘错地方了（后悔死）。</p><h2 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x&(-x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">int</span> x,v;</span><br><span class="line">} a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span> </span>{<span class="keyword">return</span> a.x<b.x;}< span><br><span class="line"><span class="keyword">int</span> cnt[maxn],n,b[maxn];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> val[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i<=n;i+=lowbit(i))</span><br><span class="line">{</span><br><span class="line">cnt[i]++;</span><br><span class="line">val[i]+=(<span class="keyword">long</span> <span class="keyword">long</span>)v;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i;i-=lowbit(i)) temp+=val[i];</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">getc</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i;i-=lowbit(i)) temp+=cnt[i];</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i].x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i].v);</span><br><span class="line">b[i]=a[i].v;</span><br><span class="line">}</span><br><span class="line">sort(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> cnt=unique(b+<span class="number">1</span>,b+n+<span class="number">1</span>)-(b+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) a[i].v=lower_bound(b+<span class="number">1</span>,b+cnt+<span class="number">1</span>,a[i].v)-b;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line">ans+=a[i].x*getc(a[i].v)-get(a[i].v);</span><br><span class="line">add(a[i].v,a[i].x);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></b.x;}<></span></pre></td></tr></tbody></table></figure></div><p><img alt="round-624" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/standings/round-624.jpg" class="lazyload"></p>        <div id="aplayer-QRGUqXka" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-QRGUqXka"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "马德里不思议",              author: "蔡依林",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/madelibusiyi.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/wuniang.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/madelibusiyi.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
      <category term="Round" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/Round/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="思维" scheme="http://lemonaaaaa.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="字符串" scheme="http://lemonaaaaa.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="前缀和" scheme="http://lemonaaaaa.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
      <category term="树" scheme="http://lemonaaaaa.com/tags/%E6%A0%91/"/>
    
      <category term="二叉树" scheme="http://lemonaaaaa.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
      <category term="树状数组" scheme="http://lemonaaaaa.com/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
      <category term="数据结构" scheme="http://lemonaaaaa.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>力扣第 177 场周赛 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/leetcode-weekly-contest-177/"/>
    <id>http://lemonaaaaa.com/2020/02/leetcode-weekly-contest-177/</id>
    <published>2020-02-24T13:07:41.000Z</published>
    <updated>2020-04-17T12:58:46.879Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>突然觉得自己还是挺菜的，智商还是不够……第一题竟然最后都想打表了……其实很多时候，当思路挺乱的时候，先把代码备份到一边，然后再重新想，很可能答案就呼之欲出了。</p><h1 id="a-日期之间隔几天"><a class="markdownIt-Anchor" href="#a-日期之间隔几天"></a> A. 日期之间隔几天</h1><blockquote><p><a href="https://leetcode-cn.com/problems/number-of-days-between-two-dates/" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h2><p>请你编写一个程序来计算两个日期之间隔了多少天。</p><p>日期以字符串形式给出，格式为 YYYY-MM-DD，如示例所示。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>最开始想怎么算，其实这道题范围很小，只有 1971 到 2100 年，直接模拟就好了。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> cnt[<span class="number">3005</span>],p[<span class="number">14</span>];</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">daysBetweenDates</span><span class="params">(<span class="built_in">string</span> date1, <span class="built_in">string</span> date2)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n1=<span class="number">0</span>,m1=<span class="number">0</span>,r1=<span class="number">0</span>,n2=<span class="number">0</span>,m2=<span class="number">0</span>,r2=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i < <span class="number">4</span>;i++)</span><br><span class="line">        {</span><br><span class="line">            n1=(n1*<span class="number">10</span>)+date1[i]-<span class="string">'0'</span>;</span><br><span class="line">            n2=(n2*<span class="number">10</span>)+date2[i]-<span class="string">'0'</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">5</span>;i < <span class="number">7</span>;i++)</span><br><span class="line">        {</span><br><span class="line">            m1=(m1*<span class="number">10</span>)+date1[i]-<span class="string">'0'</span>;</span><br><span class="line">            m2=(m2*<span class="number">10</span>)+date2[i]-<span class="string">'0'</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">8</span>;i < <span class="number">10</span>;i++)</span><br><span class="line">        {</span><br><span class="line">            r1=(r1*<span class="number">10</span>)+date1[i]-<span class="string">'0'</span>;</span><br><span class="line">            r2=(r2*<span class="number">10</span>)+date2[i]-<span class="string">'0'</span>;</span><br><span class="line">        }</span><br><span class="line">        p[<span class="number">1</span>]=<span class="number">31</span>;p[<span class="number">2</span>]=<span class="number">28</span>;p[<span class="number">3</span>]=<span class="number">31</span>;p[<span class="number">4</span>]=<span class="number">30</span>;p[<span class="number">5</span>]=<span class="number">31</span>;p[<span class="number">6</span>]=<span class="number">30</span>;</span><br><span class="line">        p[<span class="number">7</span>]=<span class="number">31</span>;p[<span class="number">8</span>]=<span class="number">31</span>;p[<span class="number">9</span>]=<span class="number">30</span>;p[<span class="number">10</span>]=<span class="number">31</span>;p[<span class="number">11</span>]=<span class="number">30</span>;p[<span class="number">12</span>]=<span class="number">31</span>;</span><br><span class="line">        <span class="keyword">if</span>(n1 > n2)</span><br><span class="line">        {</span><br><span class="line">            swap(n1,n2);</span><br><span class="line">            swap(m1,m2);</span><br><span class="line">            swap(r1,r2);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n1==n2)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(m1 > m2)</span><br><span class="line">            {</span><br><span class="line">                swap(m1,m2);</span><br><span class="line">                swap(r1,r2);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(m1==m2)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(r1 > r2) swap(r1,r2);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n1!=n2||m1!=m2||r1!=r2)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(n1%<span class="number">4</span>==<span class="number">0</span>&&n1!=<span class="number">2100</span>) p[<span class="number">2</span>]=<span class="number">29</span>;</span><br><span class="line">            <span class="keyword">else</span> p[<span class="number">2</span>]=<span class="number">28</span>;</span><br><span class="line">            r1++;ans++;</span><br><span class="line">            <span class="keyword">if</span>(r1 > p[m1])</span><br><span class="line">            {</span><br><span class="line">                r1=<span class="number">1</span>;m1++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(m1 > <span class="number">12</span>)</span><br><span class="line">            {</span><br><span class="line">                m1=<span class="number">1</span>;n1++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div><h1 id="b-验证二叉树"><a class="markdownIt-Anchor" href="#b-验证二叉树"></a> B. 验证二叉树</h1><blockquote><p><a href="https://leetcode-cn.com/problems/validate-binary-tree-nodes/" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述-2"><a class="markdownIt-Anchor" href="#题目描述-2"></a> 题目描述</h2><p>二叉树上有 n 个节点，按从 0 到 n - 1 编号，其中节点 i 的两个子节点分别是 leftChild[i] 和 rightChild[i]。</p><p>只有 所有 节点能够形成且 只 形成 一颗 有效的二叉树时，返回 true；否则返回 false。</p><p>如果节点 i 没有左子节点，那么 leftChild[i] 就等于 -1。右子节点也符合该规则。</p><p>注意：节点没有值，本问题中仅仅使用节点编号。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>考查二叉树的定义：只有一个点入度为 0 ，其他点的入度都为 1 ，注意一些细节。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">bool</span> vis[<span class="number">100005</span>];</span><br><span class="line">    <span class="keyword">int</span> rd[<span class="number">100005</span>],m=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">validateBinaryTreeNodes</span><span class="params">(<span class="keyword">int</span> n, <span class="built_in">vector</span> < <span class="keyword">int</span> > & leftChild, <span class="built_in">vector</span> < <span class="keyword">int</span> > & rightChild)</span> </span>{</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i < n;i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> x=leftChild[i],y=rightChild[i];</span><br><span class="line">            <span class="keyword">if</span>(x!=<span class="number">-1</span>)</span><br><span class="line">            {</span><br><span class="line">                vis[x]=<span class="literal">true</span>;</span><br><span class="line">                rd[x]++;</span><br><span class="line">                m++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(y!=<span class="number">-1</span>)</span><br><span class="line">            {</span><br><span class="line">                vis[y]=<span class="literal">true</span>;</span><br><span class="line">                rd[y]++;</span><br><span class="line">                m++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(m!=n<span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> f=<span class="number">0</span>,f2=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i < n;i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(rd[i]!=<span class="number">1</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(!rd[i]&&!f) f=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(!f&&!rd[i]) f2=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div><h1 id="c-最接近的因数"><a class="markdownIt-Anchor" href="#c-最接近的因数"></a> C. 最接近的因数</h1><blockquote><p><a href="https://leetcode-cn.com/problems/closest-divisors/" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述-3"><a class="markdownIt-Anchor" href="#题目描述-3"></a> 题目描述</h2><p>给你一个整数 num，请你找出同时满足下面全部要求的两个整数：</p><ul><li>两数乘积等于  num + 1 或 num + 2</li><li>以绝对差进行度量，两数大小最接近</li></ul><p>你可以按任意顺序返回这两个整数。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>很显然以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>⋅</mo><msqrt><mi>n</mi></msqrt><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\cdot\sqrt n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.05028em;vertical-align:-0.25em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="padding-left:0.833em;">n</span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的时间复杂度直接枚举两个因数取最优就好了。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span> < <span class="keyword">int</span> >  closestDivisors(<span class="keyword">int</span> num) {</span><br><span class="line">        <span class="keyword">int</span> ta,tb,sa,sb;</span><br><span class="line">        <span class="keyword">int</span> s=<span class="built_in">sqrt</span>(num+<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=s;i;i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>((num+<span class="number">1</span>)%i==<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                ta=i;</span><br><span class="line">                tb=(num+<span class="number">1</span>)/i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        s=<span class="built_in">sqrt</span>(num+<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=s;i;i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>((num+<span class="number">2</span>)%i==<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                sa=i;</span><br><span class="line">                sb=(num+<span class="number">2</span>)/i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">vector</span> < <span class="keyword">int</span> >  ans;</span><br><span class="line">        <span class="keyword">int</span> p1=<span class="built_in">abs</span>(ta-tb),p2=<span class="built_in">abs</span>(sa-sb);</span><br><span class="line">        <span class="keyword">if</span>(p1 < p2)</span><br><span class="line">        {</span><br><span class="line">            ans.push_back(ta);</span><br><span class="line">            ans.push_back(tb);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            ans.push_back(sa);</span><br><span class="line">            ans.push_back(sb);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d-形成三的最大倍数"><a class="markdownIt-Anchor" href="#d-形成三的最大倍数"></a> D. 形成三的最大倍数</h1><blockquote><p><a href="https://leetcode-cn.com/problems/count-all-valid-pickup-and-delivery-options/" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述-4"><a class="markdownIt-Anchor" href="#题目描述-4"></a> 题目描述</h2><p>给你一个整数数组 digits，你可以通过按任意顺序连接其中某些数字来形成 3 的倍数，请你返回所能得到的最大的 3 的倍数。</p><p>由于答案可能不在整数数据类型范围内，请以字符串形式返回答案。</p><p>如果无法得到答案，请返回一个空字符串。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>采用先全部选，然后删去的方法，先算出所有 digits 的和 tot</p><ul><li>如果 (tot-1) % 3 == 0 ，那么肯定先扣除 1 , 4 , 7 ，如果没有，再考虑扣除两个 2 , 5 , 8 ，如果还不行就看是否有 0 ，如果没有就无解。</li><li>如果 (tot-2) % 3 == 0 ，那么就反着来就好了。</li></ul><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> cnt[<span class="number">105</span>],tot=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">largestMultipleOfThree</span><span class="params">(<span class="built_in">vector</span> < <span class="keyword">int</span> > & digits)</span> </span>{</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i < digits.size();i++)</span><br><span class="line">        {</span><br><span class="line">            cnt[digits[i]]++;</span><br><span class="line">            tot+=digits[i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(tot%<span class="number">3</span>==<span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i < =<span class="number">7</span>;i+=<span class="number">3</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(cnt[i])</span><br><span class="line">                {</span><br><span class="line">                    cnt[i]--;</span><br><span class="line">                    tot-=i;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(tot%<span class="number">3</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i < =<span class="number">8</span>;i+=<span class="number">3</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span>(cnt[i] > =<span class="number">2</span>)</span><br><span class="line">                    {</span><br><span class="line">                        cnt[i]-=<span class="number">2</span>;</span><br><span class="line">                        tot-=i*<span class="number">2</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(tot%<span class="number">3</span>==<span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i < =<span class="number">8</span>;i+=<span class="number">3</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(cnt[i])</span><br><span class="line">                {</span><br><span class="line">                    cnt[i]--;</span><br><span class="line">                    tot-=i;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(tot%<span class="number">3</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i < =<span class="number">7</span>;i+=<span class="number">3</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span>(cnt[i] > =<span class="number">2</span>)</span><br><span class="line">                    {</span><br><span class="line">                        cnt[i]-=<span class="number">2</span>;</span><br><span class="line">                        tot-=i*<span class="number">2</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">string</span> ans=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(tot%<span class="number">3</span>) <span class="keyword">return</span> ans;</span><br><span class="line">        <span class="keyword">if</span>(tot==<span class="number">0</span>&&cnt[<span class="number">0</span>])</span><br><span class="line">        {</span><br><span class="line">            ans+=<span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;~i;i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j < =cnt[i];j++) ans+=(<span class="keyword">char</span>)(i+<span class="string">'0'</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div><p><img alt="weekly-contest-177" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/leetcode/standings/weekly-contest-177.jpg" class="lazyload"></p>        <div id="aplayer-peasKzlI" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-peasKzlI"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "Highway Don't Care",              author: "Tim Mcgraw & Taylor Swift",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/highwaydontcare.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/twolanesoffreedom.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/highwaydontcare.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Leetcode" scheme="http://lemonaaaaa.com/categories/Code-life/Leetcode/"/>
    
      <category term="Contest" scheme="http://lemonaaaaa.com/categories/Code-life/Leetcode/Contest/"/>
    
    
      <category term="图论" scheme="http://lemonaaaaa.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="思维" scheme="http://lemonaaaaa.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="数论" scheme="http://lemonaaaaa.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="树" scheme="http://lemonaaaaa.com/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>力扣第 20 场双周赛 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/leetcode-biweekly-contest-20/"/>
    <id>http://lemonaaaaa.com/2020/02/leetcode-biweekly-contest-20/</id>
    <published>2020-02-24T06:28:34.000Z</published>
    <updated>2020-04-17T12:59:04.772Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>从班助那里得知了这个网站，据说做上面的题对找工作有好处。题挺简单的，可以划划水放松放松。</p><h1 id="a-根据数字二进制下-1-的数目排序"><a class="markdownIt-Anchor" href="#a-根据数字二进制下-1-的数目排序"></a> A. 根据数字二进制下 1 的数目排序</h1><blockquote><p><a href="https://leetcode-cn.com/problems/sort-integers-by-the-number-of-1-bits/" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h2><p>给你一个整数数组 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>r</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">arr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 。请你将数组中的元素按照其二进制表示中数字 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的数目升序排序。</p><p>如果存在多个数字二进制中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的数目相同，则必须将它们按照数值大小升序排列。</p><p>请你返回排序后的数组。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>直接暴力求出每一个数的二进制下 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的个数，排序输出即可。<br>这题是简单难度。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">    {</span></span><br><span class="line">        <span class="keyword">int</span> x,val;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> < (<span class="keyword">const</span> node xx) <span class="keyword">const</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(xx.val==val) <span class="keyword">return</span> x < xx.x;</span><br><span class="line">            <span class="keyword">return</span> val < xx.val;</span><br><span class="line">        }</span><br><span class="line">    } a[<span class="number">505</span>];</span><br><span class="line">    <span class="built_in">vector</span> <<span class="keyword">int</span>> sortByBits(<span class="built_in">vector</span> <<span class="keyword">int</span>> & arr) {</span><br><span class="line">        <span class="keyword">int</span> cnt=arr.size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i < arr.size();i++)</span><br><span class="line">        {</span><br><span class="line">            a[i].x=arr[i];</span><br><span class="line">            a[i].val=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j < <span class="number">32</span>;j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(a[i].x&(<span class="number">1</span> << j)) a[i].val++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        sort(a,a+arr.size());</span><br><span class="line">        arr.clear();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i < cnt;i++) arr.push_back(a[i].x);</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div><h1 id="b-每隔-n-个顾客打折"><a class="markdownIt-Anchor" href="#b-每隔-n-个顾客打折"></a> B. 每隔 n 个顾客打折</h1><blockquote><p><a href="https://leetcode-cn.com/problems/apply-discount-every-n-orders/" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述-2"><a class="markdownIt-Anchor" href="#题目描述-2"></a> 题目描述</h2><p>超市里正在举行打折活动，每隔 n 个顾客会得到 discount 的折扣。</p><p>超市里有一些商品，第 i 种商品为 products[i] 且每件单品的价格为 prices[i] 。</p><p>结账系统会统计顾客的数目，每隔 n 个顾客结账时，该顾客的账单都会打折，折扣为 discount （也就是如果原本账单为 x ，那么实际金额会变成 x - (discount * x) / 100 ），然后系统会重新开始计数。</p><p>顾客会购买一些商品， product[i] 是顾客购买的第 i 种商品， amount[i] 是对应的购买该种商品的数目。</p><p>请你实现 Cashier 类：</p><ul><li>Cashier(int n, int discount, int[] products, int[] prices) 初始化实例对象，参数分别为打折频率 n ，折扣大小 discount ，超市里的商品列表 products 和它们的价格 prices 。</li><li>double getBill(int[] product, int[] amount) 返回账单的实际金额（如果有打折，请返回打折后的结果）。返回结果与标准答案误差在 10^-5 以内都视为正确结果。</li></ul><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>直接模拟就好了，这题的难度是中等。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cashier</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> qn=<span class="number">0</span>,qd,cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> pri[<span class="number">10005</span>];</span><br><span class="line">    Cashier(<span class="keyword">int</span> n, <span class="keyword">int</span> discount, <span class="built_in">vector</span> < <span class="keyword">int</span>>& products, <span class="built_in">vector</span> < <span class="keyword">int</span>>& prices) {</span><br><span class="line">        qn=n;</span><br><span class="line">        qd=discount;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i < products.size();i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> x=products[i];</span><br><span class="line">            pri[x]=prices[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getBill</span><span class="params">(<span class="built_in">vector</span> < <span class="keyword">int</span>> product, <span class="built_in">vector</span> < <span class="keyword">int</span>> amount)</span> </span>{</span><br><span class="line">        <span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i < product.size();i++)</span><br><span class="line">        {</span><br><span class="line">            ans+=pri[product[i]]*amount[i];</span><br><span class="line">        }</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="keyword">if</span>(cnt==qn)</span><br><span class="line">        {</span><br><span class="line">            ans-=((<span class="keyword">double</span>)qd*ans)/<span class="number">100.0</span>;</span><br><span class="line">            cnt=<span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your Cashier object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * Cashier* obj = new Cashier(n, discount, products, prices);</span></span><br><span class="line"><span class="comment"> * double param_1 = obj->getBill(product,amount);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></tbody></table></figure></div><h1 id="c-包含所有三种字符的子字符串数目"><a class="markdownIt-Anchor" href="#c-包含所有三种字符的子字符串数目"></a> C. 包含所有三种字符的子字符串数目</h1><blockquote><p><a href="https://leetcode-cn.com/problems/number-of-substrings-containing-all-three-characters/" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述-3"><a class="markdownIt-Anchor" href="#题目描述-3"></a> 题目描述</h2><p>给你一个字符串 s ，它只包含三种字符 a, b 和 c 。</p><p>请你返回 a，b 和 c 都 至少 出现过一次的子字符串数目。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>因为数据范围还是有 50,000 的，所以不能直接模拟，需要简单想一想。<br>因为要求出所有满足条件的子字符串的数量，考虑第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 位字符的贡献。假设另外两个字符在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的最早出现位置 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">pos1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">1</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">pos2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">2</span></span></span></span> ，那么贡献就为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mn>1</mn><mo separator="true">,</mo><mi>p</mi><mi>o</mi><mi>s</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-max(pos1,pos2)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，因为从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 开始到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mn>1</mn><mo separator="true">,</mo><mi>p</mi><mi>o</mi><mi>s</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">max(pos1,pos2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">2</span><span class="mclose">)</span></span></span></span> 之后的所有子字符串一定都包含了三个字符，符合条件。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> nxt[<span class="number">50005</span>][<span class="number">5</span>],last[<span class="number">5</span>];</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numberOfSubstrings</span><span class="params">(<span class="built_in">string</span> s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> n=s.length()<span class="number">-1</span>;</span><br><span class="line">        last[<span class="number">0</span>]=last[<span class="number">1</span>]=last[<span class="number">2</span>]=<span class="number">0x7f7f7f7f</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;~i;i--)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j < =<span class="number">2</span>;j++) nxt[i][j]=last[j];</span><br><span class="line">            last[s[i]-<span class="string">'a'</span>]=i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i < =n;i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> a,b;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'a'</span>) a=<span class="number">1</span>,b=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'b'</span>) a=<span class="number">0</span>,b=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'c'</span>) a=<span class="number">0</span>,b=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> x=max(nxt[i][a],nxt[i][b]);</span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">0x7f7f7f7f</span>) <span class="keyword">continue</span>;</span><br><span class="line">            ans+=(n-x+<span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d-有效的快递序列数目"><a class="markdownIt-Anchor" href="#d-有效的快递序列数目"></a> D. 有效的快递序列数目</h1><blockquote><p><a href="https://leetcode-cn.com/problems/count-all-valid-pickup-and-delivery-options/" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述-4"><a class="markdownIt-Anchor" href="#题目描述-4"></a> 题目描述</h2><p>给你 n 笔订单，每笔订单都需要快递服务。</p><p>请你统计所有有效的 收件/配送 序列的数目，确保第 i 个物品的配送服务 delivery(i) 总是在其收件服务 pickup(i) 之后。</p><p>由于答案可能很大，请返回答案对 1e9 + 7 取余的结果。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>设f[i][j]表示已经收了i个快递，且配送了j个快递(j≤i)<br>那么状态转移方程为</p><ul><li>f[i][j]+=f[i-1][j]*(n-i+1//从n-i+1个还没有收的快递中随机收一个快递</li><li>f[i][j]+=f[i][j-1]*(i-j+1)//从已经收了的但还没有配送的(i-j+1)个快递中随便选一个配送<br>最后我们是既收取完n个快递，又配送完n个快递，所以答案为f[n][n]</li></ul><p>当然排列组合、插空法、一维dp等等都可以解决，这题是困难难度。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countOrders</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i < =n;i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j < =n;j++)</span><br><span class="line">            {</span><br><span class="line">                f[i][j]+=f[i<span class="number">-1</span>][j]*(n-i+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span>(j) f[i][j]+=f[i][j<span class="number">-1</span>]*(i-j+<span class="number">1</span>);</span><br><span class="line">                f[i][j]%=mod;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> ans=(<span class="keyword">int</span>)f[n][n];</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div><p><img alt="biweekly-contest-20" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/leetcode/standings/biweekly-contest-20.jpg" class="lazyload"></p>        <div id="aplayer-fnHcKQqc" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-fnHcKQqc"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "张三的歌",              author: "李寿全",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/zhangsandege.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/bayouerfenzhiyi.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/zhangsandege.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Leetcode" scheme="http://lemonaaaaa.com/categories/Code-life/Leetcode/"/>
    
      <category term="Contest" scheme="http://lemonaaaaa.com/categories/Code-life/Leetcode/Contest/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="数论" scheme="http://lemonaaaaa.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="字符串" scheme="http://lemonaaaaa.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="二进制" scheme="http://lemonaaaaa.com/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
      <category term="动态规划" scheme="http://lemonaaaaa.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="预处理" scheme="http://lemonaaaaa.com/tags/%E9%A2%84%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 621 (Div. 2) 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/codeforces-round-621-div2/"/>
    <id>http://lemonaaaaa.com/2020/02/codeforces-round-621-div2/</id>
    <published>2020-02-18T14:40:41.000Z</published>
    <updated>2020-04-17T12:59:39.283Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>居然这场比赛是11点35开始，打完都2点了，开学第一天就这样，根本hold不住。<br>总体来说，这次稀奇古怪的想法比较多，所以作为新手刚入门，也过了3道，rating上了1500，比初始值高了……<br>另外这场比赛的USACO风格倍感亲切。</p><h1 id="a-cow-and-haybales"><a class="markdownIt-Anchor" href="#a-cow-and-haybales"></a> A. Cow and Haybales</h1><blockquote><p><a href="https://codeforces.com/contest/1307/problem/A" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文"><a class="markdownIt-Anchor" href="#题目原文"></a> 题目原文</h2><p><img alt="1307A" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1307A.jpg" class="lazyload"></p><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>给从左到右 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个堆 ，每个堆有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个东西，每天可以把第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个堆里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 个东西拿到第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 个堆里。现问 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> 天后第一个堆里最多有多少个东西。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>直接模拟，第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个堆里的一个东西搬到第一个堆里需要花费 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>天。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,d,a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&d);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line"><span class="keyword">int</span> ans=a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">while</span>(a[i]&&d>=i<span class="number">-1</span>)</span><br><span class="line">{</span><br><span class="line">ans++;</span><br><span class="line">a[i]--;</span><br><span class="line">d-=(i<span class="number">-1</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="b-cow-and-friend"><a class="markdownIt-Anchor" href="#b-cow-and-friend"></a> B. Cow and Friend</h1><blockquote><p><a href="https://codeforces.com/contest/1307/problem/B" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-2"><a class="markdownIt-Anchor" href="#题目原文-2"></a> 题目原文</h2><p><img alt="1307B" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1307B.jpg" class="lazyload"></p><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个值和一个值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">val</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 。现在要从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 跳到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>v</mi><mi>a</mi><mi>l</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(val,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> ，每次可以从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个值中选一个来眺，求最少跳多少次可以到达。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>一般这种题都是找规律，就看能不能快速找到了（做了D题灵感才来）。<br>有以下几种情况：</p><ul><li>如果有刚好值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">val</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 的，那么一次就跳到终点。</li><li>如果有值大于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">val</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 的，那么两次就能跳到。因为可以第一次跳到垂直平分线 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mfrac><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">x=\frac{val}2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 上。</li><li>如果所有的值都小于都小于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">val</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> ，那么最优的肯定是挑最大的值来跳，然后按照前两点相同的方式判断即可。</li></ul><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> T,n,x,a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>{<span class="keyword">return</span> a>b;}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&n,&x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=x/a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(x%a[<span class="number">1</span>]) ans++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">if</span>(a[i]==x)</span><br><span class="line">{</span><br><span class="line">ans=<span class="number">1</span>;</span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(!flag&&a[<span class="number">1</span>]>x) ans=<span class="number">2</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="c-cow-and-message"><a class="markdownIt-Anchor" href="#c-cow-and-message"></a> C. Cow and Message</h1><blockquote><p><a href="https://codeforces.com/contest/1307/problem/C" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-3"><a class="markdownIt-Anchor" href="#题目原文-3"></a> 题目原文</h2><p><img alt="1307C" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1307C.jpg" class="lazyload"></p><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>求串 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> 中出现次数最多的子序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 的出现次数。其中子序列在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> 中所对应的下标必须构成等差数列。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>首先可以确定的是，我们找到的这个子序列，长度一定是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 或者 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> ，因为如果大于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 的话，条件就更难满足了。<br>那这道题也有三种情况：</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 为单字符，那么答案即为该字符出现的次数。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 为双字符，且两个字符是相同的，计该字符出现的次数为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> ，则答案为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>n</mi><mo>×</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{n\times(n-1)}2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">×</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 为双字符，且两个字符不同。那我们枚举每两个不同的字符，再拿其中一个字符枚举一个断点，去统计这些断点做出的贡献和，不断更新即可。</li></ul><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> alp[maxn][<span class="number">26</span>],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">ss</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span> </span>{<span class="keyword">return</span> (x<span class="number">-1</span>)*x/<span class="number">2</span>;}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lemon</span></span><br><span class="line"><span class="comment">//freopen("C.in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen("my.out","w",stdout);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) alp[i][str[i]-<span class="string">'a'</span>]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j<<span class="number">26</span>;j++)</span><br><span class="line">alp[i][j]+=alp[i<span class="number">-1</span>][j];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">26</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j<<span class="number">26</span>;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(i==j) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">1</span>;p<=n;p++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(str[p]-<span class="string">'a'</span>==i)</span><br><span class="line">{</span><br><span class="line">temp+=alp[n][j]-alp[p][j];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">ans=max(ans,temp);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">26</span>;i++) ans=max(ans,ss(alp[n][i]));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">26</span>;i++) ans=max(ans,alp[n][i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d-cow-and-fields"><a class="markdownIt-Anchor" href="#d-cow-and-fields"></a> D. Cow and Fields</h1><blockquote><p><a href="https://codeforces.com/contest/1307/problem/D" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-4"><a class="markdownIt-Anchor" href="#题目原文-4"></a> 题目原文</h2><p><img alt="1307D" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1307D.jpg" class="lazyload"></p><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>给一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个点， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 条边的无向图，边长都为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，现在有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 个特殊点，现必须选择 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 个特殊点中任意两个连上。求连上之后的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 号点到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 号点距离的最小值最大。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>几百年没碰过图论了，但是建图还是知道怎么建的……<br>先正反各跑一遍bfs，求出起点和终点的单源最短路径。然后我们就要确定加哪两个点之间的边了。我直接贪心，想的是肯定要找距起点距离尽量相同的两个点，造成贡献的可能性更小。因为如果加一条边并不会导致最小值变大，只有可能变小或者不变，那么我们就尽量让它不变。就这样，过了样例交上去，就AC了……</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < queue ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">400005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">int</span> to,next;</span><br><span class="line">} edge[maxn<<<span class="number">1</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">int</span> x,val;</span><br><span class="line">} b[maxn];</span><br><span class="line"><span class="keyword">int</span> head[maxn],k,n,m,cnt=<span class="number">0</span>,dist[maxn],st[maxn],sp=<span class="number">0</span>,bp=<span class="number">0</span>,a[maxn],dist2[maxn];</span><br><span class="line"><span class="keyword">bool</span> spe[maxn],vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">edge[++cnt].to=v;</span><br><span class="line">edge[cnt].next=head[u];</span><br><span class="line">head[u]=cnt;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">queue</span><<span class="keyword">int</span>> q;</span><br><span class="line"><span class="built_in">memset</span>(dist,<span class="number">0x7f7f7f7f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">q.push(<span class="number">1</span>);vis[<span class="number">1</span>]=<span class="literal">true</span>;dist[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(spe[<span class="number">1</span>])</span><br><span class="line">{</span><br><span class="line">b[++bp].x=<span class="number">1</span>;</span><br><span class="line">b[bp].val=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x=q.front();q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">{</span><br><span class="line">dist[edge[i].to]=min(dist[edge[i].to],dist[x]+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(!vis[edge[i].to])</span><br><span class="line">{</span><br><span class="line">q.push(edge[i].to);</span><br><span class="line">vis[edge[i].to]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(spe[edge[i].to])</span><br><span class="line">{</span><br><span class="line">b[++bp].x=edge[i].to;</span><br><span class="line">b[bp].val=dist[edge[i].to];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">queue</span><<span class="keyword">int</span>> q;</span><br><span class="line"><span class="built_in">memset</span>(dist2,<span class="number">0x7f7f7f7f</span>,<span class="keyword">sizeof</span>(dist2));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">q.push(n);vis[n]=<span class="literal">true</span>;dist2[n]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x=q.front();q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">{</span><br><span class="line">dist2[edge[i].to]=min(dist2[edge[i].to],dist2[x]+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(!vis[edge[i].to])</span><br><span class="line">{</span><br><span class="line">q.push(edge[i].to);</span><br><span class="line">vis[edge[i].to]=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*void dfs(int x,int dis)</span></span><br><span class="line"><span class="comment">{</span></span><br><span class="line"><span class="comment">vis[x]=true;</span></span><br><span class="line"><span class="comment">for(int i=head[x];i;i=edge[i].next)</span></span><br><span class="line"><span class="comment">{</span></span><br><span class="line"><span class="comment">if(vis[edge[i].to]) continue;</span></span><br><span class="line"><span class="comment">if(dist[edge[i].to]+1==dis)</span></span><br><span class="line"><span class="comment">{</span></span><br><span class="line"><span class="comment">if(spe[edge[i].to])</span></span><br><span class="line"><span class="comment">{</span></span><br><span class="line"><span class="comment">st[++sp]=edge[i].to;</span></span><br><span class="line"><span class="comment">b[++bp].x=edge[i].to;</span></span><br><span class="line"><span class="comment">b[bp].val=dist[edge[i].to];</span></span><br><span class="line"><span class="comment">}</span></span><br><span class="line"><span class="comment">dfs(edge[i].to,dis-1);</span></span><br><span class="line"><span class="comment">}</span></span><br><span class="line"><span class="comment">}</span></span><br><span class="line"><span class="comment">}*/</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Node a,Node b)</span> </span>{<span class="keyword">return</span> a.val<b.val;}< span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&n,&m,&k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=k;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">spe[a[i]]=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=m;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&a,&b);</span><br><span class="line">add(a,b);add(b,a);</span><br><span class="line">}</span><br><span class="line">bfs();</span><br><span class="line">bfs2();</span><br><span class="line"><span class="comment">/*memset(vis,false,sizeof(vis));</span></span><br><span class="line"><span class="comment">if(spe[n])</span></span><br><span class="line"><span class="comment">{</span></span><br><span class="line"><span class="comment">st[++sp]=n;</span></span><br><span class="line"><span class="comment">b[++bp].x=n;</span></span><br><span class="line"><span class="comment">b[bp].val=dist[n];</span></span><br><span class="line"><span class="comment">}</span></span><br><span class="line"><span class="comment">dfs(n,dist[n]);*/</span></span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">sort(b+<span class="number">1</span>,b+bp+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<bp;i++)< span><br><span class="line">{</span><br><span class="line">ans=max(ans,dist2[b[i+<span class="number">1</span>].x]+<span class="number">1</span>+dist[b[i].x]-dist[<span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line">ans=min(ans,dist[n]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></bp;i++)<></span></b.val;}<></span></pre></td></tr></tbody></table></figure></div><p>未完待续……（可能吧）</p><p><img alt="round-621" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/standings/round-621.jpg" class="lazyload"></p>        <div id="aplayer-PJtcaLCt" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-PJtcaLCt"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "I'm still here",              author: "Sia",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/imstillhere.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/imstillhere.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/imstillhere.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
      <category term="Round" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/Round/"/>
    
    
      <category term="图论" scheme="http://lemonaaaaa.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="思维" scheme="http://lemonaaaaa.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="字符串" scheme="http://lemonaaaaa.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="搜索" scheme="http://lemonaaaaa.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="最短路" scheme="http://lemonaaaaa.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 620 (Div. 2) 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/codeforces-round-620-div2/"/>
    <id>http://lemonaaaaa.com/2020/02/codeforces-round-620-div2/</id>
    <published>2020-02-16T12:40:56.000Z</published>
    <updated>2020-02-16T12:40:56.038Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>实在没有时间写了，打得又烂，掉了50多rating，还不如新注册一个号。明天开学了，就转一下大佬 Phoenix-ZH 的博客，写的思路比较清晰，人也长得帅。</p><h1 id="戳我看题解"><a class="markdownIt-Anchor" href="#戳我看题解"></a> <a href="http://phoenix-zh.cn/2020/02/16/CodeForces-1304/" target="_blank" rel="noopener">戳我看题解</a></h1><p>真的惨：<br><img alt="round-620" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/standings/round-620.jpg" class="lazyload"></p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
      <category term="Round" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/Round/"/>
    
    
      <category term="图论" scheme="http://lemonaaaaa.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="思维" scheme="http://lemonaaaaa.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="字符串" scheme="http://lemonaaaaa.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="树" scheme="http://lemonaaaaa.com/tags/%E6%A0%91/"/>
    
      <category term="贪心" scheme="http://lemonaaaaa.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="LCA" scheme="http://lemonaaaaa.com/tags/LCA/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 619 (Div. 2) 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/codeforces-round-619-div2/"/>
    <id>http://lemonaaaaa.com/2020/02/codeforces-round-619-div2/</id>
    <published>2020-02-16T11:58:24.000Z</published>
    <updated>2020-02-16T11:58:24.785Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>果然还是我自己太菜了，真的第一学期根本没碰算法，现在各种题都是似曾相识而不知如何去解。也不敢往复杂的地方去想。可能要重新学一遍算法，保证最最基础的都会，才能进一步地提升。</p>        <div id="aplayer-ZaEEcAAj" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-ZaEEcAAj"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "爱笑的眼睛",              author: "林俊杰",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/aixiaodeyanjing.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/tashuo.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/aixiaodeyanjing.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="a-three-strings"><a class="markdownIt-Anchor" href="#a-three-strings"></a> A. Three Strings</h1><blockquote><p><a href="https://codeforces.com/contest/1301/problem/A" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文"><a class="markdownIt-Anchor" href="#题目原文"></a> 题目原文</h2><p><img alt="1301A" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1301A.jpg" class="lazyload"></p><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>给三个长度都为len的字符串 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 、 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 、 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 。对于每个位置，必须进行 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 交换，或者 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 进行交换，这样一共进行了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">len</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span> 次交换，你可以选择 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 还是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 交换，问是否存在操作，使得字符串 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 相等？</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>很显然如果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 相同，那肯定是和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 换；如果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 相同，那肯定是和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 换；否则就随便换一个（不一样的话就直接NO了）。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">char</span> s1[maxn],s2[maxn],s3[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(s1,<span class="number">0</span>,<span class="keyword">sizeof</span>(s1));</span><br><span class="line"><span class="built_in">memset</span>(s2,<span class="number">0</span>,<span class="keyword">sizeof</span>(s2));</span><br><span class="line"><span class="built_in">memset</span>(s3,<span class="number">0</span>,<span class="keyword">sizeof</span>(s3));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>,s1+<span class="number">1</span>,s2+<span class="number">1</span>,s3+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">strlen</span>(s1+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(s1[i]==s3[i]) s2[i]=s3[i];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s2[i]==s3[i]) s1[i]=s3[i];</span><br><span class="line"><span class="keyword">else</span> s1[i]=s3[i];</span><br><span class="line"><span class="keyword">if</span>(s1[i]!=s2[i])</span><br><span class="line">{</span><br><span class="line">flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="b-motaracks-birthday"><a class="markdownIt-Anchor" href="#b-motaracks-birthday"></a> B. Motarack’s Birthday</h1><blockquote><p><a href="https://codeforces.com/contest/1301/problem/B" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-2"><a class="markdownIt-Anchor" href="#题目原文-2"></a> 题目原文</h2><p><img alt="1301B" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1301B.jpg" class="lazyload"></p><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给出一串数组，其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span> 代表未知,现在要用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 去替换，使相邻两个数之差的绝对值最小，求这个最小值和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>当时考试的时候太蠢了，写得很复杂。其实就是题做少了，简单的思维量却写出冗长的代码，最后一分钟发现bug，可惜已经不能改变结局了……</p><p>先求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> ， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 显然就是所有挨着 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span> 的非负值的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">max</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">min</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span></span></span></span> 的和的一半，然后再把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 带进去扫一遍即可。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">4000005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> inf=<span class="number">1e18</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lemon</span></span><br><span class="line">freopen(<span class="string">"B.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&n);a[<span class="number">0</span>]=a[n+<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> maxx=<span class="number">-1</span>,minn=inf,m=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[i]!=<span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(i!=<span class="number">1</span>&&a[i<span class="number">-1</span>]!=<span class="number">-1</span>) maxx=max(maxx,a[i<span class="number">-1</span>]),minn=min(minn,a[i<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">if</span>(i!=n&&a[i+<span class="number">1</span>]!=<span class="number">-1</span>) minn=min(minn,a[i+<span class="number">1</span>]),maxx=max(maxx,a[i+<span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(maxx==<span class="number">-1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0 0\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> k=(maxx+minn)>><span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">1</span>;i<n;i++)< span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> xx=a[i],yy=a[i+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(xx==<span class="number">-1</span>) xx=k;</span><br><span class="line"><span class="keyword">if</span>(yy==<span class="number">-1</span>) yy=k;</span><br><span class="line">m=max(m,<span class="built_in">abs</span>(xx-yy));</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,m,k);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></n;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="c-ayoubs-function"><a class="markdownIt-Anchor" href="#c-ayoubs-function"></a> C. Ayoub’s function</h1><blockquote><p><a href="https://codeforces.com/contest/1301/problem/C" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-3"><a class="markdownIt-Anchor" href="#题目原文-3"></a> 题目原文</h2><p><img alt="1301C" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1301C.jpg" class="lazyload"></p><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>请你构造出一个长度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>01</mn></mrow><annotation encoding="application/x-tex">01</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">1</span></span></span></span> 串，其中有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，使得 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span> 最大。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span> 为包含 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的区间 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>l</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(l,r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span> 的个数。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>首先一个长度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的串，它的区间个数为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>n</mi><mo>×</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{n\times(n+1)}2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">×</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 。这道题求包含 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的区间个数，其实我们可以用总区间数去减去全为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的区间即可。<br>而怎么达到最少的连续的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的区间呢？其实直接将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 平均分下去即可。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> T,n,m;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span> </span>{<span class="keyword">return</span> (<span class="number">1</span>+x)*x/<span class="number">2</span>;}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lemon</span></span><br><span class="line">freopen(<span class="string">"C.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&n,&m);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=sum(n);</span><br><span class="line"><span class="keyword">if</span>(m==<span class="number">0</span>) ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> res=n-m;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> per=res/(m+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> mod=res%(m+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//printf("$$%lld %lld %lld\n",res,per,mod);</span></span><br><span class="line">ans-=(sum(per)*(m+<span class="number">1</span>-mod))+(sum(per+<span class="number">1</span>)*mod);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>剩下的等我做出来再补。（怕是做不出来了）</p><p><img alt="round-619" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/standings/round-619.jpg" class="lazyload"></p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
      <category term="Round" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/Round/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="思维" scheme="http://lemonaaaaa.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="数论" scheme="http://lemonaaaaa.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 82 (Rated for Div. 2) 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/educational-codeforces-round-82-div2/"/>
    <id>http://lemonaaaaa.com/2020/02/educational-codeforces-round-82-div2/</id>
    <published>2020-02-13T10:15:16.000Z</published>
    <updated>2020-04-17T12:59:19.580Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>打了那么多cf(cross fire)，这才第一次打了高端cf(codeforces)……感觉2个小时确实有点紧，很考验选手临危不乱的心态，还有读题一定要快，结合着样例反推题意很有效果。</p><h1 id="a-erasing-zeroes"><a class="markdownIt-Anchor" href="#a-erasing-zeroes"></a> A. Erasing Zeroes</h1><blockquote><p><a href="https://codeforces.com/contest/1303/problem/A" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文"><a class="markdownIt-Anchor" href="#题目原文"></a> 题目原文</h2><p><img alt="1303A" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1303A.jpg" class="lazyload"></p><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>给出一个01串，求最少删除多少个0，保证字符串中所有的1都是相邻的。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>模拟。假设当前位i是1，上一个1的位置是j，那么中间就有i-j-1个0。所以开一个变量记录上一个1的位置，不断累加答案即可。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">105</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(str,<span class="number">0</span>,<span class="keyword">sizeof</span>(str));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">bool</span> f=<span class="literal">false</span>;<span class="keyword">int</span> last=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(str[i]==<span class="string">'1'</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!f)</span><br><span class="line">{</span><br><span class="line">f=<span class="literal">true</span>;</span><br><span class="line">last=i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">ans+=(i-last<span class="number">-1</span>);</span><br><span class="line">last=i;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="b-national-project"><a class="markdownIt-Anchor" href="#b-national-project"></a> B. National Project</h1><blockquote><p><a href="https://codeforces.com/contest/1303/problem/B" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-2"><a class="markdownIt-Anchor" href="#题目原文-2"></a> 题目原文</h2><p><img alt="1303B" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1303B.jpg" class="lazyload"></p><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给出要修的路的长度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，能修出好路的周期时间g，不能修出好路的周期时间b。现在从能修出好路的周期开始，问在保证修的所有路中好路的比例要大于或等于一半的条件下，至少需要多少天。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>我用的二分答案，然后尽量在能修出好路的周期时间里修，看是否满足条件</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,g,b,T;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lemon</span></span><br><span class="line">freopen(<span class="string">"B.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&n,&g,&b);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> left=n,right=<span class="number">1e18</span>,ans=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(left<=right)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> mid=(left+right)>><span class="number">1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> cc=mid/(b+g);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> res=mid%(b+g);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> gd=g*cc+min(res,g);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> bd=b*cc+max(<span class="number">0l</span>l,res-g);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=mid-n;</span><br><span class="line"><span class="keyword">if</span>(bd-temp<<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">gd+=(bd-temp);</span><br><span class="line">bd=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">   <span class="keyword">else</span> bd-=temp;</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tot=gd+bd;</span><br><span class="line"><span class="keyword">if</span>((tot+<span class="number">1</span>)/<span class="number">2</span><=gd) flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(flag) ans=mid,right=mid<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> left=mid+<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="c-perfect-keyboard"><a class="markdownIt-Anchor" href="#c-perfect-keyboard"></a> C. Perfect Keyboard</h1><blockquote><p><a href="https://codeforces.com/contest/1303/problem/C" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-3"><a class="markdownIt-Anchor" href="#题目原文-3"></a> 题目原文</h2><p><img alt="1303C" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1303C.jpg" class="lazyload"></p><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>有一个键盘，只有一行26个小写字母。现在一个人想每次只按相邻的两个键，比如说这次按了pos位置的键，下一次只能按pos-1或者pos+1位置的键。现在给出一个字符串，问能不能通过这样的方式按出，如果能，请输出键盘布局。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>搜索。直接上dfs完。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">205</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn],ans[<span class="number">505</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn],used[maxn];</span><br><span class="line"><span class="keyword">int</span> n,flag,T;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(x==n+<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(vis[pos+<span class="number">1</span>]&&ans[pos+<span class="number">1</span>]==str[x]) dfs(x+<span class="number">1</span>,pos+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(vis[pos<span class="number">-1</span>]&&ans[pos<span class="number">-1</span>]==str[x]) dfs(x+<span class="number">1</span>,pos<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((!vis[pos+<span class="number">1</span>])&&(!used[str[x]]))</span><br><span class="line">{</span><br><span class="line">vis[pos+<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">ans[pos+<span class="number">1</span>]=str[x];</span><br><span class="line">used[str[x]]=<span class="literal">true</span>;</span><br><span class="line">dfs(x+<span class="number">1</span>,pos+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(flag!=<span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">vis[pos+<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">used[str[x]]=<span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>((!vis[pos<span class="number">-1</span>])&&(!used[str[x]]))</span><br><span class="line">{</span><br><span class="line">vis[pos<span class="number">-1</span>]=<span class="literal">true</span>;</span><br><span class="line">ans[pos<span class="number">-1</span>]=str[x];</span><br><span class="line">used[str[x]]=<span class="literal">true</span>;</span><br><span class="line">dfs(x+<span class="number">1</span>,pos<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(flag!=<span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">vis[pos<span class="number">-1</span>]=<span class="literal">false</span>;</span><br><span class="line">used[str[x]]=<span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(str,<span class="number">0</span>,<span class="keyword">sizeof</span>(str));</span><br><span class="line"><span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="built_in">memset</span>(used,<span class="literal">false</span>,<span class="keyword">sizeof</span>(used));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line">n=<span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line">flag=<span class="number">-1</span>;</span><br><span class="line">ans[<span class="number">250</span>]=str[<span class="number">1</span>];</span><br><span class="line">vis[<span class="number">250</span>]=<span class="literal">true</span>;used[str[<span class="number">1</span>]]=<span class="literal">true</span>;</span><br><span class="line">dfs(<span class="number">2</span>,<span class="number">250</span>);</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">-1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">250</span>,left=<span class="number">250</span>,right=<span class="number">250</span>;</span><br><span class="line"><span class="keyword">while</span>(vis[now+<span class="number">1</span>]) now++,right=now;</span><br><span class="line">now=<span class="number">250</span>;</span><br><span class="line"><span class="keyword">while</span>(vis[now<span class="number">-1</span>]) now--,left=now;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=left;i<=right;i++) <span class="built_in">printf</span>(<span class="string">"%c"</span>,ans[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="string">'a'</span>;i<=<span class="string">'z'</span>;i++) <span class="keyword">if</span>(!used[i]) <span class="built_in">printf</span>(<span class="string">"%c"</span>,i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d-fill-the-bag"><a class="markdownIt-Anchor" href="#d-fill-the-bag"></a> D. Fill The Bag</h1><blockquote><p><a href="https://codeforces.com/contest/1303/problem/D" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-4"><a class="markdownIt-Anchor" href="#题目原文-4"></a> 题目原文</h2><p><img alt="1303D" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1303D.jpg" class="lazyload"></p><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>给出一个数字<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>和m个数，这m个数都是2的幂次方。<br>现在每次操作你可以把m个数中的一个平均地一分为2，比如32 操作一次得到两个16，再操作一次就是4个8，现在问最少要操作多少次，可以在操作后把这些数字恰好凑为n。如果无解请输出-1。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>比赛的时候只有20分钟了，思路比较混乱，刚预处理出来比赛就结束了。<br>首先如果这m个数之和是大于或者等于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>的，那么一定有解，反之一定无解，可以通过数的二进制表示来证明。<br>如果有解的话，我们先预处理出这m个数所对应的二进制位并存入cnt数组。然后我们去找n的二进制下为1的位置i是否在m个数存在（检测cnt数组即可），若存在，那么我们就不用拆了。若不存在，那么我们就拆第i+1个数，并且ans++，依次做下去即可。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,m,a[maxn],cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&n,&m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=m;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line">sum+=a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> j=<span class="number">0</span>;;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>((<span class="number">1l</span>l<<j)&a[i])< span><br><span class="line">{</span><br><span class="line">cnt[j]++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(sum<n)< span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">0</span>;i<<span class="number">63</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> now=(n>>i)&<span class="number">1</span>;</span><br><span class="line">cnt[i]-=now;</span><br><span class="line"><span class="keyword">if</span>(cnt[i]>=<span class="number">2</span>) cnt[i+<span class="number">1</span>]+=cnt[i]/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt[i]<<span class="number">0</span>) cnt[i+<span class="number">1</span>]--,ans++;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></n)<></span></j)&a[i])<></span></pre></td></tr></tbody></table></figure></div><h1 id="e-erase-subsequences"><a class="markdownIt-Anchor" href="#e-erase-subsequences"></a> E. Erase Subsequences</h1><blockquote><p><a href="https://codeforces.com/contest/1303/problem/E" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目原文-5"><a class="markdownIt-Anchor" href="#题目原文-5"></a> 题目原文</h2><p><img alt="1303D" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/problems/1303E.jpg" class="lazyload"></p><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>给定字符串<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">s1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord">1</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">s2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord">2</span></span></span></span>，问能否用至多两个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">s1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord">1</span></span></span></span>的非重叠子序列相加构造出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">s2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord">2</span></span></span></span></p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>和寒假集训第五天的H题相似而略有不同。上次的题是刚好拼出，两个子序列长度相加等于字符串总长，这道题要求存在子序列即可（只要长度等于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">s2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord">2</span></span></span></span>即可）。所以只需要将转移改成位置就好了。</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">405</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x7f7f7f7f</span>;</span><br><span class="line"><span class="keyword">char</span> s1[maxn],s2[maxn],s3[maxn];</span><br><span class="line"><span class="keyword">int</span> T,nxt[maxn][<span class="number">26</span>],f[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(s1,<span class="number">0</span>,<span class="keyword">sizeof</span>(s1));</span><br><span class="line"><span class="built_in">memset</span>(s2,<span class="number">0</span>,<span class="keyword">sizeof</span>(s2));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s1+<span class="number">1</span>,s2+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> l1=<span class="built_in">strlen</span>(s1+<span class="number">1</span>),l2=<span class="built_in">strlen</span>(s2+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">26</span>;i++) nxt[l1][i]=inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l1;i;i--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j<<span class="number">26</span>;j++) nxt[i<span class="number">-1</span>][j]=nxt[i][j];</span><br><span class="line">nxt[i<span class="number">-1</span>][s1[i]-<span class="string">'a'</span>]=i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=l2;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> l3=l2-i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j<=l2;j++) s3[j-i]=s2[j];</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j<=i;j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">0</span>;p<=l3;p++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!j&&!p) <span class="keyword">continue</span>;</span><br><span class="line">f[j][p]=inf;</span><br><span class="line"><span class="keyword">if</span>(j&&f[j<span class="number">-1</span>][p]!=inf) f[j][p]=min(f[j][p],nxt[f[j<span class="number">-1</span>][p]][s2[j]-<span class="string">'a'</span>]);</span><br><span class="line"><span class="keyword">if</span>(p&&f[j][p<span class="number">-1</span>]!=inf) f[j][p]=min(f[j][p],nxt[f[j][p<span class="number">-1</span>]][s3[p]-<span class="string">'a'</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(f[i][l3]<=l1) flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>剩下的等我做出来再补。</p><p><img alt="edu-round-82" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/codeforces/standings/edu-round-82.jpg" class="lazyload"></p>        <div id="aplayer-ytpKyNlA" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-ytpKyNlA"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "老街",              author: "李荣浩",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/laojie.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/xiaohuang.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/laojie2.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
      <category term="Round" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/Round/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="搜索" scheme="http://lemonaaaaa.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="二进制" scheme="http://lemonaaaaa.com/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
      <category term="二分答案" scheme="http://lemonaaaaa.com/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>武汉大学新生寒假集训测试Day7 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/whuwvttf-day7/"/>
    <id>http://lemonaaaaa.com/2020/02/whuwvttf-day7/</id>
    <published>2020-02-12T06:25:34.000Z</published>
    <updated>2020-04-17T12:48:52.520Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><h1 id="a"><a class="markdownIt-Anchor" href="#a"></a> A</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/977/B" target="_blank" rel="noopener">Codeforces Round #479 (Div. 3)</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>求出现次数最多的two-gram的子串，一个two-gram串是指在原字符串中出现的连续的两个字母.</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>直接枚举每每相邻的两个字符，用map或者hash计一下出现次数不断取max即可。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< map ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< iostream ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< string ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="built_in">map</span><<span class="built_in">string</span>,<span class="keyword">int</span>> mp;</span><br><span class="line"><span class="keyword">int</span> maxx=<span class="number">0</span>,n;</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="built_in">string</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<n;i++)< span><br><span class="line">{</span><br><span class="line"><span class="built_in">string</span> temp=<span class="string">""</span>;</span><br><span class="line">temp+=str[i];</span><br><span class="line">temp+=str[i+<span class="number">1</span>];</span><br><span class="line">mp[temp]++;</span><br><span class="line"><span class="keyword">if</span>(mp[temp]>maxx)</span><br><span class="line">{</span><br><span class="line">maxx=mp[temp];</span><br><span class="line">ans=temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<ans;< span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></ans;<></span></n;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="b"><a class="markdownIt-Anchor" href="#b"></a> B</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/977/C" target="_blank" rel="noopener">Codeforces Round #479 (Div. 3)</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给出一个n个数字组成的序列，问是否存在一个整数x，使得该序列刚好有k个数小于或等于x，存在即输出该x，否则输出-1。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1\leq x,a_i\leq10^9) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>直接从小到大排序，取第k个数即可。如果第k个数和第k+1个数相等，那么就一定不存在整数x，使得恰好有k个数小于或等于x。**这里要特别注意k=0的情况,如果k=0并且最小的数不为1，那么就有解，反之则无解。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(k)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[k]==a[k+<span class="number">1</span>]) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[k]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">1</span>]==<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/977/A" target="_blank" rel="noopener">Codeforces Round #479 (Div. 3)</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>给出一个数n，求将这个数按以下规则操作k次后的结果是多少。</p><ul><li>如果这个数最后一位不是0，那么将这个数减去1。</li><li>如果这个数最后一位是0，那么将这个数除以10。</li></ul><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>按题目要求模拟即可。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k);</span><br><span class="line"><span class="keyword">while</span>(k--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">10</span>!=<span class="number">0</span>) n--;</span><br><span class="line"><span class="keyword">else</span> n/=<span class="number">10</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d"><a class="markdownIt-Anchor" href="#d"></a> D</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/977/D" target="_blank" rel="noopener">Codeforces Round #479 (Div. 3)</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>最开始有一个数x，可以将它乘2，或者如果它能整除3，可以将它除以3，再将得到的数这样操作，就会得到一连串的数。现在给出最后得到的一连串的n个数，反推每一次操作时的数。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>100</mn><mspace linebreak="newline"></mspace><mn>1</mn><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mn>3</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>18</mn></msup><mtext>  </mtext><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">1\leq n\leq100\\1\leq a_i\leq3\times10^{18}\;(1\leq i\leq n)\\ </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span><span class="mspace newline"></span></span></span></span></p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>直接dfs搜索……没想到这么水。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< set ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a[maxn],ans[maxn];</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">long</span> <span class="keyword">long</span>> s;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(x==n)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">printf</span>(<span class="string">"%lld "</span>,ans[i]);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=ans[x]*<span class="number">2</span>;</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">long</span> <span class="keyword">long</span>>::iterator it;</span><br><span class="line">it=s.find(temp);</span><br><span class="line"><span class="keyword">if</span>(it!=s.end())</span><br><span class="line">{</span><br><span class="line">s.erase(it);</span><br><span class="line">ans[x+<span class="number">1</span>]=temp;</span><br><span class="line">dfs(x+<span class="number">1</span>);</span><br><span class="line">s.insert(temp);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(ans[x]%<span class="number">3</span>!=<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">temp=ans[x]/<span class="number">3</span>;</span><br><span class="line">it=s.find(temp);</span><br><span class="line"><span class="keyword">if</span>(it!=s.end())</span><br><span class="line">{</span><br><span class="line">s.erase(it);</span><br><span class="line">ans[x+<span class="number">1</span>]=temp;</span><br><span class="line">dfs(x+<span class="number">1</span>);</span><br><span class="line">s.insert(temp);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line">s.insert(a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line">ans[<span class="number">1</span>]=a[i];</span><br><span class="line">s.erase(ans[<span class="number">1</span>]);</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line">s.insert(ans[<span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="e"><a class="markdownIt-Anchor" href="#e"></a> E</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/975/A" target="_blank" rel="noopener">Codeforces Round #478 (Div. 2)</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>给出一个字符串，问有几个root,root的意思是一个字符串中所有的不重复字母，无关顺序。</p><ul><li>比如a,aa,aaa,ab,abb，去重后的是字符串是a,a,a,ab,ab，只有a,ab两个root。</li><li>比如amer,arem,mrea，只有一个root。</li></ul><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>直接枚举所有的字串，因为英文小写字母只有26个，所以在这里我采用了状态压缩，每一个字母对应二进制下的一位。用状压之后的数存map，就保证了与顺序没有关系，然后统计有多少个不同数即可。如果用set的话也可以直接输出set中元素的个数。</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< map ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="built_in">map</span><<span class="keyword">int</span>,<span class="keyword">bool</span>> mp;</span><br><span class="line"><span class="keyword">int</span> b[maxn],n,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=len;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> p=str[j]-<span class="string">'a'</span>;</span><br><span class="line">temp|=(<span class="number">1</span><<p);< span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(!mp[temp]) ans++;</span><br><span class="line">mp[temp]=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></p);<></span></pre></td></tr></tbody></table></figure></div><h1 id="f"><a class="markdownIt-Anchor" href="#f"></a> F</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/975/C" target="_blank" rel="noopener">Codeforces Round #478 (Div. 2)</a></p></blockquote><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p>你有n个士兵，每个士兵的生命值为ai，有q轮攻击，每轮攻击的伤害值为ki，如果在某一轮中士兵全部死光了，那么在这一轮结束的时候就会全部复活，且这一轮攻击剩下的伤害就会被忽略，问你每轮攻击结束后你会有多少个士兵。</p><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><p>用前缀和统计前n个士兵的生命值。每次攻击时先判断是否可以全部击杀，如果可以，答案为n；如果不能，用二分找到第一个大于等于当前攻击值所对应的编号pos。如果攻击值刚好可以击杀位置为pos的士兵，那么答案就是n-pos，如果还不足以击杀位置为pos的士兵，那么答案就是n-pos+1。</p><h2 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,q,a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&n,&q);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&x);</span><br><span class="line">tot+=x;</span><br><span class="line"><span class="keyword">if</span>(tot>=a[n])</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n);</span><br><span class="line">tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> pos=lower_bound(a+<span class="number">1</span>,a+n+<span class="number">1</span>,tot)-a;</span><br><span class="line"><span class="keyword">if</span>(a[pos]-tot) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n-pos+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n-pos);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="g"><a class="markdownIt-Anchor" href="#g"></a> G</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/975/B" target="_blank" rel="noopener">Codeforces Round #478 (Div. 2)</a></p></blockquote><h2 id="题目大意-7"><a class="markdownIt-Anchor" href="#题目大意-7"></a> 题目大意</h2><p><img alt="CF975B" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF975B.jpg" class="lazyload"></p><p>有14个洞，可以选择从第i个洞取出全部石头，然后在第i+1上放一个，第i+2上放一个，14个洞不停循环放置，直到全部放完，然后把14个洞里偶数的数相加，求最大值。</p><h2 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h2><p>模拟，关键要看懂题。每个洞取出来放一放，取最大值即可。</p><h2 id="代码-7"><a class="markdownIt-Anchor" href="#代码-7"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[maxn],ans=<span class="number">0</span>,b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">14</span>;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">14</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x=a[i]/<span class="number">14</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=<span class="number">14</span>;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(i==j) b[j]=x;</span><br><span class="line"><span class="keyword">else</span> b[j]=a[j]+x;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> res=a[i]%<span class="number">14</span>;</span><br><span class="line"><span class="keyword">int</span> now=i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(res)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(now==<span class="number">15</span>) now=<span class="number">1</span>;</span><br><span class="line">b[now]++;</span><br><span class="line">res--;</span><br><span class="line">now++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=<span class="number">14</span>;j++)</span><br><span class="line"><span class="keyword">if</span>(!(b[j]&<span class="number">1</span>)) temp+=b[j];</span><br><span class="line">ans=max(ans,temp);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="h"><a class="markdownIt-Anchor" href="#h"></a> H</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/975/D" target="_blank" rel="noopener">Codeforces Round #478 (Div. 2)</a></p></blockquote><h2 id="题目大意-8"><a class="markdownIt-Anchor" href="#题目大意-8"></a> 题目大意</h2><p>在一个平面上，0时刻有n个点在一条方程为y=a⋅x+b的直线上，保证这n个点不重合，告诉你n、a和b，然后给你n个点的x坐标和它们所具有的速度矢量Vx和Vy，代表这个点在X方向上的速度为Vx，Y方向上的速度为Vy，某两个点碰撞一次会产生2个单位的权值（碰撞时不会改变路径也不会改变速度），问你这些点一共会产生多少权值。<br>需要注意的是给的是0时刻的状态，但时间的范围是(−∞,∞)，所以说在0时刻以前的碰撞也会对答案产生贡献。</p><p><img alt="CF975D" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF975D.jpg" class="lazyload"></p><h2 id="思路-8"><a class="markdownIt-Anchor" href="#思路-8"></a> 思路</h2><p>因为要求碰撞次数，实际上就是看这些点运动轨迹的直线相交得到的交点数量。那我们现在就推导一下相交条件。</p><p>设点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> ，假设他们在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 时刻相遇,则有<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><msub><mi>V</mi><msub><mi>x</mi><mi>i</mi></msub></msub><mo>⋅</mo><mi>t</mi><mtext>  </mtext><mo>=</mo><mtext>  </mtext><msub><mi>x</mi><mi>j</mi></msub><mo>+</mo><msub><mi>V</mi><msub><mi>x</mi><mi>j</mi></msub></msub><mo>⋅</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">x_i+V_{x_i}\cdot t\;=\;x_j+V_{x_j}\cdot t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>+</mo><msub><mi>V</mi><msub><mi>y</mi><mi>i</mi></msub></msub><mo>⋅</mo><mi>t</mi><mtext>  </mtext><mo>=</mo><mtext>  </mtext><msub><mi>y</mi><mi>j</mi></msub><mo>+</mo><msub><mi>V</mi><msub><mi>y</mi><mi>j</mi></msub></msub><mo>⋅</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">y_i+V_{y_i}\cdot t\;=\;y_j+V_{y_j}\cdot t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span><br>移相后两式相除，消去 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 得<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace linebreak="newline"></mspace><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub></mrow><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mfrac><mrow><msub><mi>V</mi><msub><mi>x</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>x</mi><mi>i</mi></msub></msub></mrow><mrow><msub><mi>V</mi><msub><mi>y</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>y</mi><mi>i</mi></msub></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\\ \frac{x_i-x_j}{y_i-y_j}\;=\;\frac{V_{x_j}-V_{x_i}}{V_{y_j}-V_{y_i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.457971em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.915651em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.8426909999999999em;vertical-align:-0.69968em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.143011em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.03588em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5091600000000001em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5066857142857143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.03588em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3678em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.66468em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5091600000000001em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5066857142857143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3678em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.69968em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace linebreak="newline"></mspace><mo>∵</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">\\ \because i,j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 两点在同一直线上且该直线斜率为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace linebreak="newline"></mspace><mo>∴</mo><mfrac><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub></mrow><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mi>a</mi></mrow><annotation encoding="application/x-tex">\\ \therefore\frac{y_i-y_j}{x_i-x_j}\;=\;a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.457971em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.915651em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span><br>代入上式，得<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace linebreak="newline"></mspace><mfrac><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub></mrow><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mi>a</mi><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mfrac><mrow><msub><mi>V</mi><msub><mi>y</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>y</mi><mi>i</mi></msub></msub></mrow><mrow><msub><mi>V</mi><msub><mi>x</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>x</mi><mi>i</mi></msub></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\\ \frac{y_i-y_j}{x_i-x_j}\;=\;a\;=\;\frac{V_{y_j}-V_{y_i}}{V_{x_j}-V_{x_i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.457971em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.915651em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.8426909999999999em;vertical-align:-0.69968em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.143011em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5091600000000001em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5066857142857143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3678em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.66468em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.03588em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5091600000000001em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5066857142857143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.03588em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathdefault mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3678em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.69968em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>十字相乘，移相得<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>⋅</mo><msub><mi>V</mi><msub><mi>x</mi><mi>i</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>y</mi><mi>i</mi></msub></msub><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mi>a</mi><mo>⋅</mo><msub><mi>V</mi><msub><mi>x</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>y</mi><mi>j</mi></msub></msub></mrow><annotation encoding="application/x-tex">a\cdot V_{x_i}-V_{y_i}\;=\;a\cdot V_{x_j}-V_{y_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span></span></span></span><br>上式即为两个点能产生贡献的条件</p><h2 id="代码-8"><a class="markdownIt-Anchor" href="#代码-8"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< map ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="built_in">map</span><<span class="keyword">long</span> <span class="keyword">long</span>,<span class="keyword">int</span>> tot;</span><br><span class="line"><span class="built_in">map</span><pair<<span class="keyword">long</pair<<span></span> <span class="keyword">long</span>,<span class="keyword">long</span> <span class="keyword">long</span>>,<span class="keyword">int</span>> par;<br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a,same=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%*d"</span>,&n,&a);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> vx,vy;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%*d%lld%lld"</span>,&vx,&vy);</span><br><span class="line">ans+=tot[a*vx-vy];</span><br><span class="line">tot[a*vx-vy]++;</span><br><span class="line">same+=par[make_pair(vx,vy)];</span><br><span class="line">par[make_pair(vx,vy)]++;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans-same)*<span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>难度不是很大，但看不懂英语题面真的伤。还有就是思路一定要清晰，先想清楚再写，要不然就会写得很混乱，debug也会崩溃，比如比赛时写的F题。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day7.jpg" class="lazyload"></p>        <div id="aplayer-iRBQSpwa" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-iRBQSpwa"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="搜索" scheme="http://lemonaaaaa.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="前缀和" scheme="http://lemonaaaaa.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
      <category term="计算几何" scheme="http://lemonaaaaa.com/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
      <category term="map" scheme="http://lemonaaaaa.com/tags/map/"/>
    
      <category term="stl" scheme="http://lemonaaaaa.com/tags/stl/"/>
    
      <category term="哈希" scheme="http://lemonaaaaa.com/tags/%E5%93%88%E5%B8%8C/"/>
    
      <category term="状态压缩" scheme="http://lemonaaaaa.com/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/"/>
    
      <category term="二分查找" scheme="http://lemonaaaaa.com/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces 884F Anti-Palindromize</title>
    <link href="http://lemonaaaaa.com/2020/02/codeforces-884F/"/>
    <id>http://lemonaaaaa.com/2020/02/codeforces-884F/</id>
    <published>2020-02-11T10:06:36.000Z</published>
    <updated>2020-02-12T14:13:06.268Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><blockquote><p><a href="http://codeforces.com/problemset/problem/884/F" target="_blank" rel="noopener">题目链接1</a></p></blockquote><blockquote><p><a href="https://www.luogu.com.cn/problem/CF884F" target="_blank" rel="noopener">题目链接2</a></p></blockquote><h1 id="题目原文"><a class="markdownIt-Anchor" href="#题目原文"></a> 题目原文</h1><p><img alt="CF884F" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF884F.jpg" class="lazyload"></p><p><img alt="CF884F_cn" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF884F_cn.jpg" class="lazyload"></p><h1 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h1><p>将一个字符串打乱后放回，满足第一个位置上的字符和最后一个位置上的字符不相同，第二个的位置上的字符和倒数第二个位置上的字符不相同…以此类推。每个位置有一个权值，如果原串和新串的位置上的字符相同，就获得这个位置上的权值。求满足条件的最大的权值和。</p><h1 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h1><p><s>显然我们要尽可能地保证原字符串中尽可能多的字符在原位上，那么如果两个对应位置相同，我们可以视作将权值小的提到前面，然后优先考虑交换它们的位置和顺序，于是可以用dp等方法求出。</s></p><p>上面的是我最开始的思路，但是状态的设计和转移都比较难。我们可以换一种思想考虑，我们先把所有的字符全部拿出来，然后再一个个地放回去。那么我们考虑放回去的时候的约束有哪些：</p><p>1.放回去的时候每个字符的总个数要和原串中每个字符的总个数相同。</p><p>2.放回去之后前后两个对应的位置上不能出现重复的字符。(也就是说同种字符只能放在两个位置上的其中一个)</p><p>3.每一个位置都必须放一个字符。</p><p>从这里就看出了可以用网络流相关知识来求解了。那么现在来考虑如何保证权值最大。</p><p>同样我们可以只考虑哪些字符不在原来的位置上即可，所以我们可以求出不在原来位置上的权值和，用总权值-这些值就是答案。</p><h1 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h1><p>算法：最小费用最大流</p><p>首先建立源点S和汇点T</p><p>考虑约束条件1，我们先求出每个字符出现的次数cnt[i]，然后从S向每个字符(设点的类型为A)连流量为cnt[i]，费用为0的边，这样就保证了每个字符只能选最多cnt[i]次。</p><p>考虑约束条件2，由于同样的字符在每两个对应位置上只能放一个，那我们每个字符最多只能放n/2次，那么我们每个字符的点再新建n/2个点(设点的类型为B)，第i个点分别对应位置i和位置n-i+1，那么我们从每个A类型的点向对应的B类型的点连流量为1，费用为0的点，就限制了对于每个字符，对应的两个位置只能选一个来放。</p><p>考虑约束条件3，我们对每一个位置建一个点(设点的类型为C)，那么我们对每一个位置都建一条到汇点T流量为1，费用为0的点，就保证了每一个位置最多有一个字符。然后我们从B类型的点向C类型的点连边，这里是关键的一步，由上一个约束条件的考虑得出第i个点分别向i和n-i+1连流量为1的边即可。考虑费用：如果B类型的点的字符和连的位置对应的原串的字符相等，则费用为0，否则费用为对应的权值。</p><p>显然，在题意给定一定合法的情况下，这个网络一定满流。那我们就得出了修改所需要的代价，最后答案就是所有权值和-最小费用。</p><p>可能语言组织有些混乱，<s>毕竟很久没有上常规课了</s>，如有疏漏和错误之处请提出和见谅。<s>估计提出也没用了，还有两天就省选了，马上就退役了233333</s></p><p>谨以此题解纪念即将结束的美好的OI生涯。</p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < queue ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x7f7f7f7f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">int</span> to,next,cost,flow;</span><br><span class="line">} edge[maxn<<<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> head[maxn],dist[<span class="number">10005</span>],k=<span class="number">1</span>,tot_cost=<span class="number">0</span>,ans=<span class="number">0</span>,s,t;</span><br><span class="line"><span class="keyword">bool</span> visit[<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">edge[++k].to=v;edge[k].next=head[u];edge[k].flow=w;edge[k].cost=c;head[u]=k;</span><br><span class="line">swap(u,v);</span><br><span class="line">edge[++k].to=v;edge[k].next=head[u];edge[k].flow=<span class="number">0</span>;edge[k].cost=-c;head[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">memset</span>(dist,inf,<span class="keyword">sizeof</span>(dist));</span><br><span class="line"><span class="built_in">memset</span>(visit,<span class="literal">false</span>,<span class="keyword">sizeof</span>(visit));</span><br><span class="line">dist[t]=<span class="number">0</span>;visit[t]=<span class="literal">true</span>;<span class="built_in">deque</span><<span class="keyword">int</span>> q;q.push_back(t);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x=q.front();q.pop_front();visit[x]=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(dist[edge[i].to]>dist[x]-edge[i].cost&&edge[i^<span class="number">1</span>].flow)</span><br><span class="line">{</span><br><span class="line">dist[edge[i].to]=dist[x]-edge[i].cost;</span><br><span class="line"><span class="keyword">if</span>(!visit[edge[i].to])</span><br><span class="line">{</span><br><span class="line">visit[edge[i].to]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(!q.empty()&&dist[q.front()]>dist[edge[i].to]) q.push_front(edge[i].to);</span><br><span class="line"><span class="keyword">else</span> q.push_back(edge[i].to);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> dist[s]!=inf;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">visit[x]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(x==t||!f) <span class="keyword">return</span> f;</span><br><span class="line"><span class="keyword">int</span> flow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(visit[edge[i].to]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(dist[edge[i].to]!=dist[x]-edge[i].cost||!edge[i].flow) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> temp=dfs(edge[i].to,min(f-flow,edge[i].flow));</span><br><span class="line">edge[i].flow-=temp;</span><br><span class="line">edge[i^<span class="number">1</span>].flow+=temp;</span><br><span class="line">flow+=temp;</span><br><span class="line">tot_cost+=temp*edge[i].cost;</span><br><span class="line"><span class="keyword">if</span>(f==flow) <span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> flow;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zkw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">while</span>(spfa())</span><br><span class="line">{</span><br><span class="line">visit[t]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span>(visit[t])</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(visit,<span class="literal">false</span>,<span class="keyword">sizeof</span>(visit));</span><br><span class="line">dfs(s,inf);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> cnt[maxn],n,b[maxn],alp[maxn];</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lemon</span></span><br><span class="line">freopen(<span class="string">"844f.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);s=<span class="number">0</span>;t=<span class="number">4000</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) alp[i]=str[i]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&b[i]),ans+=b[i];</span><br><span class="line"><span class="comment">//s:0</span></span><br><span class="line"><span class="comment">//alp:1-26</span></span><br><span class="line"><span class="comment">//alp_split:100-2700(100*alp+num(n/2))</span></span><br><span class="line"><span class="comment">//point:3000-3100</span></span><br><span class="line"><span class="comment">//t:4000</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) cnt[alp[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">26</span>;i++)</span><br><span class="line">{</span><br><span class="line">add(s,i,cnt[i],<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=(n>><span class="number">1</span>);j++)</span><br><span class="line">{</span><br><span class="line">add(i,<span class="number">100</span>*i+j,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(alp[j]==i) add(<span class="number">100</span>*i+j,<span class="number">3000</span>+j,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> add(<span class="number">100</span>*i+j,<span class="number">3000</span>+j,<span class="number">1</span>,b[j]);</span><br><span class="line"><span class="keyword">if</span>(alp[n-j+<span class="number">1</span>]==i) add(<span class="number">100</span>*i+j,<span class="number">3000</span>+n-j+<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> add(<span class="number">100</span>*i+j,<span class="number">3000</span>+n-j+<span class="number">1</span>,<span class="number">1</span>,b[n-j+<span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) add(<span class="number">3000</span>+i,t,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">zkw();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,ans-tot_cost);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div>        <div id="aplayer-tUtnNUiC" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-tUtnNUiC"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
    
      <category term="网络流" scheme="http://lemonaaaaa.com/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="费用流" scheme="http://lemonaaaaa.com/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
      <category term="图论" scheme="http://lemonaaaaa.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>Luogu P2146 [NOI2015]软件包管理器</title>
    <link href="http://lemonaaaaa.com/2020/02/luogu-2146/"/>
    <id>http://lemonaaaaa.com/2020/02/luogu-2146/</id>
    <published>2020-02-11T10:06:19.000Z</published>
    <updated>2020-02-12T14:12:58.763Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><blockquote><p><a href="https://www.luogu.com.cn/problem/P2146" target="_blank" rel="noopener">题目链接</a></p></blockquote><h1 id="题目背景"><a class="markdownIt-Anchor" href="#题目背景"></a> 题目背景</h1><p><img alt="luogu2146_bg" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/luogu2146_bg.jpg" class="lazyload"></p><h1 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h1><p><img alt="luogu2146_dsp" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/luogu2146_dsp.jpg" class="lazyload"></p><h1 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h1><p>一道树链剖分的模板题</p><ul><li><p>每次安装软件，就把根节点到x软件路径上的值全部变为1</p></li><li><p>同理，每次卸载软件，就把x以及它的子树的值变为0</p></li></ul><p>故我们可以用区间和的思想，每次操作之前记录一下tree[root].sum的值，更新之后再查询一遍tree[root].sum的值，两者之差的绝对值则为答案。</p><p>我的代码里把root的值设为1，每个点的编号都加上了1（个人习惯）</p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k=<span class="number">0</span>,x,head[maxn],q,deep[maxn],father[maxn],size[maxn];</span><br><span class="line"><span class="keyword">int</span> tid[maxn],top[maxn],son[maxn],tidnum=<span class="number">0</span>,pos[maxn];<span class="keyword">char</span> s[<span class="number">15</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> to,next;</span><br><span class="line">} edge[maxn<<<span class="number">1</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> left,right,flag,sum;</span><br><span class="line">} tree[maxn<<<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge[++k].to=v;</span><br><span class="line">    edge[k].next=head[u];</span><br><span class="line">    head[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch<<span class="number">48</span>||ch><span class="number">57</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch>=<span class="number">48</span>&&ch<=<span class="number">57</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa,<span class="keyword">int</span> depth)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    size[x]=<span class="number">1</span>;father[x]=fa;deep[x]=depth;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(edge[i].to==fa) <span class="keyword">continue</span>;</span><br><span class="line">        dfs1(edge[i].to,x,depth+<span class="number">1</span>);</span><br><span class="line">        size[x]+=size[edge[i].to];</span><br><span class="line">        <span class="keyword">if</span>(!son[x]||size[edge[i].to]>size[son[x]]) son[x]=edge[i].to;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> tp)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    tid[x]=++tidnum;pos[tid[x]]=x;top[x]=tp;</span><br><span class="line">    <span class="keyword">if</span>(!son[x]) <span class="keyword">return</span>;dfs2(son[x],tp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(edge[i].to!=son[x]&&edge[i].to!=father[x])</span><br><span class="line">            dfs2(edge[i].to,edge[i].to);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    tree[id].left=l;tree[id].right=r;</span><br><span class="line">    tree[id].sum=<span class="number">0</span>;tree[id].flag=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)>><span class="number">1</span>;</span><br><span class="line">    build(id<<<span class="number">1</span>,l,mid);build(id<<<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">downdata</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    tree[id<<<span class="number">1</span>].sum=(tree[id<<<span class="number">1</span>].right-tree[id<<<span class="number">1</span>].left+<span class="number">1</span>)*tree[id].flag;</span><br><span class="line">    tree[id<<<span class="number">1</span>|<span class="number">1</span>].sum=(tree[id<<<span class="number">1</span>|<span class="number">1</span>].right-tree[id<<<span class="number">1</span>|<span class="number">1</span>].left+<span class="number">1</span>)*tree[id].flag;</span><br><span class="line">    tree[id<<<span class="number">1</span>].flag=tree[id<<<span class="number">1</span>|<span class="number">1</span>].flag=tree[id].flag;</span><br><span class="line">    tree[id].flag=<span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(tree[id].right<l||tree[id].left>r) <span class="keyword">return</span> <span class="number">0</span>;</l||tree[id].left></span><br><span class="line">    <span class="keyword">if</span>(tree[id].right<=r&&tree[id].left>=l) <span class="keyword">return</span> tree[id].sum;</span><br><span class="line">    <span class="keyword">if</span>(tree[id].flag!=<span class="number">-1</span>) downdata(id);</span><br><span class="line">    <span class="keyword">return</span> get(id<<<span class="number">1</span>,l,r)+get(id<<<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(tree[id].right<l||tree[id].left>r) <span class="keyword">return</span>;</l||tree[id].left></span><br><span class="line">    <span class="keyword">if</span>(tree[id].right<=r&&tree[id].left>=l)</span><br><span class="line">    {</span><br><span class="line">        tree[id].sum=(tree[id].right-tree[id].left+<span class="number">1</span>)*val;</span><br><span class="line">        tree[id].flag=val;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(tree[id].flag!=<span class="number">-1</span>) downdata(id);</span><br><span class="line">    update(id<<<span class="number">1</span>,l,r,val);update(id<<<span class="number">1</span>|<span class="number">1</span>,l,r,val);</span><br><span class="line">    tree[id].sum=tree[id<<<span class="number">1</span>].sum+tree[id<<<span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(top[u]!=top[v])</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(deep[top[u]]<deep[top[v]]) <span class="built_in">std</deep[top[v]])></span>::swap(u,v);<br><span class="line">        update(<span class="number">1</span>,tid[top[u]],tid[u],val);</span><br><span class="line">        u=father[top[u]];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(deep[u]>deep[v]) <span class="built_in">std</span>::swap(u,v);</span><br><span class="line">    update(<span class="number">1</span>,tid[u],tid[v],val);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">    {</span><br><span class="line">        x=read();x++;</span><br><span class="line">        add(x,i);</span><br><span class="line">    }</span><br><span class="line">    dfs1(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);dfs2(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    q=read();build(<span class="number">1</span>,<span class="number">1</span>,tidnum);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=q;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        x=read();x++;</span><br><span class="line">        <span class="keyword">int</span> t1=tree[<span class="number">1</span>].sum;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'i'</span>)</span><br><span class="line">        {</span><br><span class="line">            change(<span class="number">1</span>,x,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> t2=tree[<span class="number">1</span>].sum;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="built_in">abs</span>(t2-t1));</span><br><span class="line">            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'u'</span>)</span><br><span class="line">        {</span><br><span class="line">            update(<span class="number">1</span>,tid[x],tid[x]+size[x]<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> t2=tree[<span class="number">1</span>].sum;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="built_in">abs</span>(t1-t2));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div>        <div id="aplayer-dqwmVthY" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-dqwmVthY"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Luogu" scheme="http://lemonaaaaa.com/categories/Code-life/Luogu/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="数据结构" scheme="http://lemonaaaaa.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="树链剖分" scheme="http://lemonaaaaa.com/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
      <category term="线段树" scheme="http://lemonaaaaa.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>luogu P2349 金字塔</title>
    <link href="http://lemonaaaaa.com/2020/02/luogu-2349/"/>
    <id>http://lemonaaaaa.com/2020/02/luogu-2349/</id>
    <published>2020-02-11T10:06:08.000Z</published>
    <updated>2020-02-12T14:12:50.856Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><blockquote><p><a href="https://www.luogu.com.cn/problem/P2349" target="_blank" rel="noopener">题目链接</a></p></blockquote><h1 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h1><p>有一盗墓者潜入一金字塔盗宝。当她（难道是Lara Croft ?）打开一个宝箱的时候，突然冒出一阵烟（潘多拉的盒子？），她迅速意识到形势不妙，三十六计走为上计……由于她盗得了金字塔的地图，所以她希望能找出最佳逃跑路线。地图上标有N个室，她现在就在1室，金字塔的出口在N室。她知道一个秘密：那阵烟会让她在直接连接某两个室之间的通道内的行走速度减半。她希望找出一条逃跑路线，使得在最坏的情况下所用的时间最少。</p><h1 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h1><p><strong>这道题可以用A*来做</strong></p><p>估价函数由两个值组成：该节点到终点的最短距离和当前已经经过路径的最大值（在代码里估价函数为g，实际距离为step，当前节点位置为x，已经经过路径的边权的最大值为maxx）</p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < queue></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> to,next,dis;</span><br><span class="line">} edge[maxn<<<span class="number">1</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> g,step,maxx,x;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> < (node xx) <span class="keyword">const</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> xx.g<g;< span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>,head[maxn],n,m,a,b,c,dist[maxn];</span><br><span class="line"><span class="keyword">bool</span> visit[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge[++k].to=v;</span><br><span class="line">    edge[k].next=head[u];</span><br><span class="line">    edge[k].dis=w;</span><br><span class="line">    head[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x7f7f7f7f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    <span class="built_in">queue</span><<span class="keyword">int</span>> q;visit[n]=<span class="literal">true</span>;q.push(n);dist[n]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> x=q.front();q.pop();visit[x]=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(dist[edge[i].to]>dist[x]+edge[i].dis)</span><br><span class="line">            {</span><br><span class="line">                dist[edge[i].to]=dist[x]+edge[i].dis;</span><br><span class="line">                <span class="keyword">if</span>(!visit[edge[i].to])</span><br><span class="line">                {</span><br><span class="line">                    visit[edge[i].to]=<span class="literal">true</span>;</span><br><span class="line">                    q.push(edge[i].to);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Astar</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    priority_queue<node> q;node temp;temp.step=<span class="number">0</span>;</node></span><br><span class="line">    temp.g=dist[<span class="number">1</span>];temp.maxx=<span class="number">0</span>;temp.x=<span class="number">1</span>;q.push(temp);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    {</span><br><span class="line">        node now=q.top();q.pop();</span><br><span class="line">        <span class="keyword">if</span>(now.x==n)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,now.step+now.maxx);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[now.x];i;i=edge[i].next)</span><br><span class="line">        {</span><br><span class="line">            temp.step=now.step+edge[i].dis;</span><br><span class="line">            temp.maxx=max(now.maxx,edge[i].dis);</span><br><span class="line">            temp.g=temp.step+temp.maxx+dist[edge[i].to];</span><br><span class="line">            temp.x=edge[i].to;q.push(temp);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=m;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&a,&b,&c);</span><br><span class="line">        add(a,b,c);add(b,a,c);</span><br><span class="line">    }</span><br><span class="line">    spfa();</span><br><span class="line">    Astar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></g;<></span></pre></td></tr></tbody></table></figure></div>        <div id="aplayer-QWfUkvkQ" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-QWfUkvkQ"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Luogu" scheme="http://lemonaaaaa.com/categories/Code-life/Luogu/"/>
    
    
      <category term="图论" scheme="http://lemonaaaaa.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="最短路" scheme="http://lemonaaaaa.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="A*" scheme="http://lemonaaaaa.com/tags/A/"/>
    
      <category term="优先队列" scheme="http://lemonaaaaa.com/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>luogu P2921 [USACO08DEC]在农场万圣节Trick or Treat on the Farm</title>
    <link href="http://lemonaaaaa.com/2020/02/luogu-2921/"/>
    <id>http://lemonaaaaa.com/2020/02/luogu-2921/</id>
    <published>2020-02-11T10:05:55.000Z</published>
    <updated>2020-02-12T14:12:43.604Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><blockquote><p><a href="https://www.luogu.com.cn/problem/P2921" target="_blank" rel="noopener">题目链接</a></p></blockquote><h1 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h1><p>每年，在威斯康星州，奶牛们都会穿上衣服，收集农夫约翰在N(1<=N<=100000)个牛棚隔间中留下的糖果，以此来庆祝美国秋天的万圣节。</p><p>由于牛棚不太大，FJ通过指定奶牛必须遵循的穿越路线来确保奶牛的乐趣。为了实现这个让奶牛在牛棚里来回穿梭的方案，FJ在第i号隔间上张贴了一个“下一个隔间”Next_i(1<=Next_i<=N)，告诉奶牛要去的下一个隔间；这样，为了收集它们的糖果，奶牛就会在牛棚里来回穿梭了。</p><p>FJ命令奶牛i应该从i号隔间开始收集糖果。如果一只奶牛回到某一个她已经去过的隔间，她就会停止收集糖果。</p><p>在被迫停止收集糖果之前，计算一下每头奶牛要前往的隔间数（包含起点）。</p><h1 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h1><p>此题也可以用tarjan缩点<br>由题意可得每个牛到了一个牛棚后下一个只能去后继牛棚</p><p>那么我们可以用tarjan先预处理出来，然后再用记忆化搜索统计答案</p><p><strong>一定要用记忆化搜索，否则会超时6个点</strong></p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < queue ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,x,k=<span class="number">0</span>,head[maxn],dfn[maxn],low[maxn],color_num=<span class="number">0</span>,dfs_num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> visit[maxn];<span class="keyword">int</span> ans[maxn];</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">stack</span>[maxn],top=<span class="number">0</span>,val[maxn],head_new[maxn],color[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> to,next;</span><br><span class="line">} edge[maxn<<<span class="number">1</span>],edge_new[maxn<<<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge[++k].to=v;</span><br><span class="line">    edge[k].next=head[u];</span><br><span class="line">    head[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    dfn[x]=low[x]=++dfs_num;</span><br><span class="line">    visit[x]=<span class="literal">true</span>;<span class="built_in">stack</span>[++top]=x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(!dfn[edge[i].to])</span><br><span class="line">        {</span><br><span class="line">            tarjan(edge[i].to);</span><br><span class="line">            low[x]=min(low[x],low[edge[i].to]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(visit[edge[i].to]) low[x]=min(low[x],dfn[edge[i].to]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(low[x]==dfn[x])</span><br><span class="line">    {</span><br><span class="line">        visit[x]=<span class="literal">false</span>;color_num++;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">stack</span>[top+<span class="number">1</span>]!=x)</span><br><span class="line">        {</span><br><span class="line">            val[color_num]++;</span><br><span class="line">            visit[<span class="built_in">stack</span>[top]]=<span class="literal">false</span>;</span><br><span class="line">            color[<span class="built_in">stack</span>[top]]=color_num;</span><br><span class="line">            top--;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_new</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge_new[++k].to=v;</span><br><span class="line">    edge_new[k].next=head_new[u];</span><br><span class="line">    head_new[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(ans[x]) <span class="keyword">return</span>;</span><br><span class="line">    ans[x]+=val[x];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head_new[x];i;i=edge_new[i].next)</span><br><span class="line">    {</span><br><span class="line">        dfs(edge_new[i].to);</span><br><span class="line">        ans[x]+=ans[edge_new[i].to];</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&x);</span><br><span class="line">        add(i,x);</span><br><span class="line">    }</span><br><span class="line">    k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="keyword">if</span>(!dfn[i]) tarjan(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=head[i];j;j=edge[j].next)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(color[i]!=color[edge[j].to])</span><br><span class="line">            {</span><br><span class="line">                add_new(color[i],color[edge[j].to]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) dfs(color[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[color[i]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div>        <div id="aplayer-vLkMLays" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-vLkMLays"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Luogu" scheme="http://lemonaaaaa.com/categories/Code-life/Luogu/"/>
    
    
      <category term="图论" scheme="http://lemonaaaaa.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="搜索" scheme="http://lemonaaaaa.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="缩点" scheme="http://lemonaaaaa.com/tags/%E7%BC%A9%E7%82%B9/"/>
    
      <category term="tarjan" scheme="http://lemonaaaaa.com/tags/tarjan/"/>
    
  </entry>
  
  <entry>
    <title>Luogu P3467 [POI2008]PLA-Postering</title>
    <link href="http://lemonaaaaa.com/2020/02/luogu-3467/"/>
    <id>http://lemonaaaaa.com/2020/02/luogu-3467/</id>
    <published>2020-02-11T10:05:41.000Z</published>
    <updated>2020-02-12T14:12:35.660Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><blockquote><p><a href="https://www.luogu.com.cn/problem/P3467" target="_blank" rel="noopener">题目链接</a></p></blockquote><h1 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h1><p>Byteburg市东边的建筑都是以旧结构形式建造的:建筑互相紧挨着,之间没有空间.它们共同形成了一条长长的,从东向西延伸的建筑物链(建筑物的高度不一).Byteburg市的市长Byteasar,决定将这个建筑物链的一侧用海报覆盖住.并且想用最少的海报数量,海报是矩形的.海报与海报之间不能重叠,但是可以相互挨着(即它们具有公共边),每一个海报都必须贴近墙并且建筑物链的整个一侧必须被覆盖(意思是:海报需要将一侧全部覆盖,并且不能超出建筑物链)</p><h1 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h1><p><strong>这道题是单调栈的入门经典题</strong></p><p>我们发现：答案与宽度是没有关系的，于是我们只需要按高度维护一个单调递增的栈。</p><p>如果发现当前高度已经在栈中，就不需要另外一张海报了。</p><p>于是用一个ans变量记录一下，最后用总海报数减去不需要另外的海报数便是答案。</p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">250005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a[maxn],<span class="built_in">stack</span>[maxn],top=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d%lld"</span>,&x,&a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">while</span>(top&&<span class="built_in">stack</span>[top]>a[i]) top--;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">stack</span>[top]==a[i]) ans++;</span><br><span class="line">        <span class="built_in">stack</span>[++top]=a[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n-ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div>        <div id="aplayer-YUpafnTu" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-YUpafnTu"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Luogu" scheme="http://lemonaaaaa.com/categories/Code-life/Luogu/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="单调栈" scheme="http://lemonaaaaa.com/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>武汉大学新生寒假集训测试Day5 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/whuwvttf-day5/"/>
    <id>http://lemonaaaaa.com/2020/02/whuwvttf-day5/</id>
    <published>2020-02-11T02:03:36.000Z</published>
    <updated>2020-02-12T14:11:44.108Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>哈哈哈封面图是题目描述里面的。本场比赛是HDU女生专场的clone。</p><h1 id="a"><a class="markdownIt-Anchor" href="#a"></a> A</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5702" target="_blank" rel="noopener">HDU - 5702</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>一次ACM中打气球的志愿者们比较蠢，某一道题提前打好的气球越多，意味着题目越水。<br>现在给出每道题打好的气球数，问你按照什么顺序做题，能够得以从易到难的顺序解决所有问题。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>直接开个结构体排序就好了。结果我一直PE，因为题目中说了不能有多余的空格，但是删掉所有多余的空格了还是不行，到最后都没有过。最后发现，必须要有多余的空行（什么鬼破题）</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">} a[maxn];</span><br><span class="line"><span class="keyword">int</span> T,n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span> </span>{<span class="keyword">return</span> a.x>b.x;}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%s%d"</span>,a[i].str,&a[i].x);</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(i==n) <span class="built_in">printf</span>(<span class="string">"%s"</span>,a[i].str);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%s "</span>,a[i].str);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="b"><a class="markdownIt-Anchor" href="#b"></a> B</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5704" target="_blank" rel="noopener">HDU - 5704</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>n（2~100）个人参加一个游戏，<br>每个人选择1~100范围的数。<br>然后得到所有数的平均数，再*=2/3，设得到的数为m。<br>如果一个人选的数，比m小，且相距m最为接近，那么其便在所有选数相同的人中等概率中奖。</p><p>现在，我们也参加比赛，其他n-1个人所选择的数也已经确定了，并且我们知道。<br>问你，选什么数拥有最高中奖率，并输出。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>直接枚举每一种情况，取最大值就好。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,a[maxn],cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>,maxx=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<n;i++)< span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">sum+=a[i];</span><br><span class="line">cnt[a[i]]++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<=<span class="number">100</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">double</span> k=(<span class="keyword">double</span>)sum+(<span class="keyword">double</span>)i;</span><br><span class="line">k/=(<span class="keyword">double</span>)n;</span><br><span class="line"><span class="keyword">double</span> m=k*<span class="number">2.0</span>/<span class="number">3.0</span>;</span><br><span class="line"><span class="keyword">if</span>(i<=<span class="built_in">floor</span>(m)) maxx=<span class="built_in">floor</span>(m);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %.2lf\n"</span>,maxx,<span class="number">1.0</span>/(cnt[maxx]+<span class="number">1.0</span>));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></n;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5706" target="_blank" rel="noopener">HDU - 5706</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>给一个n*m的由小写字母组成的字符地图，从某个点开始，每次沿着相邻的点走，如果从起点开始计数，连着走4步并且构成“girl”，那么girl数++；如果连着走3步并且构成“cat”，那么cat数++。请问图上有多少个girl和多少只cat。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>把每一个点作为起点开始搜索，直接dfs或bfs即可。这道题又吃了看错题意的亏……</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2005</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">5</span>]={<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>};</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">5</span>]={<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> n,m,T;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> cat,girl;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">4</span>)</span><br><span class="line">{</span><br><span class="line">girl++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">4</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> ddx=dx[i]+x,ddy=dy[i]+y;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">1</span>&&str[ddx][ddy]==<span class="string">'i'</span>) dfs1(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">2</span>&&str[ddx][ddy]==<span class="string">'r'</span>) dfs1(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">3</span>&&str[ddx][ddy]==<span class="string">'l'</span>) dfs1(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">3</span>)</span><br><span class="line">{</span><br><span class="line">cat++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">4</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> ddx=dx[i]+x,ddy=dy[i]+y;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">1</span>&&str[ddx][ddy]==<span class="string">'a'</span>) dfs2(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">2</span>&&str[ddx][ddy]==<span class="string">'t'</span>) dfs2(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&m);cat=girl=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(str,<span class="number">0</span>,<span class="keyword">sizeof</span>(str));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str[i]+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=m;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(str[i][j]==<span class="string">'g'</span>) dfs1(i,j,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(str[i][j]==<span class="string">'c'</span>) dfs2(i,j,<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,girl,cat);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d"><a class="markdownIt-Anchor" href="#d"></a> D</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5710" target="_blank" rel="noopener">HDU - 5710</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>令s(n)为n的各位数之和，如n=12345时，s(n)=1+2+3+4+5=15。现在给定a，b，求找出最小的正整数n满足</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>×</mo><mi>s</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo>=</mo><mi>b</mi><mo>×</mo><mi>s</mi><mo stretchy="false">(</mo><mn>2</mn><mo>⋅</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>  </mtext><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>≤</mo><mn>100</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a\times s(n)==b\times s(2\cdot n)\;(1\leq a,b\leq100) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>转自：<a href="https://blog.csdn.net/qq_40875849/article/details/83053075" target="_blank" rel="noopener">qq_40875849</a></p><p><img alt="HDU5710" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/HDU5710.png" class="lazyload"></p><h1 id="e"><a class="markdownIt-Anchor" href="#e"></a> E</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2670" target="_blank" rel="noopener">HDU - 2670</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>有n个男生追一个女生，每个男生有一个相应的爱慕值Vx(i)，给定一个天数m，每天这个女生只能找一个女生，并且得到这个男生的爱慕值。每过一天，每个男生的爱慕值就会减少相应的 Vy(i)；问女生如何选择，m天之后，才能得到最大的爱慕值。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>好像是经典的背包问题，感觉很早很早之前做过。<br>一个男生要么选要么不选，可以看作只有0和1两种情况，所以直接做01背包即可。<br>但我们先按下降速度从大到小排序，因为如果这样的话保证了先选一定比后选优，也就是说如果之前都没选，那么后面也不可能选，保证了dp的无后效性原则。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2005</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn],n,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> {</span><span class="keyword">int</span> love,cost;} stu[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span> </span>{<span class="keyword">return</span> a.cost>b.cost;}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&stu[i].love);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&stu[i].cost);</span><br><span class="line">sort(stu+<span class="number">1</span>,stu+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=k;j;j--)</span><br><span class="line">f[j]=max(f[j],f[j<span class="number">-1</span>]+stu[i].love-stu[i].cost*(j<span class="number">-1</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[k]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f"><a class="markdownIt-Anchor" href="#f"></a> F</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2674" target="_blank" rel="noopener">HDU - 2674</a></p></blockquote><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>a</mi><mi>l</mi><mi>c</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>e</mi><mtext>  </mtext><mi>N</mi><mo stretchy="false">!</mo><mtext>  </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext>  </mtext><mn>2009</mn><mtext>  </mtext><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>H</mi><mi>i</mi><mi>n</mi><mi>t</mi><mtext>  </mtext><mo>:</mo><mtext>  </mtext><mn>0</mn><mo stretchy="false">!</mo><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mn>1</mn><mo separator="true">,</mo><mtext>  </mtext><mi>N</mi><mo stretchy="false">!</mo><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mi>N</mi><mo>×</mo><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow><annotation encoding="application/x-tex">Calculate\;N!\;mod\;2009\;(0\leq N\leq10^9)\\Hint\;:\;0!\;=\;1,\;N!\;=\;N\times(N-1)! </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span></span></p><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><p>显然2009的倍数mod上2009等于0，那么当计算到2009的阶乘时，答案就已经为0了，而0乘任何数都等于0，所以当N > 2009时，直接输出0就好了。</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> fac[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">fac[<span class="number">0</span>]=fac[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">2</span>;i<maxn;i++)< span><br><span class="line">{</span><br><span class="line">fac[i]=i*fac[i<span class="number">-1</span>];</span><br><span class="line">fac[i]%=<span class="number">2009</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(n>=<span class="number">2009</span>) <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%llu\n"</span>,fac[n]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></maxn;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="g"><a class="markdownIt-Anchor" href="#g"></a> G</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2672" target="_blank" rel="noopener">HDU - 2672</a></p></blockquote><h2 id="题目大意-7"><a class="markdownIt-Anchor" href="#题目大意-7"></a> 题目大意</h2><p>GDJIJ,EL SSJT UT YWOSQNIVZMI. -> HELLO,MY NAME IS LINDAINVERS.<br>CN WLP JRVMFGQ BVR,IJCFI? -> DO YOU REQUIRE AID,HUMAN?<br>NMAB VYNNF, FI’E VC HP IXJ ZLQZI. -> ONCE AGAIN, IT’S UP TO THE ELVES.<br>SGC CGGJX GC BMHVQ BGU BCIHNYNBX GNPLV! -> THE FLOWS OF MAGIC ARE WHIMSICAL TODAY!</p><p>输入一个字符串，根据以上规律解码后输出。</p><h2 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h2><p>什么条件都没给，肯定和字符串字母变换直接有关。先写了一个打表程序，看了一下解码串与原串的ascii码差，发现是斐波拉契数列。于是，直接模拟就好了，注意空格和非大写字母字符不转码。</p><h2 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< string ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< iostream ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line">a[<span class="number">1</span>]=<span class="number">1</span>;a[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i<maxn;i++) a[i]="a[i<span" class="number">-1</maxn;i++)></span>]+a[i<span class="number">-2</span>],a[i]%=<span class="number">26</span>;<br><span class="line"><span class="keyword">while</span>(getline(<span class="built_in">cin</span>,s))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> len=s.length(),cnt=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<len;i++)< span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(s[i]<<span class="string">'A'</span>||s[i]><span class="string">'Z'</span>) <span class="built_in">cout</span><<s[i];< span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">s[i]=<span class="string">'A'</span>+(s[i]+a[cnt]-<span class="string">'A'</span>)%<span class="number">26</span>;</span><br><span class="line"><span class="built_in">cout</span><<s[i];< span><br><span class="line">cnt++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">s.clear();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></s[i];<></span></s[i];<></span></len;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="h"><a class="markdownIt-Anchor" href="#h"></a> H</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5707" target="_blank" rel="noopener">HDU - 5707</a></p></blockquote><h2 id="题目大意-8"><a class="markdownIt-Anchor" href="#题目大意-8"></a> 题目大意</h2><p>给定a，b，c三个串，问c能否按序分成a和b串，不要求连续。</p><h2 id="思路-8"><a class="markdownIt-Anchor" href="#思路-8"></a> 思路</h2><p>首先想到扫两遍，但这样会有问题，因为比如aaa，daf，adafaa，就会发现第一遍扫的时候，占用了前面的一个a，导致了第二遍匹配失败。<br>既然这样不行，要保证无后效性，那显然就是dp了，用f[i][j]表示a串的i个位置和b串的j个位置能否匹配到c串的i+j个位置。那么转移也就是从i-1或者j-1转移而来了。</p><h2 id="代码-7"><a class="markdownIt-Anchor" href="#代码-7"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2005</span>;</span><br><span class="line"><span class="keyword">char</span> s1[maxn],s2[maxn],s3[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt[maxn],cnt2[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn],f[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>,s2+<span class="number">1</span>,s3+<span class="number">1</span>,s1+<span class="number">1</span>))</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line"><span class="built_in">memset</span>(cnt2,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt2));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">true</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="literal">false</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">int</span> l1=<span class="built_in">strlen</span>(s1+<span class="number">1</span>),l2=<span class="built_in">strlen</span>(s2+<span class="number">1</span>),l3=<span class="built_in">strlen</span>(s3+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=l1;i++) cnt[s1[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=l2;i++) cnt2[s2[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=l3;i++) cnt2[s3[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<maxn;i++)< span><br><span class="line"><span class="keyword">if</span>(cnt[i]!=cnt2[i]) flag=<span class="literal">false</span>;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<=l2;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j<=l3;j++)</span><br><span class="line">{</span><br><span class="line"><span class="comment">//i:l2 j:l3</span></span><br><span class="line"><span class="keyword">if</span>(i&&f[i<span class="number">-1</span>][j]&&s2[i]==s1[i+j]) f[i][j]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(j&&f[i][j<span class="number">-1</span>]&&s3[j]==s1[i+j]) f[i][j]=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(l2+l3!=l1) flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(!f[l2][l3]) flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></maxn;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>难度不大，但是那个PE真的把我坑惨了……以后要多试试，因为你根本不知道出题人想让你干什么。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day5.jpg" class="lazyload"></p>        <div id="aplayer-roaTpOfA" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-roaTpOfA"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="HDU" scheme="http://lemonaaaaa.com/categories/Code-life/HDU/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="思维" scheme="http://lemonaaaaa.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="数论" scheme="http://lemonaaaaa.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="字符串" scheme="http://lemonaaaaa.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="搜索" scheme="http://lemonaaaaa.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="动态规划" scheme="http://lemonaaaaa.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="枚举" scheme="http://lemonaaaaa.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="背包" scheme="http://lemonaaaaa.com/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="规律" scheme="http://lemonaaaaa.com/tags/%E8%A7%84%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>武汉大学新生寒假集训测试Day4 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/whuwvttf-day4/"/>
    <id>http://lemonaaaaa.com/2020/02/whuwvttf-day4/</id>
    <published>2020-02-09T15:54:08.000Z</published>
    <updated>2020-02-12T14:11:56.547Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><h1 id="a"><a class="markdownIt-Anchor" href="#a"></a> A</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1065/D" target="_blank" rel="noopener">Educational Codeforces Round 52 (Rated for Div. 2)</a></p></blockquote><p>还没做，待补。</p><h1 id="b"><a class="markdownIt-Anchor" href="#b"></a> B</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1059/D" target="_blank" rel="noopener">Codeforces Round #514 (Div. 2)</a></p></blockquote><p>待补……</p><h1 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1065/C" target="_blank" rel="noopener">Educational Codeforces Round 52 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p><img alt="CF1065C" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF1065C.jpg" class="lazyload"><br>给出一个数组，如上图，a[x] = y表示在第x列中有y个1x1的正方形，我们每次可以沿着平行于x轴切一刀，舍弃上面部分，且舍弃部分的面积要小于k，求最少多少步可以切到所有列正方形数相同。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>简单的模拟，我们按照题意从上往下切就好了。用前缀和预处理出每一行的正方形数，因为只能平行于x轴切，所以这一行要么整体能切掉，要么就不能切掉。而且相同的正方形数一定是n。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,a[maxn],sum[maxn],maxx=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">maxx=max(maxx,a[i]);</span><br><span class="line">sum[a[i]]++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=maxx;i;i--) sum[i]+=sum[i+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=maxx;i;i--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(sum[i]==n)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(res<sum[i]) ans++,res="k-sum[i];</span"><br><span class="line"><span class="keyword">else</span> res-=sum[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></sum[i])></span></pre></td></tr></tbody></table></figure></div><h1 id="d"><a class="markdownIt-Anchor" href="#d"></a> D</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1059/C" target="_blank" rel="noopener">Codeforces Round #514 (Div. 2)</a></p></blockquote><p>待补……</p><h1 id="e"><a class="markdownIt-Anchor" href="#e"></a> E</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1065/B" target="_blank" rel="noopener">Educational Codeforces Round 52 (Rated for Div. 2))</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给出n个点和m条边，构成若干个图，每个图不能有重边和自环，求最多和最少的孤立顶点。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><ul><li>最少：既然要求孤立顶点最少，那么就要求每加入一个点，要用去最多的边。其实就是保证尽可能构成完全图，所以找到k*(k-1)/2>=m的最小k，剩下的点都是孤立顶点了。</li><li>最多：一条边可以连2个点，2条边最多只能连3个点，……，显然每条边都连2个没有与其他边相连的点消耗的边最多。</li></ul><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&n,&m);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> minn=max(n-m*<span class="number">2</span>,<span class="number">0l</span>l),maxx;</span><br><span class="line"><span class="keyword">if</span>(!m) maxx=n;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> now=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(m><span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">m-=now;</span><br><span class="line">now++;</span><br><span class="line">}</span><br><span class="line">maxx=n-now;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,minn,maxx);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f"><a class="markdownIt-Anchor" href="#f"></a> F</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1059/B" target="_blank" rel="noopener">Codeforces Round #514 (Div. 2)</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>模拟，用形如下图的印章，再给出一个由“.”和"x"组成的形状，判断能否用下图的印章印出给定的形状（可以印无数次）（“ . ”代表“空”）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mi>x</mi><mi>x</mi><mspace linebreak="newline"></mspace><mi>x</mi><mi mathvariant="normal">.</mi><mi>x</mi><mspace linebreak="newline"></mspace><mi>x</mi><mi>x</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">x x x \\ x . x \\ x x x </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord">.</span><span class="mord mathdefault">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span></span></span></p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>另开一张图，对于原图的一个点（无论是".“还是"x”，只要它周围八个点都是"x"，那就在新图上以这个点的坐标为中心盖一个章，最后判断新图和原图是否相同，若相同，那么就可以；反之则不行。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2005</span>;</span><br><span class="line"><span class="keyword">char</span> a[maxn][maxn],<span class="built_in">map</span>[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">9</span>]={<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>};</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">9</span>]={<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>};</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">8</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(a[x+dx[i]][y+dy[i]]!=<span class="string">'#'</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">8</span>;i++) <span class="built_in">map</span>[x+dx[i]][y+dy[i]]=<span class="string">'#'</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,a[i]+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=m;j++) <span class="built_in">map</span>[i][j]=<span class="string">'.'</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<n;i++)< span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j<m;j++)< span><br><span class="line"><span class="keyword">if</span>(judge(i,j)) work(i,j);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=m;j++)</span><br><span class="line"><span class="keyword">if</span>(a[i][j]!=<span class="built_in">map</span>[i][j]) <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>),<span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></m;j++)<></span></n;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="g"><a class="markdownIt-Anchor" href="#g"></a> G</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1059/A" target="_blank" rel="noopener">Codeforces Round #514 (Div. 2)</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>定义一天的长度为L,每次休息的时间为a,有n个客人，t_i​表示他在这一天到来的时间，l_i表示他到来以后持续占用的时间。保证</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>+</mo><msub><mi>l</mi><mi>i</mi></msub><mo>≤</mo><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">t_i+l_i\leq t_{i+1} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8234109999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>问最多能休息的次数。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>程序设计入门题。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,l,a,b[maxn],c[maxn],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&n,&l,&a);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&b[i],&c[i]);</span><br><span class="line">b[n+<span class="number">1</span>]=l;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t=b[i+<span class="number">1</span>]-b[i]-c[i];</span><br><span class="line">ans+=t/a;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="h"><a class="markdownIt-Anchor" href="#h"></a> H</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1065/A" target="_blank" rel="noopener">Educational Codeforces Round 52 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>在一个超市，顾客每购买a个巧克力棒，就会送b个巧克力棒。现在Vasya有s卢布，每个巧克力棒的价格是c卢布。求Vasya最多可以得到多少个巧克力棒。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>程序设计入门题。</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s,a,b,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld"</span>,&s,&a,&b,&c);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=s/(a*c)*b;</span><br><span class="line">ans+=s/c;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>题目顺序和难度真的是一点关系都没有。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day4.jpg" class="lazyload"></p>        <div id="aplayer-ghuDffgy" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-ghuDffgy"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="思维" scheme="http://lemonaaaaa.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="搜索" scheme="http://lemonaaaaa.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="前缀和" scheme="http://lemonaaaaa.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>武汉大学新生寒假集训测试Day3 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/whuwvttf-day3/"/>
    <id>http://lemonaaaaa.com/2020/02/whuwvttf-day3/</id>
    <published>2020-02-08T08:45:48.000Z</published>
    <updated>2020-02-12T14:12:07.540Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><h1 id="a-personalized-cup"><a class="markdownIt-Anchor" href="#a-personalized-cup"></a> A - Personalized Cup</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1079/C" target="_blank" rel="noopener">Codeforces Round #522 (Div. 2, based on Technocup 2019 Elimination Round 3)</a></p></blockquote><p>还没做，待补。</p><h1 id="b-playing-piano"><a class="markdownIt-Anchor" href="#b-playing-piano"></a> B - Playing Piano</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1079/C" target="_blank" rel="noopener">Codeforces Round #522 (Div. 2, based on Technocup 2019 Elimination Round 3)</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>给定一组序列a[i]，求一组序列b[i]，b[i]满足b[i]的数值不超过5，且如果a[i] < a[i+1]则b[i] < b[i+1]，如果a[i] > a[i+1]则b[i] > b[i+1]，如果a[i]=a[i+1]则b[i]!=b[i+1]，如果不存在这样的b[i]序列，则输出-1。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>记忆化搜索。不知道不加记忆化能不能过。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">400005</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],ans[maxn],temp[maxn];</span><br><span class="line"><span class="keyword">int</span> f[maxn][<span class="number">6</span>];</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(x==n+<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) ans[i]=temp[i];</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">5</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!f[x+<span class="number">1</span>][i]) <span class="keyword">continue</span>;</span><br><span class="line">temp[x]=i;</span><br><span class="line">f[x+<span class="number">1</span>][i]=dfs(x+<span class="number">1</span>,i);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[x]>a[x<span class="number">-1</span>])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=last+<span class="number">1</span>;i<=<span class="number">5</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!f[x+<span class="number">1</span>][i]) <span class="keyword">continue</span>;</span><br><span class="line">temp[x]=i;</span><br><span class="line">f[x+<span class="number">1</span>][i]=dfs(x+<span class="number">1</span>,i);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[x]<a[x<span class="number">-1</a[x<span></span>])<br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<last;i++)< span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!f[x+<span class="number">1</span>][i]) <span class="keyword">continue</span>;</span><br><span class="line">temp[x]=i;</span><br><span class="line">f[x+<span class="number">1</span>][i]=dfs(x+<span class="number">1</span>,i);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[x]==a[x<span class="number">-1</span>])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">5</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(i==last) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(!f[x+<span class="number">1</span>][i]) <span class="keyword">continue</span>;</span><br><span class="line">temp[x]=i;</span><br><span class="line">f[x+<span class="number">1</span>][i]=dfs(x+<span class="number">1</span>,i);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!flag) <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>),<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></last;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="c-a-prank"><a class="markdownIt-Anchor" href="#c-a-prank"></a> C - A Prank</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1062/A" target="_blank" rel="noopener">Codeforces Round #520 (Div. 2)</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>有保证递增的n个数组成的序列</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mtext>  </mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mtext>  </mtext><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mi>n</mi></msub><mtext>  </mtext><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><msub><mi>a</mi><mn>1</mn></msub><mo><</mo><msub><mi>a</mi><mn>2</mn></msub><mo><</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo><</mo><msub><mi>a</mi><mi>n</mi></msub><mo>≤</mo><mn>1000</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_1,\;a_2,\;...\;,\;a_n\;(1\leq a_1<a_2<...<a_n\leq1000) < annotation></a_2<...<a_n\leq1000)></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p><p>现在要抹去连续的几个数，求最长能抹去多少个数，能根据剩下的数推断出原序列。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>显然，如果能找回来，那么删去的数的值是连续的。直接找出值连续的序列的最长长度，注意因为值是大于0小于等于1000的，所以如果最后一个数是1000或者第一个数是1，是可以删去的。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">0</span>;a[n+<span class="number">1</span>]=<span class="number">1001</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n+<span class="number">1</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[i]==a[i<span class="number">-1</span>]+<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(a[i]==a[i<span class="number">-1</span>]+<span class="number">1</span>) i++,temp++;</span><br><span class="line">ans=max(ans,temp);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">ans=max(ans,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d-fun-with-integers"><a class="markdownIt-Anchor" href="#d-fun-with-integers"></a> D - Fun with Integers</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1062/D" target="_blank" rel="noopener">Codeforces Round #520 (Div. 2)</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>给你一个正整数n，(2≤n≤100000)，选一个数a，(2≤∣a∣≤n)，每次再选一个整数b，(2≤∣b∣≤n)，并且使得存在整数x，满足1 < ∣x∣且(a⋅x=b或b⋅x=a)，a就可以转换为b，并且获得∣x∣的分数，但是之后就不能使用a转换为b或b再转换为a的操作了，求得到分数的最大值。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>枚举所有成k倍数的a，b，答案就是k*4的和。<br>为什么呢？<br>以一对正整数a，b (a < b)为例：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>×</mo><mi>k</mi><mo>=</mo><mi>b</mi><mspace linebreak="newline"></mspace><mi>a</mi><mo>×</mo><mo stretchy="false">(</mo><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>b</mi><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo>×</mo><mi>k</mi><mo>=</mo><mo>−</mo><mi>b</mi><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\times k=b\\a\times(-k)=-b\\(-a)\times k=-b\\(-a)\times(-k)=b </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></span></p><p>答案就很显然了。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;i*j<=n;j++)</span><br><span class="line">{</span><br><span class="line">ans+=j*<span class="number">4</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="e-banh-mi"><a class="markdownIt-Anchor" href="#e-banh-mi"></a> E - Banh-mi</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1062/C" target="_blank" rel="noopener">Codeforces Round #520 (Div. 2)</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>给出一个长度为n的01串。<br>每次可以选择获得并删除一个位置位置上的值 x，并且会使其他位置的值加上 x 。现在给出m个询问，每个询问是一个区间[l , r] ,在这个范围内能获得的最大价值是多少。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>如果我们先删去值为0的位置，那么对于其他位置的贡献始终为0，显然是最差解。<br>所以我们每次删去所有值中最大的值，这样就能保证其他位置全部加上这个最大的值，也就保证了答案最优。<br>用快速幂计算等比数列即可（做这道题的时候等比数列的公式我都忘了2333）。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x&(-x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],c[maxn],q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span> </span>{<span class="keyword">for</span>(<span class="keyword">int</span> i=x;i<=n;i+=lowbit(i)) c[i]+=v;}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{<span class="keyword">int</span> t=<span class="number">0</span>;<span class="keyword">for</span>(<span class="keyword">int</span> i=x;i;i-=lowbit(i)) t+=c[i];<span class="keyword">return</span> t;}</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">poww</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(k&<span class="number">1</span>) temp=(temp*x)%mod;</span><br><span class="line">x=(x*x)%mod;</span><br><span class="line">k>>=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&q);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%1d"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) add(i,a[i]);</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&l,&r);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum=get(r)-get(l<span class="number">-1</span>);</span><br><span class="line"><span class="comment">//printf("$$%d\n",sum);</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> zero=r-l+<span class="number">1</span>-sum;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s=poww(<span class="number">2l</span>l,zero);</span><br><span class="line"><span class="comment">//printf("**%lld\n",zero);</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=-(<span class="number">1</span>-poww(<span class="number">2</span>,sum));</span><br><span class="line"><span class="comment">//printf("@@%lld\n",ans);</span></span><br><span class="line">ans=ans*s;</span><br><span class="line">ans%=mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f-barcelonian-distance"><a class="markdownIt-Anchor" href="#f-barcelonian-distance"></a> F - Barcelonian Distance</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1079/D" target="_blank" rel="noopener">Codeforces Round #522 (Div. 2, based on Technocup 2019 Elimination Round 3)</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>给出一条二维平面上的直线和两个点A、B，问从A点走到B点的最短路径长度。<br>点只能在给定直线和与坐标轴平行的直线上行走。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p><img alt="CF1079D_sol" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF1079D_sol.jpg" class="lazyload"></p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cmath ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">double</span> a,b,c,sx,sy,tx,ty;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dis</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y,<span class="keyword">double</span> xx,<span class="keyword">double</span> yy)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((xx-x)*(xx-x)+(yy-y)*(yy-y));</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf%lf%lf%lf"</span>,&a,&b,&c,&sx,&sy,&tx,&ty);</span><br><span class="line"><span class="keyword">double</span> lsx=-(b*sy+c)/a;</span><br><span class="line"><span class="keyword">double</span> lsy=-(a*sx+c)/b;</span><br><span class="line"><span class="keyword">double</span> ltx=-(b*ty+c)/a;</span><br><span class="line"><span class="keyword">double</span> lty=-(a*tx+c)/b;</span><br><span class="line"><span class="keyword">double</span> ans=<span class="built_in">fabs</span>(tx-sx)+<span class="built_in">fabs</span>(ty-sy);</span><br><span class="line">ans=min(ans,<span class="built_in">fabs</span>(lsy-sy)+dis(sx,lsy,tx,lty)+<span class="built_in">fabs</span>(lty-ty));</span><br><span class="line">ans=min(ans,<span class="built_in">fabs</span>(lsy-sy)+dis(sx,lsy,ltx,ty)+<span class="built_in">fabs</span>(ltx-tx));</span><br><span class="line">ans=min(ans,<span class="built_in">fabs</span>(lsx-sx)+dis(lsx,sy,tx,lty)+<span class="built_in">fabs</span>(lty-ty));</span><br><span class="line">ans=min(ans,<span class="built_in">fabs</span>(lsx-sx)+dis(lsx,sy,ltx,ty)+<span class="built_in">fabs</span>(ltx-tx));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="g-diverse-substring"><a class="markdownIt-Anchor" href="#g-diverse-substring"></a> G - Diverse Substring</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1079/A" target="_blank" rel="noopener">Codeforces Round #522 (Div. 2, based on Technocup 2019 Elimination Round 3)</a></p></blockquote><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p>国王邀请k个人来赴宴就餐，每个人都吃了好几道菜（菜的数量对每个人来说都一样），每道菜都配有一套新的厨具。每一套器具都是一样的，由不同类型的器具组成，所有种类的器皿都由1到100编号。每一类器具最多在一道菜只能出现一次。晚餐结束后，客人们都被打发走了，国王想知道能多少餐具被偷。不幸的是，国王忘记了每一位客人有多少菜，但他知道晚餐后剩下的所有餐具的清单。求出丢失餐具的最小数量。</p><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><p>找出个数最多的餐具数量maxx，因为每个人的餐具数量是相同的，所以maxx应该能被k整除，如果不能整除，说明一定存在拿走了的情况，题目又要保证丢失餐具数量最少，所以maxx取比最初maxx大且是k的倍数的值。那么maxx*餐具种类type就是最小的总数量，再减去剩下n个餐具得到的就是被偷走的餐具数量。</p><h2 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cmath ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,cnt[maxn],maxx=<span class="number">0</span>,types=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&x);</span><br><span class="line">cnt[x]++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">100</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!cnt[i]) <span class="keyword">continue</span>;</span><br><span class="line">types++;</span><br><span class="line">maxx=max(cnt[i],maxx);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(maxx%k) maxx++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,maxx*types-n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="h-math"><a class="markdownIt-Anchor" href="#h-math"></a> H - Math</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1062/B" target="_blank" rel="noopener">Codeforces Round #520 (Div. 2)</a></p></blockquote><h2 id="题目大意-7"><a class="markdownIt-Anchor" href="#题目大意-7"></a> 题目大意</h2><p>输入一个数，可以对这个数进行两种操作：</p><ol><li>乘以任何一个数 x</li><li>如果这个数为平方数（4，9，16，25…），可以对这个数开根号。</li></ol><p>求经过若干次操作后，这个数最小能变成哪个数？并输出最少的变换次数。</p><h2 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h2><ul><li>第一问：最小能变成哪个数就直接是所有质因数的乘积，这应该很好理解。</li><li>第二问：如果所有的质因数的个数都是2的n次方，那么显然直接开n-1次根就好了。那如果不是以上情况怎么办呢？就再乘上一个数变成那样就好了，因为没有限制乘什么数，所以乘法一步到位是合法且最优的。</li></ul><h2 id="代码-7"><a class="markdownIt-Anchor" href="#代码-7"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cmath ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">int</span> num[maxn],cnt=<span class="number">0</span>,n,a[maxn],ans=<span class="number">1</span>,maxx=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>) num[++cnt]=i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=cnt;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(n&&n%num[i]==<span class="number">0</span>) ans*=num[i];</span><br><span class="line"><span class="keyword">while</span>(n&&n%num[i]==<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">a[i]++;</span><br><span class="line">n/=num[i];</span><br><span class="line">maxx=max(maxx,a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(!n) <span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,ans);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<=<span class="number">30</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>((<span class="number">1</span><<i)>=maxx)</i)></span><br><span class="line">{</span><br><span class="line">tt=i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">bool</span> f=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=cnt;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!a[i]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i]!=(<span class="number">1</span><<tt)) f="<span" class="literal">true</tt))></span>;<br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(f) tt++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tt);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>一切看起来不可做的题都有巧妙的解法。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day3.jpg" class="lazyload"></p>        <div id="aplayer-BnGpTsYv" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-BnGpTsYv"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="思维" scheme="http://lemonaaaaa.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="字符串" scheme="http://lemonaaaaa.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="搜索" scheme="http://lemonaaaaa.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="计算几何" scheme="http://lemonaaaaa.com/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
      <category term="快速幂" scheme="http://lemonaaaaa.com/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>武汉大学新生寒假集训测试Day2 题解</title>
    <link href="http://lemonaaaaa.com/2020/02/whuwvttf-day2/"/>
    <id>http://lemonaaaaa.com/2020/02/whuwvttf-day2/</id>
    <published>2020-02-07T15:59:59.000Z</published>
    <updated>2020-04-17T13:16:38.927Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><h1 id="a-cutting-out"><a class="markdownIt-Anchor" href="#a-cutting-out"></a> A - Cutting Out</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1077/D" target="_blank" rel="noopener">Codeforces Round #521 (Div. 3)</a></p></blockquote><p>还没做，待补。</p><h1 id="b-vasya-and-books"><a class="markdownIt-Anchor" href="#b-vasya-and-books"></a> B - Vasya and Books</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1073/B" target="_blank" rel="noopener">Educational Codeforces Round 53 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>给出一个栈里书的编号，每次能拿出栈顶的一本书，每次询问拿出某本编号的书需要拿几次。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>水题，直接模拟。开一个指针记录取到哪里了。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],b[maxn],pos[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">pos[a[i]]=i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&b[i]);</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(pos[b[i]]>now)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,pos[b[i]]-now);</span><br><span class="line">now=pos[b[i]];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"0 "</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="c-vasya-and-robot"><a class="markdownIt-Anchor" href="#c-vasya-and-robot"></a> C - Vasya and Robot</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1073/C" target="_blank" rel="noopener">Educational Codeforces Round 53 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给一串命令L、R、D、U，问是否到达终点(x,y)。可以改变任意字串的命令，改变长度为最远的-最近的+1；问最小的长度，或者不行就-1；</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>最开始理解错题意了，还没改，待补。</p><h1 id="d-frog-jumping"><a class="markdownIt-Anchor" href="#d-frog-jumping"></a> D - Frog Jumping</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1077/A" target="_blank" rel="noopener">Codeforces Round #521 (Div. 3)</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>水题。青蛙一共跳k次，跳第奇数次时跳到x+a位置，跳第偶数次时跳到x-b位置（x为当前位置），求跳k次之后青蛙的位置。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>直接算出来向左跳多远，向右跳多远，两个值带符号相加即可。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&a,&b,&k);</span><br><span class="line"><span class="keyword">if</span>(k&<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(k/<span class="number">2</span>)*(a-b)+a);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(k/<span class="number">2</span>)*(a-b));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="e-good-array"><a class="markdownIt-Anchor" href="#e-good-array"></a> E - Good Array</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1077/C" target="_blank" rel="noopener">Codeforces Round #521 (Div. 3)</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>有n个数，现在要去掉某个位置的数，使得剩下的序列钟当且仅当有一个数是其他所有数的和。独立检查所有项，输出答案个数和所有符合条件可以去掉的位置编号。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>预处理出3个值，前缀和、从左到右的前缀最大值、从右到左的后缀最大值，这样我们每次查询的时候都可以O(1)完成检查。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a[maxn],mx1[maxn],mx2[maxn],sum[maxn],ans[maxn],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) sum[i]=sum[i<span class="number">-1</span>]+a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) mx1[i]=max(mx1[i<span class="number">-1</span>],a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i>=<span class="number">0</span>;i--) mx2[i]=max(mx2[i+<span class="number">1</span>],a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tx=max(mx1[i<span class="number">-1</span>],mx2[i+<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ss=sum[n]-a[i]-tx;</span><br><span class="line"><span class="keyword">if</span>(tx==ss) ans[++cnt]=i;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,cnt);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=cnt;i++) <span class="built_in">printf</span>(<span class="string">"%lld "</span>,ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f-disturbed-people"><a class="markdownIt-Anchor" href="#f-disturbed-people"></a> F - Disturbed People</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1077/B" target="_blank" rel="noopener">Codeforces Round #521 (Div. 3)</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>对于一个给定的长度为n的01序列</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mtext>  </mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mtext>  </mtext><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1,\;a_2,\;...\;,\;a_n </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>如果存在</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo><</mo><mi>i</mi><mo><</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1<i<n < annotation></i<n></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></span></p><p>满足</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_{i-1}=a_{i+1}=1,\;a_i=0 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>那么这个序列是不优美的,求最少需要将多少个1变为0,使得原序列变为优美的序列。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>贪心。如果遇到一个值为0的位置，两边的值都是1，那就要把右边的变成0以满足条件。并且显然这是最优的。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!a[i]&&a[i<span class="number">-1</span>]&&a[i+<span class="number">1</span>])</span><br><span class="line">{</span><br><span class="line">a[i+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">ans++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="g-diverse-substring"><a class="markdownIt-Anchor" href="#g-diverse-substring"></a> G - Diverse Substring</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1073/A" target="_blank" rel="noopener">Educational Codeforces Round 53 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p>找一个字符串的子串中有没有任何字母个数不超过n/2的子串，有就输出，没有就输出No。</p><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><ul><li>我这种菜鸡只配暴力查找所有子串……</li><li>其实直接暴力判断相邻的两个字符是否相同，如果存在相邻的两个字符不同，即是答案。</li></ul><h2 id="代码笨蛋做法"><a class="markdownIt-Anchor" href="#代码笨蛋做法"></a> 代码(笨蛋做法)</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn],s[maxn],ch[maxn];</span><br><span class="line"><span class="keyword">int</span> n,cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(ch,<span class="number">0</span>,<span class="keyword">sizeof</span>(ch));</span><br><span class="line"><span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>,mx=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j<=n;j++)</span><br><span class="line">{</span><br><span class="line">s[++k]=str[j];</span><br><span class="line">cnt[str[j]]++;</span><br><span class="line">mx=max(mx,cnt[str[j]]);</span><br><span class="line"><span class="keyword">if</span>(mx<=(<span class="keyword">double</span>)k/<span class="number">2.0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">1</span>;p<=k;p++) <span class="built_in">printf</span>(<span class="string">"%c"</span>,s[p]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="h-berland-fair"><a class="markdownIt-Anchor" href="#h-berland-fair"></a> H - Berland Fair</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1073/D" target="_blank" rel="noopener">Educational Codeforces Round 53 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意-7"><a class="markdownIt-Anchor" href="#题目大意-7"></a> 题目大意</h2><p>一个博览会有n个摊位，这些摊位围成一个圆圈，第i个摊位糖果的价格为ai，每个摊位都有无限数量的糖果出售。<br>有一个人带了T块钱去参观，他从1号摊位开始，依次顺时针参观，每到一个摊位，只要买得起，就买一个糖果。求他到一个糖果都买不起的时候，一共买了多少个糖果。</p><h2 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h2><p>想试一下暴力能不能过，然后优化了一下：每逛完一圈，就统计还可以完全相同地重复逛多少圈，然后就AC了……</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,money,a[maxn],ini=<span class="number">0</span>,cnt=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&n,&money);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span>(flag)</span><br><span class="line">{</span><br><span class="line">cnt=<span class="number">0</span>;ini=<span class="number">0</span>;flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[i]<=money-ini)</span><br><span class="line">{</span><br><span class="line">ini+=a[i];</span><br><span class="line">cnt++;</span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(!ini) <span class="keyword">break</span>;</span><br><span class="line">ans+=cnt*(money/ini);</span><br><span class="line">money-=ini*(money/ini);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>8道题明显感觉自己英语水平和算法水平都有点不小的问题。还有就是开题顺序一定要找对，不要一直纠缠在一道没有开对的题上。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day2.png" class="lazyload"></p>        <div id="aplayer-RfhJiyau" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-RfhJiyau"),            narrow: false,            autoplay: true,            showlrc: 3,            music: {              title: "我喜欢",              author: "上海彩虹室内合唱团",              url: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.mp3",              pic: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.jpg",              lrc: "https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/music/woxihuan.lrc"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer
      
    
    </summary>
    
    
      <category term="Code life" scheme="http://lemonaaaaa.com/categories/Code-life/"/>
    
      <category term="Codeforces" scheme="http://lemonaaaaa.com/categories/Code-life/Codeforces/"/>
    
    
      <category term="algorithms" scheme="http://lemonaaaaa.com/tags/algorithms/"/>
    
      <category term="contests" scheme="http://lemonaaaaa.com/tags/contests/"/>
    
      <category term="模拟" scheme="http://lemonaaaaa.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="思维" scheme="http://lemonaaaaa.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="贪心" scheme="http://lemonaaaaa.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="二分答案" scheme="http://lemonaaaaa.com/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
</feed>
