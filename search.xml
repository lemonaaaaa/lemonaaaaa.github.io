<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>武汉大学新生寒假集训测试Day7 题解</title>
      <link href="/2020/02/whuwvttf-day7/"/>
      <url>/2020/02/whuwvttf-day7/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="a"><a class="markdownIt-Anchor" href="#a"></a> A</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/977/B" target="_blank" rel="noopener">Codeforces Round #479 (Div. 3)</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>求出现次数最多的two-gram的子串，一个two-gram串是指在原字符串中出现的连续的两个字母.</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>直接枚举每每相邻的两个字符，用map或者hash计一下出现次数不断取max即可。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< map ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< iostream ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< string ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="built_in">map</span><<span class="built_in">string</span>,<span class="keyword">int</span>> mp;</span><br><span class="line"><span class="keyword">int</span> maxx=<span class="number">0</span>,n;</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="built_in">string</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<n;i++)< span><br><span class="line">{</span><br><span class="line"><span class="built_in">string</span> temp=<span class="string">""</span>;</span><br><span class="line">temp+=str[i];</span><br><span class="line">temp+=str[i+<span class="number">1</span>];</span><br><span class="line">mp[temp]++;</span><br><span class="line"><span class="keyword">if</span>(mp[temp]>maxx)</span><br><span class="line">{</span><br><span class="line">maxx=mp[temp];</span><br><span class="line">ans=temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<ans;< span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></ans;<></span></n;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="b"><a class="markdownIt-Anchor" href="#b"></a> B</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/977/C" target="_blank" rel="noopener">Codeforces Round #479 (Div. 3)</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给出一个n个数字组成的序列，问是否存在一个整数x，使得该序列刚好有k个数小于或等于x，存在即输出该x，否则输出-1。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1\leq x,a_i\leq10^9) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>直接从小到大排序，取第k个数即可。如果第k个数和第k+1个数相等，那么就一定不存在整数x，使得恰好有k个数小于或等于x。**这里要特别注意k=0的情况,如果k=0并且最小的数不为1，那么就有解，反之则无解。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(k)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[k]==a[k+<span class="number">1</span>]) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[k]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">1</span>]==<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/977/A" target="_blank" rel="noopener">Codeforces Round #479 (Div. 3)</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>给出一个数n，求将这个数按以下规则操作k次后的结果是多少。</p><ul><li>如果这个数最后一位不是0，那么将这个数减去1。</li><li>如果这个数最后一位是0，那么将这个数除以10。</li></ul><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>按题目要求模拟即可。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k);</span><br><span class="line"><span class="keyword">while</span>(k--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">10</span>!=<span class="number">0</span>) n--;</span><br><span class="line"><span class="keyword">else</span> n/=<span class="number">10</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d"><a class="markdownIt-Anchor" href="#d"></a> D</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/977/D" target="_blank" rel="noopener">Codeforces Round #479 (Div. 3)</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>最开始有一个数x，可以将它乘2，或者如果它能整除3，可以将它除以3，再将得到的数这样操作，就会得到一连串的数。现在给出最后得到的一连串的n个数，反推每一次操作时的数。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>100</mn><mspace linebreak="newline"></mspace><mn>1</mn><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mn>3</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>18</mn></msup><mtext>  </mtext><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">1\leq n\leq100\\1\leq a_i\leq3\times10^{18}\;(1\leq i\leq n)\\ </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span><span class="mspace newline"></span></span></span></span></p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>直接dfs搜索……没想到这么水。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< set ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a[maxn],ans[maxn];</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">long</span> <span class="keyword">long</span>> s;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(x==n)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">printf</span>(<span class="string">"%lld "</span>,ans[i]);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=ans[x]*<span class="number">2</span>;</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">long</span> <span class="keyword">long</span>>::iterator it;</span><br><span class="line">it=s.find(temp);</span><br><span class="line"><span class="keyword">if</span>(it!=s.end())</span><br><span class="line">{</span><br><span class="line">s.erase(it);</span><br><span class="line">ans[x+<span class="number">1</span>]=temp;</span><br><span class="line">dfs(x+<span class="number">1</span>);</span><br><span class="line">s.insert(temp);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(ans[x]%<span class="number">3</span>!=<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">temp=ans[x]/<span class="number">3</span>;</span><br><span class="line">it=s.find(temp);</span><br><span class="line"><span class="keyword">if</span>(it!=s.end())</span><br><span class="line">{</span><br><span class="line">s.erase(it);</span><br><span class="line">ans[x+<span class="number">1</span>]=temp;</span><br><span class="line">dfs(x+<span class="number">1</span>);</span><br><span class="line">s.insert(temp);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line">s.insert(a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line">ans[<span class="number">1</span>]=a[i];</span><br><span class="line">s.erase(ans[<span class="number">1</span>]);</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line">s.insert(ans[<span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="e"><a class="markdownIt-Anchor" href="#e"></a> E</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/975/A" target="_blank" rel="noopener">Codeforces Round #478 (Div. 2)</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>给出一个字符串，问有几个root,root的意思是一个字符串中所有的不重复字母，无关顺序。</p><ul><li>比如a,aa,aaa,ab,abb，去重后的是字符串是a,a,a,ab,ab，只有a,ab两个root。</li><li>比如amer,arem,mrea，只有一个root。</li></ul><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>直接枚举所有的字串，因为英文小写字母只有26个，所以在这里我采用了状态压缩，每一个字母对应二进制下的一位。用状压之后的数存map，就保证了与顺序没有关系，然后统计有多少个不同数即可。如果用set的话也可以直接输出set中元素的个数。</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< map ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="built_in">map</span><<span class="keyword">int</span>,<span class="keyword">bool</span>> mp;</span><br><span class="line"><span class="keyword">int</span> b[maxn],n,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=len;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> p=str[j]-<span class="string">'a'</span>;</span><br><span class="line">temp|=(<span class="number">1</span><<p);< span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(!mp[temp]) ans++;</span><br><span class="line">mp[temp]=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></p);<></span></pre></td></tr></tbody></table></figure></div><h1 id="f"><a class="markdownIt-Anchor" href="#f"></a> F</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/975/C" target="_blank" rel="noopener">Codeforces Round #478 (Div. 2)</a></p></blockquote><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p>你有n个士兵，每个士兵的生命值为ai，有q轮攻击，每轮攻击的伤害值为ki，如果在某一轮中士兵全部死光了，那么在这一轮结束的时候就会全部复活，且这一轮攻击剩下的伤害就会被忽略，问你每轮攻击结束后你会有多少个士兵。</p><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><p>用前缀和统计前n个士兵的生命值。每次攻击时先判断是否可以全部击杀，如果可以，答案为n；如果不能，用二分找到第一个大于等于当前攻击值所对应的编号pos。如果攻击值刚好可以击杀位置为pos的士兵，那么答案就是n-pos，如果还不足以击杀位置为pos的士兵，那么答案就是n-pos+1。</p><h2 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,q,a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&n,&q);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&x);</span><br><span class="line">tot+=x;</span><br><span class="line"><span class="keyword">if</span>(tot>=a[n])</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n);</span><br><span class="line">tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> pos=lower_bound(a+<span class="number">1</span>,a+n+<span class="number">1</span>,tot)-a;</span><br><span class="line"><span class="keyword">if</span>(a[pos]-tot) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n-pos+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n-pos);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="g"><a class="markdownIt-Anchor" href="#g"></a> G</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/975/B" target="_blank" rel="noopener">Codeforces Round #478 (Div. 2)</a></p></blockquote><h2 id="题目大意-7"><a class="markdownIt-Anchor" href="#题目大意-7"></a> 题目大意</h2><p><img alt="CF975B" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF975B.jpg" class="lazyload"></p><p>有14个洞，可以选择从第i个洞取出全部石头，然后在第i+1上放一个，第i+2上放一个，14个洞不停循环放置，直到全部放完，然后把14个洞里偶数的数相加，求最大值。</p><h2 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h2><p>模拟，关键要看懂题。每个洞取出来放一放，取最大值即可。</p><h2 id="代码-7"><a class="markdownIt-Anchor" href="#代码-7"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[maxn],ans=<span class="number">0</span>,b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">14</span>;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">14</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x=a[i]/<span class="number">14</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=<span class="number">14</span>;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(i==j) b[j]=x;</span><br><span class="line"><span class="keyword">else</span> b[j]=a[j]+x;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> res=a[i]%<span class="number">14</span>;</span><br><span class="line"><span class="keyword">int</span> now=i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(res)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(now==<span class="number">15</span>) now=<span class="number">1</span>;</span><br><span class="line">b[now]++;</span><br><span class="line">res--;</span><br><span class="line">now++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=<span class="number">14</span>;j++)</span><br><span class="line"><span class="keyword">if</span>(!(b[j]&<span class="number">1</span>)) temp+=b[j];</span><br><span class="line">ans=max(ans,temp);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="h"><a class="markdownIt-Anchor" href="#h"></a> H</h1><blockquote><p><a href="https://codeforces.com/problemset/problem/975/D" target="_blank" rel="noopener">Codeforces Round #478 (Div. 2)</a></p></blockquote><h2 id="题目大意-8"><a class="markdownIt-Anchor" href="#题目大意-8"></a> 题目大意</h2><p>在一个平面上，0时刻有n个点在一条方程为y=a⋅x+b的直线上，保证这n个点不重合，告诉你n、a和b，然后给你n个点的x坐标和它们所具有的速度矢量Vx和Vy，代表这个点在X方向上的速度为Vx，Y方向上的速度为Vy，某两个点碰撞一次会产生2个单位的权值（碰撞时不会改变路径也不会改变速度），问你这些点一共会产生多少权值。<br>需要注意的是给的是0时刻的状态，但时间的范围是(−∞,∞)，所以说在0时刻以前的碰撞也会对答案产生贡献。</p><p><img alt="CF975D" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF975D.jpg" class="lazyload"></p><h2 id="思路-8"><a class="markdownIt-Anchor" href="#思路-8"></a> 思路</h2><p>因为要求碰撞次数，实际上就是看这些点运动轨迹的直线相交得到的交点数量。那我们现在就推导一下相交条件。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="normal">设</mi><mi mathvariant="normal">点</mi></mrow><mi>i</mi><mi mathvariant="normal">和</mi><mi>j</mi><mi mathvariant="normal">，</mi><mrow><mi mathvariant="normal">假</mi><mi mathvariant="normal">设</mi><mi mathvariant="normal">它</mi><mi mathvariant="normal">们</mi><mi mathvariant="normal">在</mi></mrow><mi>t</mi><mrow><mi mathvariant="normal">时</mi><mi mathvariant="normal">刻</mi><mi mathvariant="normal">相</mi><mi mathvariant="normal">遇</mi></mrow><mi mathvariant="normal">，</mi><mrow><mi mathvariant="normal">则</mi><mi mathvariant="normal">有</mi></mrow><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><msub><mi>V</mi><msub><mi>x</mi><mi>i</mi></msub></msub><mo>⋅</mo><mi>t</mi><mtext>  </mtext><mo>=</mo><mtext>  </mtext><msub><mi>x</mi><mi>j</mi></msub><mo>+</mo><msub><mi>V</mi><msub><mi>x</mi><mi>j</mi></msub></msub><mo>⋅</mo><mi>t</mi><mspace linebreak="newline"></mspace><msub><mi>y</mi><mi>i</mi></msub><mo>+</mo><msub><mi>V</mi><msub><mi>y</mi><mi>i</mi></msub></msub><mo>⋅</mo><mi>t</mi><mtext>  </mtext><mo>=</mo><mtext>  </mtext><msub><mi>y</mi><mi>j</mi></msub><mo>+</mo><msub><mi>V</mi><msub><mi>y</mi><mi>j</mi></msub></msub><mo>⋅</mo><mi>t</mi><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mrow><mi mathvariant="normal">移</mi><mi mathvariant="normal">相</mi><mi mathvariant="normal">后</mi><mi mathvariant="normal">两</mi><mi mathvariant="normal">式</mi><mi mathvariant="normal">相</mi><mi mathvariant="normal">除</mi></mrow><mi mathvariant="normal">，</mi><mrow><mi mathvariant="normal">消</mi><mi mathvariant="normal">去</mi></mrow><mi>t</mi><mi mathvariant="normal">得</mi><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub></mrow><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mfrac><mrow><msub><mi>V</mi><msub><mi>x</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>x</mi><mi>i</mi></msub></msub></mrow><mrow><msub><mi>V</mi><msub><mi>y</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>y</mi><mi>i</mi></msub></msub></mrow></mfrac><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mo>∵</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mrow><mi mathvariant="normal">两</mi><mi mathvariant="normal">点</mi><mi mathvariant="normal">在</mi><mi mathvariant="normal">同</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">直</mi><mi mathvariant="normal">线</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">且</mi><mi mathvariant="normal">该</mi><mi mathvariant="normal">直</mi><mi mathvariant="normal">线</mi><mi mathvariant="normal">斜</mi><mi mathvariant="normal">率</mi><mi mathvariant="normal">为</mi></mrow><mi>a</mi><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mo>∴</mo><mfrac><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub></mrow><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mi>a</mi><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mrow><mi mathvariant="normal">代</mi><mi mathvariant="normal">入</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">式</mi></mrow><mi mathvariant="normal">，</mi><mi mathvariant="normal">得</mi><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mfrac><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub></mrow><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mi>a</mi><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mfrac><mrow><msub><mi>V</mi><msub><mi>y</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>y</mi><mi>i</mi></msub></msub></mrow><mrow><msub><mi>V</mi><msub><mi>x</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>x</mi><mi>i</mi></msub></msub></mrow></mfrac><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mrow><mi mathvariant="normal">十</mi><mi mathvariant="normal">字</mi><mi mathvariant="normal">相</mi><mi mathvariant="normal">乘</mi></mrow><mi mathvariant="normal">，</mi><mrow><mi mathvariant="normal">移</mi><mi mathvariant="normal">相</mi><mi mathvariant="normal">得</mi></mrow><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mi>a</mi><mo>⋅</mo><msub><mi>V</mi><msub><mi>x</mi><mi>i</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>y</mi><mi>i</mi></msub></msub><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mi>a</mi><mo>⋅</mo><msub><mi>V</mi><msub><mi>x</mi><mi>j</mi></msub></msub><mo>−</mo><msub><mi>V</mi><msub><mi>y</mi><mi>j</mi></msub></msub><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mrow><mi mathvariant="normal">上</mi><mi mathvariant="normal">式</mi><mi mathvariant="normal">即</mi><mi mathvariant="normal">为</mi><mi mathvariant="normal">两</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">点</mi><mi mathvariant="normal">能</mi><mi mathvariant="normal">产</mi><mi mathvariant="normal">生</mi><mi mathvariant="normal">贡</mi><mi mathvariant="normal">献</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">条</mi><mi mathvariant="normal">件</mi></mrow></mrow><annotation encoding="application/x-tex">\mathrm{设点}i和j，\mathrm{假设它们在}t\mathrm{时刻相遇}，\mathrm{则有}\\\\x_i+V_{x_i}\cdot t\;=\;x_j+V_{x_j}\cdot t\\y_i+V_{y_i}\cdot t\;=\;y_j+V_{y_j}\cdot t\\\\\mathrm{移相后两式相除}，\mathrm{消去}t得\\\\\frac{x_i-x_j}{y_i-y_j}\;=\;\frac{V_{x_j}-V_{x_i}}{V_{y_j}-V_{y_i}}\\\\\because i,j\mathrm{两点在同一直线上且该直线斜率为}a\\\\\therefore\frac{y_i-y_j}{x_i-x_j}\;=\;a\\\\\mathrm{代入上式}，得\\\\\frac{y_i-y_j}{x_i-x_j}\;=\;a\;=\;\frac{V_{y_j}-V_{y_i}}{V_{x_j}-V_{x_i}}\\\\\mathrm{十字相乘}，\mathrm{移相得}\\\\a\cdot V_{x_i}-V_{y_i}\;=\;a\cdot V_{x_j}-V_{y_j}\\\\\mathrm{上式即为两个点能产生贡献的条件} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord cjk_fallback">设</span><span class="mord cjk_fallback">点</span></span><span class="mord mathdefault">i</span><span class="mord cjk_fallback">和</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord cjk_fallback">假</span><span class="mord cjk_fallback">设</span><span class="mord cjk_fallback">它</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">在</span></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">刻</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">遇</span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">有</span></span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord"><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">除</span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord cjk_fallback">消</span><span class="mord cjk_fallback">去</span></span><span class="mord mathdefault">t</span><span class="mord cjk_fallback">得</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.232438em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.26033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.45397em;vertical-align:-1.03332em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4206500000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.73732em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.03332em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord"><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">且</span><span class="mord cjk_fallback">该</span><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">斜</span><span class="mord cjk_fallback">率</span><span class="mord cjk_fallback">为</span></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.232438em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.26033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord"><span class="mord cjk_fallback">代</span><span class="mord cjk_fallback">入</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">式</span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">得</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.232438em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.26033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.45397em;vertical-align:-1.03332em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4206500000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.73732em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.03332em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord"><span class="mord cjk_fallback">十</span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">乘</span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">得</span></span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord"><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">产</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">贡</span><span class="mord cjk_fallback">献</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">件</span></span></span></span></span></span></p><h2 id="代码-8"><a class="markdownIt-Anchor" href="#代码-8"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< map ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="built_in">map</span><<span class="keyword">long</span> <span class="keyword">long</span>,<span class="keyword">int</span>> tot;</span><br><span class="line"><span class="built_in">map</span><pair<<span class="keyword">long</pair<<span></span> <span class="keyword">long</span>,<span class="keyword">long</span> <span class="keyword">long</span>>,<span class="keyword">int</span>> par;<br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a,same=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%*d"</span>,&n,&a);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> vx,vy;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%*d%lld%lld"</span>,&vx,&vy);</span><br><span class="line">ans+=tot[a*vx-vy];</span><br><span class="line">tot[a*vx-vy]++;</span><br><span class="line">same+=par[make_pair(vx,vy)];</span><br><span class="line">par[make_pair(vx,vy)]++;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans-same)*<span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>难度不是很大，但看不懂英语题面真的伤。还有就是思路一定要清晰，先想清楚再写，要不然就会写得很混乱，debug也会崩溃，比如比赛时写的F题。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day7.jpg" class="lazyload"></p></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 计算几何 </tag>
            
            <tag> map </tag>
            
            <tag> stl </tag>
            
            <tag> 哈希 </tag>
            
            <tag> 状态压缩 </tag>
            
            <tag> 前缀和 </tag>
            
            <tag> 二分查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces 884F Anti-Palindromize</title>
      <link href="/2020/02/codeforces-884F/"/>
      <url>/2020/02/codeforces-884F/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><blockquote><p><a href="http://codeforces.com/problemset/problem/884/F" target="_blank" rel="noopener">题目链接1</a></p></blockquote><blockquote><p><a href="https://www.luogu.com.cn/problem/CF884F" target="_blank" rel="noopener">题目链接2</a></p></blockquote><h1 id="题目原文"><a class="markdownIt-Anchor" href="#题目原文"></a> 题目原文</h1><p><img alt="CF884F" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF884F.jpg" class="lazyload"></p><p><img alt="CF884F_cn" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF884F_cn.jpg" class="lazyload"></p><h1 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h1><p>将一个字符串打乱后放回，满足第一个位置上的字符和最后一个位置上的字符不相同，第二个的位置上的字符和倒数第二个位置上的字符不相同…以此类推。每个位置有一个权值，如果原串和新串的位置上的字符相同，就获得这个位置上的权值。求满足条件的最大的权值和。</p><h1 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h1><p><s>显然我们要尽可能地保证原字符串中尽可能多的字符在原位上，那么如果两个对应位置相同，我们可以视作将权值小的提到前面，然后优先考虑交换它们的位置和顺序，于是可以用dp等方法求出。</s></p><p>上面的是我最开始的思路，但是状态的设计和转移都比较难。我们可以换一种思想考虑，我们先把所有的字符全部拿出来，然后再一个个地放回去。那么我们考虑放回去的时候的约束有哪些：</p><p>1.放回去的时候每个字符的总个数要和原串中每个字符的总个数相同。</p><p>2.放回去之后前后两个对应的位置上不能出现重复的字符。(也就是说同种字符只能放在两个位置上的其中一个)</p><p>3.每一个位置都必须放一个字符。</p><p>从这里就看出了可以用网络流相关知识来求解了。那么现在来考虑如何保证权值最大。</p><p>同样我们可以只考虑哪些字符不在原来的位置上即可，所以我们可以求出不在原来位置上的权值和，用总权值-这些值就是答案。</p><h1 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h1><p>算法：最小费用最大流</p><p>首先建立源点S和汇点T</p><p>考虑约束条件1，我们先求出每个字符出现的次数cnt[i]，然后从S向每个字符(设点的类型为A)连流量为cnt[i]，费用为0的边，这样就保证了每个字符只能选最多cnt[i]次。</p><p>考虑约束条件2，由于同样的字符在每两个对应位置上只能放一个，那我们每个字符最多只能放n/2次，那么我们每个字符的点再新建n/2个点(设点的类型为B)，第i个点分别对应位置i和位置n-i+1，那么我们从每个A类型的点向对应的B类型的点连流量为1，费用为0的点，就限制了对于每个字符，对应的两个位置只能选一个来放。</p><p>考虑约束条件3，我们对每一个位置建一个点(设点的类型为C)，那么我们对每一个位置都建一条到汇点T流量为1，费用为0的点，就保证了每一个位置最多有一个字符。然后我们从B类型的点向C类型的点连边，这里是关键的一步，由上一个约束条件的考虑得出第i个点分别向i和n-i+1连流量为1的边即可。考虑费用：如果B类型的点的字符和连的位置对应的原串的字符相等，则费用为0，否则费用为对应的权值。</p><p>显然，在题意给定一定合法的情况下，这个网络一定满流。那我们就得出了修改所需要的代价，最后答案就是所有权值和-最小费用。</p><p>可能语言组织有些混乱，<s>毕竟很久没有上常规课了</s>，如有疏漏和错误之处请提出和见谅。<s>估计提出也没用了，还有两天就省选了，马上就退役了233333</s></p><p>谨以此题解纪念即将结束的美好的OI生涯。</p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < queue ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x7f7f7f7f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">int</span> to,next,cost,flow;</span><br><span class="line">} edge[maxn<<<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> head[maxn],dist[<span class="number">10005</span>],k=<span class="number">1</span>,tot_cost=<span class="number">0</span>,ans=<span class="number">0</span>,s,t;</span><br><span class="line"><span class="keyword">bool</span> visit[<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">edge[++k].to=v;edge[k].next=head[u];edge[k].flow=w;edge[k].cost=c;head[u]=k;</span><br><span class="line">swap(u,v);</span><br><span class="line">edge[++k].to=v;edge[k].next=head[u];edge[k].flow=<span class="number">0</span>;edge[k].cost=-c;head[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">memset</span>(dist,inf,<span class="keyword">sizeof</span>(dist));</span><br><span class="line"><span class="built_in">memset</span>(visit,<span class="literal">false</span>,<span class="keyword">sizeof</span>(visit));</span><br><span class="line">dist[t]=<span class="number">0</span>;visit[t]=<span class="literal">true</span>;<span class="built_in">deque</span><<span class="keyword">int</span>> q;q.push_back(t);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x=q.front();q.pop_front();visit[x]=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(dist[edge[i].to]>dist[x]-edge[i].cost&&edge[i^<span class="number">1</span>].flow)</span><br><span class="line">{</span><br><span class="line">dist[edge[i].to]=dist[x]-edge[i].cost;</span><br><span class="line"><span class="keyword">if</span>(!visit[edge[i].to])</span><br><span class="line">{</span><br><span class="line">visit[edge[i].to]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(!q.empty()&&dist[q.front()]>dist[edge[i].to]) q.push_front(edge[i].to);</span><br><span class="line"><span class="keyword">else</span> q.push_back(edge[i].to);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> dist[s]!=inf;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">visit[x]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(x==t||!f) <span class="keyword">return</span> f;</span><br><span class="line"><span class="keyword">int</span> flow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(visit[edge[i].to]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(dist[edge[i].to]!=dist[x]-edge[i].cost||!edge[i].flow) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> temp=dfs(edge[i].to,min(f-flow,edge[i].flow));</span><br><span class="line">edge[i].flow-=temp;</span><br><span class="line">edge[i^<span class="number">1</span>].flow+=temp;</span><br><span class="line">flow+=temp;</span><br><span class="line">tot_cost+=temp*edge[i].cost;</span><br><span class="line"><span class="keyword">if</span>(f==flow) <span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> flow;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zkw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">while</span>(spfa())</span><br><span class="line">{</span><br><span class="line">visit[t]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span>(visit[t])</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(visit,<span class="literal">false</span>,<span class="keyword">sizeof</span>(visit));</span><br><span class="line">dfs(s,inf);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> cnt[maxn],n,b[maxn],alp[maxn];</span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lemon</span></span><br><span class="line">freopen(<span class="string">"844f.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);s=<span class="number">0</span>;t=<span class="number">4000</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) alp[i]=str[i]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&b[i]),ans+=b[i];</span><br><span class="line"><span class="comment">//s:0</span></span><br><span class="line"><span class="comment">//alp:1-26</span></span><br><span class="line"><span class="comment">//alp_split:100-2700(100*alp+num(n/2))</span></span><br><span class="line"><span class="comment">//point:3000-3100</span></span><br><span class="line"><span class="comment">//t:4000</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) cnt[alp[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">26</span>;i++)</span><br><span class="line">{</span><br><span class="line">add(s,i,cnt[i],<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=(n>><span class="number">1</span>);j++)</span><br><span class="line">{</span><br><span class="line">add(i,<span class="number">100</span>*i+j,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(alp[j]==i) add(<span class="number">100</span>*i+j,<span class="number">3000</span>+j,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> add(<span class="number">100</span>*i+j,<span class="number">3000</span>+j,<span class="number">1</span>,b[j]);</span><br><span class="line"><span class="keyword">if</span>(alp[n-j+<span class="number">1</span>]==i) add(<span class="number">100</span>*i+j,<span class="number">3000</span>+n-j+<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> add(<span class="number">100</span>*i+j,<span class="number">3000</span>+n-j+<span class="number">1</span>,<span class="number">1</span>,b[n-j+<span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) add(<span class="number">3000</span>+i,t,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">zkw();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,ans-tot_cost);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> algorithms </tag>
            
            <tag> 网络流 </tag>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Luogu P2146 [NOI2015]软件包管理器</title>
      <link href="/2020/02/luogu-2146/"/>
      <url>/2020/02/luogu-2146/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><blockquote><p><a href="https://www.luogu.com.cn/problem/P2146" target="_blank" rel="noopener">题目链接</a></p></blockquote><h1 id="题目背景"><a class="markdownIt-Anchor" href="#题目背景"></a> 题目背景</h1><p><img alt="luogu2146_bg" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/luogu2146_bg.jpg" class="lazyload"></p><h1 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h1><p><img alt="luogu2146_dsp" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/luogu2146_dsp.jpg" class="lazyload"></p><h1 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h1><p>一道树链剖分的模板题</p><ul><li><p>每次安装软件，就把根节点到x软件路径上的值全部变为1</p></li><li><p>同理，每次卸载软件，就把x以及它的子树的值变为0</p></li></ul><p>故我们可以用区间和的思想，每次操作之前记录一下tree[root].sum的值，更新之后再查询一遍tree[root].sum的值，两者之差的绝对值则为答案。</p><p>我的代码里把root的值设为1，每个点的编号都加上了1（个人习惯）</p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k=<span class="number">0</span>,x,head[maxn],q,deep[maxn],father[maxn],size[maxn];</span><br><span class="line"><span class="keyword">int</span> tid[maxn],top[maxn],son[maxn],tidnum=<span class="number">0</span>,pos[maxn];<span class="keyword">char</span> s[<span class="number">15</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> to,next;</span><br><span class="line">} edge[maxn<<<span class="number">1</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> left,right,flag,sum;</span><br><span class="line">} tree[maxn<<<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge[++k].to=v;</span><br><span class="line">    edge[k].next=head[u];</span><br><span class="line">    head[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch<<span class="number">48</span>||ch><span class="number">57</span>) ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(ch>=<span class="number">48</span>&&ch<=<span class="number">57</span>) x=x*<span class="number">10</span>+ch<span class="number">-48</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa,<span class="keyword">int</span> depth)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    size[x]=<span class="number">1</span>;father[x]=fa;deep[x]=depth;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(edge[i].to==fa) <span class="keyword">continue</span>;</span><br><span class="line">        dfs1(edge[i].to,x,depth+<span class="number">1</span>);</span><br><span class="line">        size[x]+=size[edge[i].to];</span><br><span class="line">        <span class="keyword">if</span>(!son[x]||size[edge[i].to]>size[son[x]]) son[x]=edge[i].to;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> tp)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    tid[x]=++tidnum;pos[tid[x]]=x;top[x]=tp;</span><br><span class="line">    <span class="keyword">if</span>(!son[x]) <span class="keyword">return</span>;dfs2(son[x],tp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(edge[i].to!=son[x]&&edge[i].to!=father[x])</span><br><span class="line">            dfs2(edge[i].to,edge[i].to);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    tree[id].left=l;tree[id].right=r;</span><br><span class="line">    tree[id].sum=<span class="number">0</span>;tree[id].flag=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)>><span class="number">1</span>;</span><br><span class="line">    build(id<<<span class="number">1</span>,l,mid);build(id<<<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">downdata</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    tree[id<<<span class="number">1</span>].sum=(tree[id<<<span class="number">1</span>].right-tree[id<<<span class="number">1</span>].left+<span class="number">1</span>)*tree[id].flag;</span><br><span class="line">    tree[id<<<span class="number">1</span>|<span class="number">1</span>].sum=(tree[id<<<span class="number">1</span>|<span class="number">1</span>].right-tree[id<<<span class="number">1</span>|<span class="number">1</span>].left+<span class="number">1</span>)*tree[id].flag;</span><br><span class="line">    tree[id<<<span class="number">1</span>].flag=tree[id<<<span class="number">1</span>|<span class="number">1</span>].flag=tree[id].flag;</span><br><span class="line">    tree[id].flag=<span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(tree[id].right<l||tree[id].left>r) <span class="keyword">return</span> <span class="number">0</span>;</l||tree[id].left></span><br><span class="line">    <span class="keyword">if</span>(tree[id].right<=r&&tree[id].left>=l) <span class="keyword">return</span> tree[id].sum;</span><br><span class="line">    <span class="keyword">if</span>(tree[id].flag!=<span class="number">-1</span>) downdata(id);</span><br><span class="line">    <span class="keyword">return</span> get(id<<<span class="number">1</span>,l,r)+get(id<<<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> id,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(tree[id].right<l||tree[id].left>r) <span class="keyword">return</span>;</l||tree[id].left></span><br><span class="line">    <span class="keyword">if</span>(tree[id].right<=r&&tree[id].left>=l)</span><br><span class="line">    {</span><br><span class="line">        tree[id].sum=(tree[id].right-tree[id].left+<span class="number">1</span>)*val;</span><br><span class="line">        tree[id].flag=val;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(tree[id].flag!=<span class="number">-1</span>) downdata(id);</span><br><span class="line">    update(id<<<span class="number">1</span>,l,r,val);update(id<<<span class="number">1</span>|<span class="number">1</span>,l,r,val);</span><br><span class="line">    tree[id].sum=tree[id<<<span class="number">1</span>].sum+tree[id<<<span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(top[u]!=top[v])</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(deep[top[u]]<deep[top[v]]) <span class="built_in">std</deep[top[v]])></span>::swap(u,v);<br><span class="line">        update(<span class="number">1</span>,tid[top[u]],tid[u],val);</span><br><span class="line">        u=father[top[u]];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(deep[u]>deep[v]) <span class="built_in">std</span>::swap(u,v);</span><br><span class="line">    update(<span class="number">1</span>,tid[u],tid[v],val);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    n=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">    {</span><br><span class="line">        x=read();x++;</span><br><span class="line">        add(x,i);</span><br><span class="line">    }</span><br><span class="line">    dfs1(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);dfs2(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    q=read();build(<span class="number">1</span>,<span class="number">1</span>,tidnum);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=q;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        x=read();x++;</span><br><span class="line">        <span class="keyword">int</span> t1=tree[<span class="number">1</span>].sum;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'i'</span>)</span><br><span class="line">        {</span><br><span class="line">            change(<span class="number">1</span>,x,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> t2=tree[<span class="number">1</span>].sum;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="built_in">abs</span>(t2-t1));</span><br><span class="line">            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'u'</span>)</span><br><span class="line">        {</span><br><span class="line">            update(<span class="number">1</span>,tid[x],tid[x]+size[x]<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> t2=tree[<span class="number">1</span>].sum;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="built_in">abs</span>(t1-t2));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Luogu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithms </tag>
            
            <tag> 树链剖分 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>luogu P2349 金字塔</title>
      <link href="/2020/02/luogu-2349/"/>
      <url>/2020/02/luogu-2349/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><blockquote><p><a href="https://www.luogu.com.cn/problem/P2349" target="_blank" rel="noopener">题目链接</a></p></blockquote><h1 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h1><p>有一盗墓者潜入一金字塔盗宝。当她（难道是Lara Croft ?）打开一个宝箱的时候，突然冒出一阵烟（潘多拉的盒子？），她迅速意识到形势不妙，三十六计走为上计……由于她盗得了金字塔的地图，所以她希望能找出最佳逃跑路线。地图上标有N个室，她现在就在1室，金字塔的出口在N室。她知道一个秘密：那阵烟会让她在直接连接某两个室之间的通道内的行走速度减半。她希望找出一条逃跑路线，使得在最坏的情况下所用的时间最少。</p><h1 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h1><p><strong>这道题可以用A*来做</strong></p><p>估价函数由两个值组成：该节点到终点的最短距离和当前已经经过路径的最大值（在代码里估价函数为g，实际距离为step，当前节点位置为x，已经经过路径的边权的最大值为maxx）</p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < queue></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> to,next,dis;</span><br><span class="line">} edge[maxn<<<span class="number">1</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> g,step,maxx,x;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> < (node xx) <span class="keyword">const</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> xx.g<g;< span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>,head[maxn],n,m,a,b,c,dist[maxn];</span><br><span class="line"><span class="keyword">bool</span> visit[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge[++k].to=v;</span><br><span class="line">    edge[k].next=head[u];</span><br><span class="line">    edge[k].dis=w;</span><br><span class="line">    head[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x7f7f7f7f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    <span class="built_in">queue</span><<span class="keyword">int</span>> q;visit[n]=<span class="literal">true</span>;q.push(n);dist[n]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> x=q.front();q.pop();visit[x]=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(dist[edge[i].to]>dist[x]+edge[i].dis)</span><br><span class="line">            {</span><br><span class="line">                dist[edge[i].to]=dist[x]+edge[i].dis;</span><br><span class="line">                <span class="keyword">if</span>(!visit[edge[i].to])</span><br><span class="line">                {</span><br><span class="line">                    visit[edge[i].to]=<span class="literal">true</span>;</span><br><span class="line">                    q.push(edge[i].to);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Astar</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    priority_queue<node> q;node temp;temp.step=<span class="number">0</span>;</node></span><br><span class="line">    temp.g=dist[<span class="number">1</span>];temp.maxx=<span class="number">0</span>;temp.x=<span class="number">1</span>;q.push(temp);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    {</span><br><span class="line">        node now=q.top();q.pop();</span><br><span class="line">        <span class="keyword">if</span>(now.x==n)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,now.step+now.maxx);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[now.x];i;i=edge[i].next)</span><br><span class="line">        {</span><br><span class="line">            temp.step=now.step+edge[i].dis;</span><br><span class="line">            temp.maxx=max(now.maxx,edge[i].dis);</span><br><span class="line">            temp.g=temp.step+temp.maxx+dist[edge[i].to];</span><br><span class="line">            temp.x=edge[i].to;q.push(temp);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=m;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&a,&b,&c);</span><br><span class="line">        add(a,b,c);add(b,a,c);</span><br><span class="line">    }</span><br><span class="line">    spfa();</span><br><span class="line">    Astar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></g;<></span></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Luogu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> A* </tag>
            
            <tag> 图论 </tag>
            
            <tag> 最短路 </tag>
            
            <tag> 优先队列 </tag>
            
            <tag> algorithms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>luogu P2921 [USACO08DEC]在农场万圣节Trick or Treat on the Farm</title>
      <link href="/2020/02/luogu-2921/"/>
      <url>/2020/02/luogu-2921/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><blockquote><p><a href="https://www.luogu.com.cn/problem/P2921" target="_blank" rel="noopener">题目链接</a></p></blockquote><h1 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h1><p>每年，在威斯康星州，奶牛们都会穿上衣服，收集农夫约翰在N(1<=N<=100000)个牛棚隔间中留下的糖果，以此来庆祝美国秋天的万圣节。</p><p>由于牛棚不太大，FJ通过指定奶牛必须遵循的穿越路线来确保奶牛的乐趣。为了实现这个让奶牛在牛棚里来回穿梭的方案，FJ在第i号隔间上张贴了一个“下一个隔间”Next_i(1<=Next_i<=N)，告诉奶牛要去的下一个隔间；这样，为了收集它们的糖果，奶牛就会在牛棚里来回穿梭了。</p><p>FJ命令奶牛i应该从i号隔间开始收集糖果。如果一只奶牛回到某一个她已经去过的隔间，她就会停止收集糖果。</p><p>在被迫停止收集糖果之前，计算一下每头奶牛要前往的隔间数（包含起点）。</p><h1 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h1><p>此题也可以用tarjan缩点<br>由题意可得每个牛到了一个牛棚后下一个只能去后继牛棚</p><p>那么我们可以用tarjan先预处理出来，然后再用记忆化搜索统计答案</p><p><strong>一定要用记忆化搜索，否则会超时6个点</strong></p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < queue ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,x,k=<span class="number">0</span>,head[maxn],dfn[maxn],low[maxn],color_num=<span class="number">0</span>,dfs_num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> visit[maxn];<span class="keyword">int</span> ans[maxn];</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">stack</span>[maxn],top=<span class="number">0</span>,val[maxn],head_new[maxn],color[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> to,next;</span><br><span class="line">} edge[maxn<<<span class="number">1</span>],edge_new[maxn<<<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge[++k].to=v;</span><br><span class="line">    edge[k].next=head[u];</span><br><span class="line">    head[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    dfn[x]=low[x]=++dfs_num;</span><br><span class="line">    visit[x]=<span class="literal">true</span>;<span class="built_in">stack</span>[++top]=x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(!dfn[edge[i].to])</span><br><span class="line">        {</span><br><span class="line">            tarjan(edge[i].to);</span><br><span class="line">            low[x]=min(low[x],low[edge[i].to]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(visit[edge[i].to]) low[x]=min(low[x],dfn[edge[i].to]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(low[x]==dfn[x])</span><br><span class="line">    {</span><br><span class="line">        visit[x]=<span class="literal">false</span>;color_num++;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">stack</span>[top+<span class="number">1</span>]!=x)</span><br><span class="line">        {</span><br><span class="line">            val[color_num]++;</span><br><span class="line">            visit[<span class="built_in">stack</span>[top]]=<span class="literal">false</span>;</span><br><span class="line">            color[<span class="built_in">stack</span>[top]]=color_num;</span><br><span class="line">            top--;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_new</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge_new[++k].to=v;</span><br><span class="line">    edge_new[k].next=head_new[u];</span><br><span class="line">    head_new[u]=k;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(ans[x]) <span class="keyword">return</span>;</span><br><span class="line">    ans[x]+=val[x];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head_new[x];i;i=edge_new[i].next)</span><br><span class="line">    {</span><br><span class="line">        dfs(edge_new[i].to);</span><br><span class="line">        ans[x]+=ans[edge_new[i].to];</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&x);</span><br><span class="line">        add(i,x);</span><br><span class="line">    }</span><br><span class="line">    k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="keyword">if</span>(!dfn[i]) tarjan(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=head[i];j;j=edge[j].next)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(color[i]!=color[edge[j].to])</span><br><span class="line">            {</span><br><span class="line">                add_new(color[i],color[edge[j].to]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) dfs(color[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[color[i]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Luogu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> algorithms </tag>
            
            <tag> 搜索 </tag>
            
            <tag> 缩点 </tag>
            
            <tag> tarjan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Luogu P3467 [POI2008]PLA-Postering</title>
      <link href="/2020/02/luogu-3467/"/>
      <url>/2020/02/luogu-3467/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><blockquote><p><a href="https://www.luogu.com.cn/problem/P3467" target="_blank" rel="noopener">题目链接</a></p></blockquote><h1 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h1><p>Byteburg市东边的建筑都是以旧结构形式建造的:建筑互相紧挨着,之间没有空间.它们共同形成了一条长长的,从东向西延伸的建筑物链(建筑物的高度不一).Byteburg市的市长Byteasar,决定将这个建筑物链的一侧用海报覆盖住.并且想用最少的海报数量,海报是矩形的.海报与海报之间不能重叠,但是可以相互挨着(即它们具有公共边),每一个海报都必须贴近墙并且建筑物链的整个一侧必须被覆盖(意思是:海报需要将一侧全部覆盖,并且不能超出建筑物链)</p><h1 id="题解"><a class="markdownIt-Anchor" href="#题解"></a> 题解</h1><p><strong>这道题是单调栈的入门经典题</strong></p><p>我们发现：答案与宽度是没有关系的，于是我们只需要按高度维护一个单调递增的栈。</p><p>如果发现当前高度已经在栈中，就不需要另外一张海报了。</p><p>于是用一个ans变量记录一下，最后用总海报数减去不需要另外的海报数便是答案。</p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> < algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">250005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a[maxn],<span class="built_in">stack</span>[maxn],top=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d%lld"</span>,&x,&a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">while</span>(top&&<span class="built_in">stack</span>[top]>a[i]) top--;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">stack</span>[top]==a[i]) ans++;</span><br><span class="line">        <span class="built_in">stack</span>[++top]=a[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n-ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Luogu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithms </tag>
            
            <tag> 单调栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武汉大学新生寒假集训测试Day5 题解</title>
      <link href="/2020/02/whuwvttf-day5/"/>
      <url>/2020/02/whuwvttf-day5/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>哈哈哈封面图是题目描述里面的。本场比赛是HDU女生专场的clone。</p><h1 id="a"><a class="markdownIt-Anchor" href="#a"></a> A</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5702" target="_blank" rel="noopener">HDU - 5702</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>一次ACM中打气球的志愿者们比较蠢，某一道题提前打好的气球越多，意味着题目越水。<br>现在给出每道题打好的气球数，问你按照什么顺序做题，能够得以从易到难的顺序解决所有问题。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>直接开个结构体排序就好了。结果我一直PE，因为题目中说了不能有多余的空格，但是删掉所有多余的空格了还是不行，到最后都没有过。最后发现，必须要有多余的空行（什么鬼破题）</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">} a[maxn];</span><br><span class="line"><span class="keyword">int</span> T,n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span> </span>{<span class="keyword">return</span> a.x>b.x;}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%s%d"</span>,a[i].str,&a[i].x);</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(i==n) <span class="built_in">printf</span>(<span class="string">"%s"</span>,a[i].str);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%s "</span>,a[i].str);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="b"><a class="markdownIt-Anchor" href="#b"></a> B</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5704" target="_blank" rel="noopener">HDU - 5704</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>n（2~100）个人参加一个游戏，<br>每个人选择1~100范围的数。<br>然后得到所有数的平均数，再*=2/3，设得到的数为m。<br>如果一个人选的数，比m小，且相距m最为接近，那么其便在所有选数相同的人中等概率中奖。</p><p>现在，我们也参加比赛，其他n-1个人所选择的数也已经确定了，并且我们知道。<br>问你，选什么数拥有最高中奖率，并输出。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>直接枚举每一种情况，取最大值就好。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,a[maxn],cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>,maxx=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<n;i++)< span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">sum+=a[i];</span><br><span class="line">cnt[a[i]]++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<=<span class="number">100</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">double</span> k=(<span class="keyword">double</span>)sum+(<span class="keyword">double</span>)i;</span><br><span class="line">k/=(<span class="keyword">double</span>)n;</span><br><span class="line"><span class="keyword">double</span> m=k*<span class="number">2.0</span>/<span class="number">3.0</span>;</span><br><span class="line"><span class="keyword">if</span>(i<=<span class="built_in">floor</span>(m)) maxx=<span class="built_in">floor</span>(m);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %.2lf\n"</span>,maxx,<span class="number">1.0</span>/(cnt[maxx]+<span class="number">1.0</span>));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></n;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5706" target="_blank" rel="noopener">HDU - 5706</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>给一个n*m的由小写字母组成的字符地图，从某个点开始，每次沿着相邻的点走，如果从起点开始计数，连着走4步并且构成“girl”，那么girl数++；如果连着走3步并且构成“cat”，那么cat数++。请问图上有多少个girl和多少只cat。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>把每一个点作为起点开始搜索，直接dfs或bfs即可。这道题又吃了看错题意的亏……</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2005</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">5</span>]={<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>};</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">5</span>]={<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> n,m,T;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> cat,girl;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">4</span>)</span><br><span class="line">{</span><br><span class="line">girl++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">4</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> ddx=dx[i]+x,ddy=dy[i]+y;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">1</span>&&str[ddx][ddy]==<span class="string">'i'</span>) dfs1(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">2</span>&&str[ddx][ddy]==<span class="string">'r'</span>) dfs1(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">3</span>&&str[ddx][ddy]==<span class="string">'l'</span>) dfs1(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">3</span>)</span><br><span class="line">{</span><br><span class="line">cat++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">4</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> ddx=dx[i]+x,ddy=dy[i]+y;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">1</span>&&str[ddx][ddy]==<span class="string">'a'</span>) dfs2(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">2</span>&&str[ddx][ddy]==<span class="string">'t'</span>) dfs2(ddx,ddy,cnt+<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&m);cat=girl=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(str,<span class="number">0</span>,<span class="keyword">sizeof</span>(str));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str[i]+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=m;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(str[i][j]==<span class="string">'g'</span>) dfs1(i,j,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(str[i][j]==<span class="string">'c'</span>) dfs2(i,j,<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,girl,cat);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d"><a class="markdownIt-Anchor" href="#d"></a> D</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5710" target="_blank" rel="noopener">HDU - 5710</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>令s(n)为n的各位数之和，如n=12345时，s(n)=1+2+3+4+5=15。现在给定a，b，求找出最小的正整数n满足</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>×</mo><mi>s</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo>=</mo><mi>b</mi><mo>×</mo><mi>s</mi><mo stretchy="false">(</mo><mn>2</mn><mo>⋅</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>  </mtext><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>≤</mo><mn>100</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a\times s(n)==b\times s(2\cdot n)\;(1\leq a,b\leq100) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>转自：<a href="https://blog.csdn.net/qq_40875849/article/details/83053075" target="_blank" rel="noopener">qq_40875849</a></p><p><img alt="HDU5710" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/HDU5710.png" class="lazyload"></p><h1 id="e"><a class="markdownIt-Anchor" href="#e"></a> E</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2670" target="_blank" rel="noopener">HDU - 2670</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>有n个男生追一个女生，每个男生有一个相应的爱慕值Vx(i)，给定一个天数m，每天这个女生只能找一个女生，并且得到这个男生的爱慕值。每过一天，每个男生的爱慕值就会减少相应的 Vy(i)；问女生如何选择，m天之后，才能得到最大的爱慕值。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>好像是经典的背包问题，感觉很早很早之前做过。<br>一个男生要么选要么不选，可以看作只有0和1两种情况，所以直接做01背包即可。<br>但我们先按下降速度从大到小排序，因为如果这样的话保证了先选一定比后选优，也就是说如果之前都没选，那么后面也不可能选，保证了dp的无后效性原则。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2005</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn],n,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> {</span><span class="keyword">int</span> love,cost;} stu[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span> </span>{<span class="keyword">return</span> a.cost>b.cost;}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&stu[i].love);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&stu[i].cost);</span><br><span class="line">sort(stu+<span class="number">1</span>,stu+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=k;j;j--)</span><br><span class="line">f[j]=max(f[j],f[j<span class="number">-1</span>]+stu[i].love-stu[i].cost*(j<span class="number">-1</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[k]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f"><a class="markdownIt-Anchor" href="#f"></a> F</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2674" target="_blank" rel="noopener">HDU - 2674</a></p></blockquote><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>a</mi><mi>l</mi><mi>c</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>e</mi><mtext>  </mtext><mi>N</mi><mo stretchy="false">!</mo><mtext>  </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext>  </mtext><mn>2009</mn><mtext>  </mtext><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>H</mi><mi>i</mi><mi>n</mi><mi>t</mi><mtext>  </mtext><mo>:</mo><mtext>  </mtext><mn>0</mn><mo stretchy="false">!</mo><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mn>1</mn><mo separator="true">,</mo><mtext>  </mtext><mi>N</mi><mo stretchy="false">!</mo><mtext>  </mtext><mo>=</mo><mtext>  </mtext><mi>N</mi><mo>×</mo><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow><annotation encoding="application/x-tex">Calculate\;N!\;mod\;2009\;(0\leq N\leq10^9)\\Hint\;:\;0!\;=\;1,\;N!\;=\;N\times(N-1)! </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span></span></p><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><p>显然2009的倍数mod上2009等于0，那么当计算到2009的阶乘时，答案就已经为0了，而0乘任何数都等于0，所以当N > 2009时，直接输出0就好了。</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> fac[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">fac[<span class="number">0</span>]=fac[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">2</span>;i<maxn;i++)< span><br><span class="line">{</span><br><span class="line">fac[i]=i*fac[i<span class="number">-1</span>];</span><br><span class="line">fac[i]%=<span class="number">2009</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(n>=<span class="number">2009</span>) <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%llu\n"</span>,fac[n]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></maxn;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="g"><a class="markdownIt-Anchor" href="#g"></a> G</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2672" target="_blank" rel="noopener">HDU - 2672</a></p></blockquote><h2 id="题目大意-7"><a class="markdownIt-Anchor" href="#题目大意-7"></a> 题目大意</h2><p>GDJIJ,EL SSJT UT YWOSQNIVZMI. -> HELLO,MY NAME IS LINDAINVERS.<br>CN WLP JRVMFGQ BVR,IJCFI? -> DO YOU REQUIRE AID,HUMAN?<br>NMAB VYNNF, FI’E VC HP IXJ ZLQZI. -> ONCE AGAIN, IT’S UP TO THE ELVES.<br>SGC CGGJX GC BMHVQ BGU BCIHNYNBX GNPLV! -> THE FLOWS OF MAGIC ARE WHIMSICAL TODAY!</p><p>输入一个字符串，根据以上规律解码后输出。</p><h2 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h2><p>什么条件都没给，肯定和字符串字母变换直接有关。先写了一个打表程序，看了一下解码串与原串的ascii码差，发现是斐波拉契数列。于是，直接模拟就好了，注意空格和非大写字母字符不转码。</p><h2 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< string ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< iostream ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line">a[<span class="number">1</span>]=<span class="number">1</span>;a[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i<maxn;i++) a[i]="a[i<span" class="number">-1</maxn;i++)></span>]+a[i<span class="number">-2</span>],a[i]%=<span class="number">26</span>;<br><span class="line"><span class="keyword">while</span>(getline(<span class="built_in">cin</span>,s))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> len=s.length(),cnt=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<len;i++)< span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(s[i]<<span class="string">'A'</span>||s[i]><span class="string">'Z'</span>) <span class="built_in">cout</span><<s[i];< span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">s[i]=<span class="string">'A'</span>+(s[i]+a[cnt]-<span class="string">'A'</span>)%<span class="number">26</span>;</span><br><span class="line"><span class="built_in">cout</span><<s[i];< span><br><span class="line">cnt++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">s.clear();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></s[i];<></span></s[i];<></span></len;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="h"><a class="markdownIt-Anchor" href="#h"></a> H</h1><blockquote><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5707" target="_blank" rel="noopener">HDU - 5707</a></p></blockquote><h2 id="题目大意-8"><a class="markdownIt-Anchor" href="#题目大意-8"></a> 题目大意</h2><p>给定a，b，c三个串，问c能否按序分成a和b串，不要求连续。</p><h2 id="思路-8"><a class="markdownIt-Anchor" href="#思路-8"></a> 思路</h2><p>首先想到扫两遍，但这样会有问题，因为比如aaa，daf，adafaa，就会发现第一遍扫的时候，占用了前面的一个a，导致了第二遍匹配失败。<br>既然这样不行，要保证无后效性，那显然就是dp了，用f[i][j]表示a串的i个位置和b串的j个位置能否匹配到c串的i+j个位置。那么转移也就是从i-1或者j-1转移而来了。</p><h2 id="代码-7"><a class="markdownIt-Anchor" href="#代码-7"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2005</span>;</span><br><span class="line"><span class="keyword">char</span> s1[maxn],s2[maxn],s3[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt[maxn],cnt2[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn],f[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>,s2+<span class="number">1</span>,s3+<span class="number">1</span>,s1+<span class="number">1</span>))</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line"><span class="built_in">memset</span>(cnt2,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt2));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">true</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="literal">false</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">int</span> l1=<span class="built_in">strlen</span>(s1+<span class="number">1</span>),l2=<span class="built_in">strlen</span>(s2+<span class="number">1</span>),l3=<span class="built_in">strlen</span>(s3+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=l1;i++) cnt[s1[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=l2;i++) cnt2[s2[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=l3;i++) cnt2[s3[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<maxn;i++)< span><br><span class="line"><span class="keyword">if</span>(cnt[i]!=cnt2[i]) flag=<span class="literal">false</span>;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<=l2;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j<=l3;j++)</span><br><span class="line">{</span><br><span class="line"><span class="comment">//i:l2 j:l3</span></span><br><span class="line"><span class="keyword">if</span>(i&&f[i<span class="number">-1</span>][j]&&s2[i]==s1[i+j]) f[i][j]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(j&&f[i][j<span class="number">-1</span>]&&s3[j]==s1[i+j]) f[i][j]=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(l2+l3!=l1) flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(!f[l2][l3]) flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></maxn;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>难度不大，但是那个PE真的把我坑惨了……以后要多试试，因为你根本不知道出题人想让你干什么。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day5.jpg" class="lazyload"></p></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> HDU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithms </tag>
            
            <tag> 搜索 </tag>
            
            <tag> contests </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 思维 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 枚举 </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 背包 </tag>
            
            <tag> 规律 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武汉大学新生寒假集训测试Day4 题解</title>
      <link href="/2020/02/whuwvttf-day4/"/>
      <url>/2020/02/whuwvttf-day4/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="a"><a class="markdownIt-Anchor" href="#a"></a> A</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1065/D" target="_blank" rel="noopener">Educational Codeforces Round 52 (Rated for Div. 2)</a></p></blockquote><p>还没做，待补。</p><h1 id="b"><a class="markdownIt-Anchor" href="#b"></a> B</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1059/D" target="_blank" rel="noopener">Codeforces Round #514 (Div. 2)</a></p></blockquote><p>待补……</p><h1 id="c"><a class="markdownIt-Anchor" href="#c"></a> C</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1065/C" target="_blank" rel="noopener">Educational Codeforces Round 52 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p><img alt="CF1065C" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF1065C.jpg" class="lazyload"><br>给出一个数组，如上图，a[x] = y表示在第x列中有y个1x1的正方形，我们每次可以沿着平行于x轴切一刀，舍弃上面部分，且舍弃部分的面积要小于k，求最少多少步可以切到所有列正方形数相同。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>简单的模拟，我们按照题意从上往下切就好了。用前缀和预处理出每一行的正方形数，因为只能平行于x轴切，所以这一行要么整体能切掉，要么就不能切掉。而且相同的正方形数一定是n。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,a[maxn],sum[maxn],maxx=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">maxx=max(maxx,a[i]);</span><br><span class="line">sum[a[i]]++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=maxx;i;i--) sum[i]+=sum[i+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=maxx;i;i--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(sum[i]==n)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(res<sum[i]) ans++,res="k-sum[i];</span"><br><span class="line"><span class="keyword">else</span> res-=sum[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></sum[i])></span></pre></td></tr></tbody></table></figure></div><h1 id="d"><a class="markdownIt-Anchor" href="#d"></a> D</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1059/C" target="_blank" rel="noopener">Codeforces Round #514 (Div. 2)</a></p></blockquote><p>待补……</p><h1 id="e"><a class="markdownIt-Anchor" href="#e"></a> E</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1065/B" target="_blank" rel="noopener">Educational Codeforces Round 52 (Rated for Div. 2))</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给出n个点和m条边，构成若干个图，每个图不能有重边和自环，求最多和最少的孤立顶点。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><ul><li>最少：既然要求孤立顶点最少，那么就要求每加入一个点，要用去最多的边。其实就是保证尽可能构成完全图，所以找到k*(k-1)/2>=m的最小k，剩下的点都是孤立顶点了。</li><li>最多：一条边可以连2个点，2条边最多只能连3个点，……，显然每条边都连2个没有与其他边相连的点消耗的边最多。</li></ul><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&n,&m);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> minn=max(n-m*<span class="number">2</span>,<span class="number">0l</span>l),maxx;</span><br><span class="line"><span class="keyword">if</span>(!m) maxx=n;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> now=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(m><span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">m-=now;</span><br><span class="line">now++;</span><br><span class="line">}</span><br><span class="line">maxx=n-now;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,minn,maxx);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f"><a class="markdownIt-Anchor" href="#f"></a> F</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1059/B" target="_blank" rel="noopener">Codeforces Round #514 (Div. 2)</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>模拟，用形如下图的印章，再给出一个由“.”和"x"组成的形状，判断能否用下图的印章印出给定的形状（可以印无数次）（“ . ”代表“空”）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mi>x</mi><mi>x</mi><mspace linebreak="newline"></mspace><mi>x</mi><mi mathvariant="normal">.</mi><mi>x</mi><mspace linebreak="newline"></mspace><mi>x</mi><mi>x</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">x x x \\ x . x \\ x x x </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord">.</span><span class="mord mathdefault">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span><span class="mord mathdefault">x</span></span></span></span></span></p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>另开一张图，对于原图的一个点（无论是".“还是"x”，只要它周围八个点都是"x"，那就在新图上以这个点的坐标为中心盖一个章，最后判断新图和原图是否相同，若相同，那么就可以；反之则不行。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2005</span>;</span><br><span class="line"><span class="keyword">char</span> a[maxn][maxn],<span class="built_in">map</span>[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">9</span>]={<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>};</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">9</span>]={<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>};</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">8</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(a[x+dx[i]][y+dy[i]]!=<span class="string">'#'</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">8</span>;i++) <span class="built_in">map</span>[x+dx[i]][y+dy[i]]=<span class="string">'#'</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,a[i]+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=m;j++) <span class="built_in">map</span>[i][j]=<span class="string">'.'</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<n;i++)< span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j<m;j++)< span><br><span class="line"><span class="keyword">if</span>(judge(i,j)) work(i,j);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=m;j++)</span><br><span class="line"><span class="keyword">if</span>(a[i][j]!=<span class="built_in">map</span>[i][j]) <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>),<span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></m;j++)<></span></n;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="g"><a class="markdownIt-Anchor" href="#g"></a> G</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1059/A" target="_blank" rel="noopener">Codeforces Round #514 (Div. 2)</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>定义一天的长度为L,每次休息的时间为a,有n个客人，t_i​表示他在这一天到来的时间，l_i表示他到来以后持续占用的时间。保证</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>+</mo><msub><mi>l</mi><mi>i</mi></msub><mo>≤</mo><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">t_i+l_i\leq t_{i+1} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8234109999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>问最多能休息的次数。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>程序设计入门题。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,l,a,b[maxn],c[maxn],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&n,&l,&a);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&b[i],&c[i]);</span><br><span class="line">b[n+<span class="number">1</span>]=l;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t=b[i+<span class="number">1</span>]-b[i]-c[i];</span><br><span class="line">ans+=t/a;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="h"><a class="markdownIt-Anchor" href="#h"></a> H</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1065/A" target="_blank" rel="noopener">Educational Codeforces Round 52 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>在一个超市，顾客每购买a个巧克力棒，就会送b个巧克力棒。现在Vasya有s卢布，每个巧克力棒的价格是c卢布。求Vasya最多可以得到多少个巧克力棒。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>程序设计入门题。</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s,a,b,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld"</span>,&s,&a,&b,&c);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=s/(a*c)*b;</span><br><span class="line">ans+=s/c;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>题目顺序和难度真的是一点关系都没有。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day4.jpg" class="lazyload"></p></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithms </tag>
            
            <tag> 搜索 </tag>
            
            <tag> contests </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 思维 </tag>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武汉大学新生寒假集训测试Day3 题解</title>
      <link href="/2020/02/whuwvttf-day3/"/>
      <url>/2020/02/whuwvttf-day3/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="a-personalized-cup"><a class="markdownIt-Anchor" href="#a-personalized-cup"></a> A - Personalized Cup</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1079/C" target="_blank" rel="noopener">Codeforces Round #522 (Div. 2, based on Technocup 2019 Elimination Round 3)</a></p></blockquote><p>还没做，待补。</p><h1 id="b-playing-piano"><a class="markdownIt-Anchor" href="#b-playing-piano"></a> B - Playing Piano</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1079/C" target="_blank" rel="noopener">Codeforces Round #522 (Div. 2, based on Technocup 2019 Elimination Round 3)</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>给定一组序列a[i]，求一组序列b[i]，b[i]满足b[i]的数值不超过5，且如果a[i] < a[i+1]则b[i] < b[i+1]，如果a[i] > a[i+1]则b[i] > b[i+1]，如果a[i]=a[i+1]则b[i]!=b[i+1]，如果不存在这样的b[i]序列，则输出-1。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>记忆化搜索。不知道不加记忆化能不能过。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">400005</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],ans[maxn],temp[maxn];</span><br><span class="line"><span class="keyword">int</span> f[maxn][<span class="number">6</span>];</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(x==n+<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) ans[i]=temp[i];</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">5</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!f[x+<span class="number">1</span>][i]) <span class="keyword">continue</span>;</span><br><span class="line">temp[x]=i;</span><br><span class="line">f[x+<span class="number">1</span>][i]=dfs(x+<span class="number">1</span>,i);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[x]>a[x<span class="number">-1</span>])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=last+<span class="number">1</span>;i<=<span class="number">5</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!f[x+<span class="number">1</span>][i]) <span class="keyword">continue</span>;</span><br><span class="line">temp[x]=i;</span><br><span class="line">f[x+<span class="number">1</span>][i]=dfs(x+<span class="number">1</span>,i);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[x]<a[x<span class="number">-1</a[x<span></span>])<br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<last;i++)< span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!f[x+<span class="number">1</span>][i]) <span class="keyword">continue</span>;</span><br><span class="line">temp[x]=i;</span><br><span class="line">f[x+<span class="number">1</span>][i]=dfs(x+<span class="number">1</span>,i);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[x]==a[x<span class="number">-1</span>])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">5</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(i==last) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(!f[x+<span class="number">1</span>][i]) <span class="keyword">continue</span>;</span><br><span class="line">temp[x]=i;</span><br><span class="line">f[x+<span class="number">1</span>][i]=dfs(x+<span class="number">1</span>,i);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!flag) <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>),<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></last;i++)<></span></pre></td></tr></tbody></table></figure></div><h1 id="c-a-prank"><a class="markdownIt-Anchor" href="#c-a-prank"></a> C - A Prank</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1062/A" target="_blank" rel="noopener">Codeforces Round #520 (Div. 2)</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>有保证递增的n个数组成的序列</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mtext>  </mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mtext>  </mtext><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mi>n</mi></msub><mtext>  </mtext><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><msub><mi>a</mi><mn>1</mn></msub><mo><</mo><msub><mi>a</mi><mn>2</mn></msub><mo><</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo><</mo><msub><mi>a</mi><mi>n</mi></msub><mo>≤</mo><mn>1000</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_1,\;a_2,\;...\;,\;a_n\;(1\leq a_1<a_2<...<a_n\leq1000) < annotation></a_2<...<a_n\leq1000)></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p><p>现在要抹去连续的几个数，求最长能抹去多少个数，能根据剩下的数推断出原序列。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>显然，如果能找回来，那么删去的数的值是连续的。直接找出值连续的序列的最长长度，注意因为值是大于0小于等于1000的，所以如果最后一个数是1000或者第一个数是1，是可以删去的。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">0</span>;a[n+<span class="number">1</span>]=<span class="number">1001</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n+<span class="number">1</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[i]==a[i<span class="number">-1</span>]+<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(a[i]==a[i<span class="number">-1</span>]+<span class="number">1</span>) i++,temp++;</span><br><span class="line">ans=max(ans,temp);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">ans=max(ans,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="d-fun-with-integers"><a class="markdownIt-Anchor" href="#d-fun-with-integers"></a> D - Fun with Integers</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1062/D" target="_blank" rel="noopener">Codeforces Round #520 (Div. 2)</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>给你一个正整数n，(2≤n≤100000)，选一个数a，(2≤∣a∣≤n)，每次再选一个整数b，(2≤∣b∣≤n)，并且使得存在整数x，满足1 < ∣x∣且(a⋅x=b或b⋅x=a)，a就可以转换为b，并且获得∣x∣的分数，但是之后就不能使用a转换为b或b再转换为a的操作了，求得到分数的最大值。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>枚举所有成k倍数的a，b，答案就是k*4的和。<br>为什么呢？<br>以一对正整数a，b (a < b)为例：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>×</mo><mi>k</mi><mo>=</mo><mi>b</mi><mspace linebreak="newline"></mspace><mi>a</mi><mo>×</mo><mo stretchy="false">(</mo><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>b</mi><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo>×</mo><mi>k</mi><mo>=</mo><mo>−</mo><mi>b</mi><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\times k=b\\a\times(-k)=-b\\(-a)\times k=-b\\(-a)\times(-k)=b </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span></span></p><p>答案就很显然了。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;i*j<=n;j++)</span><br><span class="line">{</span><br><span class="line">ans+=j*<span class="number">4</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="e-banh-mi"><a class="markdownIt-Anchor" href="#e-banh-mi"></a> E - Banh-mi</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1062/C" target="_blank" rel="noopener">Codeforces Round #520 (Div. 2)</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>给出一个长度为n的01串。<br>每次可以选择获得并删除一个位置位置上的值 x，并且会使其他位置的值加上 x 。现在给出m个询问，每个询问是一个区间[l , r] ,在这个范围内能获得的最大价值是多少。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>如果我们先删去值为0的位置，那么对于其他位置的贡献始终为0，显然是最差解。<br>所以我们每次删去所有值中最大的值，这样就能保证其他位置全部加上这个最大的值，也就保证了答案最优。<br>用快速幂计算等比数列即可（做这道题的时候等比数列的公式我都忘了2333）。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x&(-x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],c[maxn],q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span> </span>{<span class="keyword">for</span>(<span class="keyword">int</span> i=x;i<=n;i+=lowbit(i)) c[i]+=v;}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{<span class="keyword">int</span> t=<span class="number">0</span>;<span class="keyword">for</span>(<span class="keyword">int</span> i=x;i;i-=lowbit(i)) t+=c[i];<span class="keyword">return</span> t;}</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">poww</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(k&<span class="number">1</span>) temp=(temp*x)%mod;</span><br><span class="line">x=(x*x)%mod;</span><br><span class="line">k>>=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&q);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%1d"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) add(i,a[i]);</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&l,&r);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum=get(r)-get(l<span class="number">-1</span>);</span><br><span class="line"><span class="comment">//printf("$$%d\n",sum);</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> zero=r-l+<span class="number">1</span>-sum;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s=poww(<span class="number">2l</span>l,zero);</span><br><span class="line"><span class="comment">//printf("**%lld\n",zero);</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=-(<span class="number">1</span>-poww(<span class="number">2</span>,sum));</span><br><span class="line"><span class="comment">//printf("@@%lld\n",ans);</span></span><br><span class="line">ans=ans*s;</span><br><span class="line">ans%=mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f-barcelonian-distance"><a class="markdownIt-Anchor" href="#f-barcelonian-distance"></a> F - Barcelonian Distance</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1079/D" target="_blank" rel="noopener">Codeforces Round #522 (Div. 2, based on Technocup 2019 Elimination Round 3)</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>给出一条二维平面上的直线和两个点A、B，问从A点走到B点的最短路径长度。<br>点只能在给定直线和与坐标轴平行的直线上行走。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p><img alt="CF1079D_sol" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/problems/CF1079D_sol.jpg" class="lazyload"></p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cmath ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">double</span> a,b,c,sx,sy,tx,ty;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dis</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y,<span class="keyword">double</span> xx,<span class="keyword">double</span> yy)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((xx-x)*(xx-x)+(yy-y)*(yy-y));</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf%lf%lf%lf"</span>,&a,&b,&c,&sx,&sy,&tx,&ty);</span><br><span class="line"><span class="keyword">double</span> lsx=-(b*sy+c)/a;</span><br><span class="line"><span class="keyword">double</span> lsy=-(a*sx+c)/b;</span><br><span class="line"><span class="keyword">double</span> ltx=-(b*ty+c)/a;</span><br><span class="line"><span class="keyword">double</span> lty=-(a*tx+c)/b;</span><br><span class="line"><span class="keyword">double</span> ans=<span class="built_in">fabs</span>(tx-sx)+<span class="built_in">fabs</span>(ty-sy);</span><br><span class="line">ans=min(ans,<span class="built_in">fabs</span>(lsy-sy)+dis(sx,lsy,tx,lty)+<span class="built_in">fabs</span>(lty-ty));</span><br><span class="line">ans=min(ans,<span class="built_in">fabs</span>(lsy-sy)+dis(sx,lsy,ltx,ty)+<span class="built_in">fabs</span>(ltx-tx));</span><br><span class="line">ans=min(ans,<span class="built_in">fabs</span>(lsx-sx)+dis(lsx,sy,tx,lty)+<span class="built_in">fabs</span>(lty-ty));</span><br><span class="line">ans=min(ans,<span class="built_in">fabs</span>(lsx-sx)+dis(lsx,sy,ltx,ty)+<span class="built_in">fabs</span>(ltx-tx));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="g-diverse-substring"><a class="markdownIt-Anchor" href="#g-diverse-substring"></a> G - Diverse Substring</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1079/A" target="_blank" rel="noopener">Codeforces Round #522 (Div. 2, based on Technocup 2019 Elimination Round 3)</a></p></blockquote><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p>国王邀请k个人来赴宴就餐，每个人都吃了好几道菜（菜的数量对每个人来说都一样），每道菜都配有一套新的厨具。每一套器具都是一样的，由不同类型的器具组成，所有种类的器皿都由1到100编号。每一类器具最多在一道菜只能出现一次。晚餐结束后，客人们都被打发走了，国王想知道能多少餐具被偷。不幸的是，国王忘记了每一位客人有多少菜，但他知道晚餐后剩下的所有餐具的清单。求出丢失餐具的最小数量。</p><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><p>找出个数最多的餐具数量maxx，因为每个人的餐具数量是相同的，所以maxx应该能被k整除，如果不能整除，说明一定存在拿走了的情况，题目又要保证丢失餐具数量最少，所以maxx取比最初maxx大且是k的倍数的值。那么maxx*餐具种类type就是最小的总数量，再减去剩下n个餐具得到的就是被偷走的餐具数量。</p><h2 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cmath ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,cnt[maxn],maxx=<span class="number">0</span>,types=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&x);</span><br><span class="line">cnt[x]++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">100</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!cnt[i]) <span class="keyword">continue</span>;</span><br><span class="line">types++;</span><br><span class="line">maxx=max(cnt[i],maxx);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(maxx%k) maxx++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,maxx*types-n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="h-math"><a class="markdownIt-Anchor" href="#h-math"></a> H - Math</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1062/B" target="_blank" rel="noopener">Codeforces Round #520 (Div. 2)</a></p></blockquote><h2 id="题目大意-7"><a class="markdownIt-Anchor" href="#题目大意-7"></a> 题目大意</h2><p>输入一个数，可以对这个数进行两种操作：</p><ol><li>乘以任何一个数 x</li><li>如果这个数为平方数（4，9，16，25…），可以对这个数开根号。</li></ol><p>求经过若干次操作后，这个数最小能变成哪个数？并输出最少的变换次数。</p><h2 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h2><ul><li>第一问：最小能变成哪个数就直接是所有质因数的乘积，这应该很好理解。</li><li>第二问：如果所有的质因数的个数都是2的n次方，那么显然直接开n-1次根就好了。那如果不是以上情况怎么办呢？就再乘上一个数变成那样就好了，因为没有限制乘什么数，所以乘法一步到位是合法且最优的。</li></ul><h2 id="代码-7"><a class="markdownIt-Anchor" href="#代码-7"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cmath ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000005</span>;</span><br><span class="line"><span class="keyword">int</span> num[maxn],cnt=<span class="number">0</span>,n,a[maxn],ans=<span class="number">1</span>,maxx=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>) num[++cnt]=i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=cnt;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(n&&n%num[i]==<span class="number">0</span>) ans*=num[i];</span><br><span class="line"><span class="keyword">while</span>(n&&n%num[i]==<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">a[i]++;</span><br><span class="line">n/=num[i];</span><br><span class="line">maxx=max(maxx,a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(!n) <span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,ans);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<=<span class="number">30</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>((<span class="number">1</span><<i)>=maxx)</i)></span><br><span class="line">{</span><br><span class="line">tt=i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">bool</span> f=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=cnt;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!a[i]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i]!=(<span class="number">1</span><<tt)) f="<span" class="literal">true</tt))></span>;<br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(f) tt++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tt);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>一切看起来不可做的题都有巧妙的解法。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day3.jpg" class="lazyload"></p></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithms </tag>
            
            <tag> 搜索 </tag>
            
            <tag> contests </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 思维 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 计算几何 </tag>
            
            <tag> 快速幂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武汉大学新生寒假集训测试Day2 题解</title>
      <link href="/2020/02/whuwvttf-day2/"/>
      <url>/2020/02/whuwvttf-day2/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="a-cutting-out"><a class="markdownIt-Anchor" href="#a-cutting-out"></a> A - Cutting Out</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1077/D" target="_blank" rel="noopener">Codeforces Round #521 (Div. 3)</a></p></blockquote><p>还没做，待补。</p><h1 id="b-vasya-and-books"><a class="markdownIt-Anchor" href="#b-vasya-and-books"></a> B - Vasya and Books</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1073/B" target="_blank" rel="noopener">Educational Codeforces Round 53 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>给出一个栈里书的编号，每次能拿出栈顶的一本书，每次询问拿出某本编号的书需要拿几次。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>水题，直接模拟。开一个指针记录取到哪里了。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],b[maxn],pos[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">pos[a[i]]=i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&b[i]);</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(pos[b[i]]>now)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,pos[b[i]]-now);</span><br><span class="line">now=pos[b[i]];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"0 "</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="c-vasya-and-robot"><a class="markdownIt-Anchor" href="#c-vasya-and-robot"></a> C - Vasya and Robot</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1073/C" target="_blank" rel="noopener">Educational Codeforces Round 53 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>给一串命令L、R、D、U，问是否到达终点(x,y)。可以改变任意字串的命令，改变长度为最远的-最近的+1；问最小的长度，或者不行就-1；</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>最开始理解错题意了，还没改，待补。</p><h1 id="d-frog-jumping"><a class="markdownIt-Anchor" href="#d-frog-jumping"></a> D - Frog Jumping</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1077/A" target="_blank" rel="noopener">Codeforces Round #521 (Div. 3)</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>水题。青蛙一共跳k次，跳第奇数次时跳到x+a位置，跳第偶数次时跳到x-b位置（x为当前位置），求跳k次之后青蛙的位置。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>直接算出来向左跳多远，向右跳多远，两个值带符号相加即可。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&a,&b,&k);</span><br><span class="line"><span class="keyword">if</span>(k&<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(k/<span class="number">2</span>)*(a-b)+a);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(k/<span class="number">2</span>)*(a-b));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="e-good-array"><a class="markdownIt-Anchor" href="#e-good-array"></a> E - Good Array</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1077/C" target="_blank" rel="noopener">Codeforces Round #521 (Div. 3)</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>有n个数，现在要去掉某个位置的数，使得剩下的序列钟当且仅当有一个数是其他所有数的和。独立检查所有项，输出答案个数和所有符合条件可以去掉的位置编号。</p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><p>预处理出3个值，前缀和、从左到右的前缀最大值、从右到左的后缀最大值，这样我们每次查询的时候都可以O(1)完成检查。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a[maxn],mx1[maxn],mx2[maxn],sum[maxn],ans[maxn],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) sum[i]=sum[i<span class="number">-1</span>]+a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) mx1[i]=max(mx1[i<span class="number">-1</span>],a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i>=<span class="number">0</span>;i--) mx2[i]=max(mx2[i+<span class="number">1</span>],a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tx=max(mx1[i<span class="number">-1</span>],mx2[i+<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ss=sum[n]-a[i]-tx;</span><br><span class="line"><span class="keyword">if</span>(tx==ss) ans[++cnt]=i;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,cnt);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=cnt;i++) <span class="built_in">printf</span>(<span class="string">"%lld "</span>,ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f-disturbed-people"><a class="markdownIt-Anchor" href="#f-disturbed-people"></a> F - Disturbed People</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1077/B" target="_blank" rel="noopener">Codeforces Round #521 (Div. 3)</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>对于一个给定的长度为n的01序列</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mtext>  </mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mtext>  </mtext><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1,\;a_2,\;...\;,\;a_n </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>如果存在</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo><</mo><mi>i</mi><mo><</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1<i<n < annotation></i<n></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></span></p><p>满足</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mtext>  </mtext><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_{i-1}=a_{i+1}=1,\;a_i=0 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>那么这个序列是不优美的,求最少需要将多少个1变为0,使得原序列变为优美的序列。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>贪心。如果遇到一个值为0的位置，两边的值都是1，那就要把右边的变成0以满足条件。并且显然这是最优的。</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!a[i]&&a[i<span class="number">-1</span>]&&a[i+<span class="number">1</span>])</span><br><span class="line">{</span><br><span class="line">a[i+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">ans++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="g-diverse-substring"><a class="markdownIt-Anchor" href="#g-diverse-substring"></a> G - Diverse Substring</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1073/A" target="_blank" rel="noopener">Educational Codeforces Round 53 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p>找一个字符串的子串中有没有任何字母个数不超过n/2的子串，有就输出，没有就输出No。</p><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><ul><li>我这种菜鸡只配暴力查找所有子串……</li><li>其实直接暴力判断相邻的两个字符是否相同，如果存在相邻的两个字符不同，即是答案。</li></ul><h2 id="代码笨蛋做法"><a class="markdownIt-Anchor" href="#代码笨蛋做法"></a> 代码(笨蛋做法)</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">char</span> str[maxn],s[maxn],ch[maxn];</span><br><span class="line"><span class="keyword">int</span> n,cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">memset</span>(ch,<span class="number">0</span>,<span class="keyword">sizeof</span>(ch));</span><br><span class="line"><span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>,mx=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j<=n;j++)</span><br><span class="line">{</span><br><span class="line">s[++k]=str[j];</span><br><span class="line">cnt[str[j]]++;</span><br><span class="line">mx=max(mx,cnt[str[j]]);</span><br><span class="line"><span class="keyword">if</span>(mx<=(<span class="keyword">double</span>)k/<span class="number">2.0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">1</span>;p<=k;p++) <span class="built_in">printf</span>(<span class="string">"%c"</span>,s[p]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="h-berland-fair"><a class="markdownIt-Anchor" href="#h-berland-fair"></a> H - Berland Fair</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1073/D" target="_blank" rel="noopener">Educational Codeforces Round 53 (Rated for Div. 2)</a></p></blockquote><h2 id="题目大意-7"><a class="markdownIt-Anchor" href="#题目大意-7"></a> 题目大意</h2><p>一个博览会有n个摊位，这些摊位围成一个圆圈，第i个摊位糖果的价格为ai，每个摊位都有无限数量的糖果出售。<br>有一个人带了T块钱去参观，他从1号摊位开始，依次顺时针参观，每到一个摊位，只要买得起，就买一个糖果。求他到一个糖果都买不起的时候，一共买了多少个糖果。</p><h2 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h2><p>想试一下暴力能不能过，然后优化了一下：每逛完一圈，就统计还可以完全相同地重复逛多少圈，然后就AC了……</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,money,a[maxn],ini=<span class="number">0</span>,cnt=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&n,&money);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&a[i]);</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span>(flag)</span><br><span class="line">{</span><br><span class="line">cnt=<span class="number">0</span>;ini=<span class="number">0</span>;flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[i]<=money-ini)</span><br><span class="line">{</span><br><span class="line">ini+=a[i];</span><br><span class="line">cnt++;</span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(!ini) <span class="keyword">break</span>;</span><br><span class="line">ans+=cnt*(money/ini);</span><br><span class="line">money-=ini*(money/ini);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>8道题明显感觉自己英语水平和算法水平都有点不小的问题。还有就是开题顺序一定要找对，不要一直纠缠在一道没有开对的题上。</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day2.png" class="lazyload"></p></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithms </tag>
            
            <tag> contests </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 思维 </tag>
            
            <tag> 二分答案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武汉大学新生寒假集训测试Day1 题解</title>
      <link href="/2020/02/whuwvttf-day1/"/>
      <url>/2020/02/whuwvttf-day1/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="a-vova-and-train"><a class="markdownIt-Anchor" href="#a-vova-and-train"></a> A - Vova and Train</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1066/A" target="_blank" rel="noopener">Codeforces Round #515 (Div. 3)</a></p></blockquote><h2 id="题目大意"><a class="markdownIt-Anchor" href="#题目大意"></a> 题目大意</h2><p>一条坐标轴上，1∼L上所有坐标是v的整数倍的地方有灯笼，但l∼r区间灯笼被挡着了看不见，求能看到多少灯笼？</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>签到题，l∼r区间把整个区间分成了两部分，答案就是1∼(l-1)和(r+1)∼L两个区间v的倍数的数的个数之和。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> len,v,l,r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&len,&v,&l,&r);</span><br><span class="line"><span class="keyword">int</span> ans1=(l<span class="number">-1</span>)/v;</span><br><span class="line"><span class="keyword">int</span> ans2=len/v-r/v;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans1+ans2);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="b-heaters"><a class="markdownIt-Anchor" href="#b-heaters"></a> B - Heaters</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1066/B" target="_blank" rel="noopener">Codeforces Round #515 (Div. 3)</a></p></blockquote><h2 id="题目大意-2"><a class="markdownIt-Anchor" href="#题目大意-2"></a> 题目大意</h2><p>一个由0,1组成的数组，0为空，1为热源，热源的范围是r，即a[i-r+1] ∼a[i+r-1]都可以被温暖。热源位置固定，但你可决定其用或者不用，若不可使全部的数组温暖，输出"-1"，若可以使全部的数组温暖，输出最小的打开的热源的数目。</p><h2 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h2><p>如果一个取暖器不开，那么必须保证这个取暖器能温暖的最右的位置必须由前面或者后面的取暖器温暖（需要各自满足条件）。因为要找最小的数量，我们就尽可能要选靠右的，直接上贪心就好了。</p><h2 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],n,r,cnt=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">} b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&r);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line"><span class="keyword">if</span>(a[i]) b[++cnt].l=i-r+<span class="number">1</span>,b[cnt].r=i+r<span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> last=<span class="number">1</span>,now=<span class="number">1</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span>(now<=n)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">bool</span> f=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span>(last<=cnt&&b[last].l<=now) last++,f=<span class="literal">true</span>;</span><br><span class="line">last--;</span><br><span class="line"><span class="keyword">if</span>(!f||now>b[last].r||last>cnt)</span><br><span class="line">{</span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">now=b[last].r+<span class="number">1</span>;</span><br><span class="line">ans++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>),<span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="c-many-equal-substrings"><a class="markdownIt-Anchor" href="#c-many-equal-substrings"></a> C - Many Equal Substrings</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1029/A" target="_blank" rel="noopener">Codeforces Round #506 (Div. 3)</a></p></blockquote><h2 id="题目大意-3"><a class="markdownIt-Anchor" href="#题目大意-3"></a> 题目大意</h2><p>构造最短长度的字符串str，使得恰好k个位置出现字符串s。</p><h2 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h2><p>模拟，不断枚举已经添加了的字符串中的某个位置作为起点继续添加，看能不能形成s，如果不能就回退，要注意一下回退的位置，代码也有些细节方面要注意。</p><h2 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">char</span> s[maxn],str[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&n,&k);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) str[i]=s[i];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> len=n;</span><br><span class="line"><span class="keyword">while</span>(cnt<k)< span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">1</span>;now++;</span><br><span class="line"><span class="keyword">while</span>(now<=len&&t<=n&&str[now]==s[t]) now++,t++;</span><br><span class="line"><span class="keyword">if</span>(now<=len)</span><br><span class="line">{</span><br><span class="line">now=now-t+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=t;i<=n;i++) str[now]=s[i],now++,len++;</span><br><span class="line">now=len-n+<span class="number">1</span>;</span><br><span class="line">cnt++;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>,str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></k)<></span></pre></td></tr></tbody></table></figure></div><h1 id="d-creating-the-contest"><a class="markdownIt-Anchor" href="#d-creating-the-contest"></a> D - Creating the Contest</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1029/B" target="_blank" rel="noopener">Codeforces Round #506 (Div. 3)</a></p></blockquote><h2 id="题目大意-4"><a class="markdownIt-Anchor" href="#题目大意-4"></a> 题目大意</h2><p>给出一个保证升序的数列，求最长上升子序列，要求子序列中的数满足：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>≤</mo><mn>2</mn><mo>⋅</mo><msub><mi>c</mi><mi>i</mi></msub><mtext>  </mtext><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo><</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_{i+1}\leq2\cdot c_i\;(1\leq i<n) < annotation></n)></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.844301em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><h2 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h2><ul><li>贪心</li></ul><p>很明显的贪心，如果相邻的两个数都不满足，那么肯定和之前的数也不满足。</p><ul><li>dp</li></ul><p>按照lis的方法做dp就好了，加一个if判断一下是否满足条件即可（实则就是贪心……）</p><h2 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200005</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],f[maxn],n,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&a[i]);</span><br><span class="line">f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(a[i]<=a[i<span class="number">-1</span>]*<span class="number">2</span>) f[i]=f[i<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> f[i]=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++) ans=max(ans,f[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="e-maximal-intersection"><a class="markdownIt-Anchor" href="#e-maximal-intersection"></a> E - Maximal Intersection</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1029/C" target="_blank" rel="noopener">Codeforces Round #506 (Div. 3)</a></p></blockquote><h2 id="题目大意-5"><a class="markdownIt-Anchor" href="#题目大意-5"></a> 题目大意</h2><p>有n个区间，从这n个区间里面删去一个区间让其他区间的公共区间的区间长度最大，求这个最大值为多少。</p><h2 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h2><p>这道题最开始理解错题意了，害的我写了一大堆全删了……</p><p>我们先思考如果不删区间，怎么快速求出公共区间的长度。很显然，答案是所有区间中最靠左的右端点减去最靠右的左端点，如果值大于0，那么就存在所有区间都覆盖的公共区间。那么如果要删去一个区间，这个区间的左端点不是最靠右的，或者右端点不是最靠左的，那么对答案是没有影响的。那如果是上述两种情况怎么办呢？就再记录一个次左的右端点和次右的左端点就好了。</p><h2 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">500005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">} seg[maxn],s[maxn];</span><br><span class="line"><span class="keyword">int</span> n,left[maxn],right[maxn],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&seg[i].l,&seg[i].r);</span><br><span class="line">left[i]=seg[i].l;</span><br><span class="line">right[i]=seg[i].r;</span><br><span class="line">}</span><br><span class="line">sort(left+<span class="number">1</span>,left+n+<span class="number">1</span>);sort(right+<span class="number">1</span>,right+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> ls=left[n],rs=right[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(seg[i].l==ls) ls=left[n<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(seg[i].r==rs) rs=right[<span class="number">2</span>];</span><br><span class="line">ans=max(ans,rs-ls);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="f-books-queries"><a class="markdownIt-Anchor" href="#f-books-queries"></a> F - Books Queries</h1><blockquote><p><a href="http://codeforces.com/problemset/problem/1066/C" target="_blank" rel="noopener">Codeforces Round #515 (Div. 3)</a></p></blockquote><h2 id="题目大意-6"><a class="markdownIt-Anchor" href="#题目大意-6"></a> 题目大意</h2><p>维护一个数据结构，支持以下三种操作：</p><ul><li>L id：在现在序列的左边插一个编号为id的物品</li><li>R id：在现在序列的右边插一个编号为id的物品</li><li>? id：查询该点左面有几个元素，右面有几个元素，并取min输出</li></ul><h2 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h2><p>直接把数组向右平移maxn个单位，直接开两个指针模拟就好了……</p><h2 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstdio ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< cstring ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< algorithm ></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>< iostream ></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">500005</span>;</span><br><span class="line"><span class="keyword">int</span> pos[maxn],q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">cin</span>>>q;</span><br><span class="line"><span class="keyword">int</span> left=<span class="number">250000</span>,right=<span class="number">250000</span><span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">char</span> opt;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"><span class="built_in">cin</span>>>opt>>val;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="string">'L'</span>)</span><br><span class="line">{</span><br><span class="line">left--;</span><br><span class="line">pos[val]=left;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="string">'R'</span>)</span><br><span class="line">{</span><br><span class="line">right++;</span><br><span class="line">pos[val]=right;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="string">'?'</span>) <span class="built_in">cout</span><<min(pos[val]-left,right-pos[val])<<<span class="built_in">endl</min(pos[val]-left,right-pos[val])<<<span></span>;<br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>Day1比较温柔，难度顺序也是递升的。<br>要提高自己的英语水平了……</p><p><img alt="rank" data-src="https://cdn.jsdelivr.net/gh/lemonaaaaa/CDN/img/contest_rank/whuwvttf-day1_2th.png" class="lazyload"></p></body></html>]]></content>
      
      
      <categories>
          
          <category> Code life </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithms </tag>
            
            <tag> contests </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/hello-world/"/>
      <url>/2020/02/hello-world/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p></body></html>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
